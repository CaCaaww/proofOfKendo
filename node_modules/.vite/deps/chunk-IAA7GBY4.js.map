{
  "version": 3,
  "sources": ["../../@progress/kendo-intl/dist/es/cldr/default-data.js", "../../@progress/kendo-intl/dist/es/common/is-string.js", "../../@progress/kendo-intl/dist/es/error-details.js", "../../@progress/kendo-intl/dist/es/errors.js", "../../@progress/kendo-intl/dist/es/cldr/info.js", "../../@progress/kendo-intl/dist/es/common/constants.js", "../../@progress/kendo-intl/dist/es/cldr/load-numbers.js", "../../@progress/kendo-intl/dist/es/cldr/load-dates.js", "../../@progress/kendo-intl/dist/es/cldr/territory.js", "../../@progress/kendo-intl/dist/es/cldr/load-units.js", "../../@progress/kendo-intl/dist/es/cldr/load.js", "../../@progress/kendo-intl/dist/es/cldr/date-field-name.js", "../../@progress/kendo-intl/dist/es/cldr/date-format-names.js", "../../@progress/kendo-intl/dist/es/cldr/parse-range-date.js", "../../@progress/kendo-intl/dist/es/cldr/currency.js", "../../@progress/kendo-intl/dist/es/cldr/constants.js", "../../@progress/kendo-intl/dist/es/cldr/first-day.js", "../../@progress/kendo-intl/dist/es/cldr/weekend-range.js", "../../@progress/kendo-intl/dist/es/cldr/number-symbols.js", "../../@progress/kendo-intl/dist/es/common/is-negative-zero.js", "../../@progress/kendo-intl/dist/es/numbers/format-currency-symbol.js", "../../@progress/kendo-intl/dist/es/numbers/group-integer.js", "../../@progress/kendo-intl/dist/es/numbers/is-currency-style.js", "../../@progress/kendo-intl/dist/es/common/pad.js", "../../@progress/kendo-intl/dist/es/common/round.js", "../../@progress/kendo-intl/dist/es/numbers/standard-number-format.js", "../../@progress/kendo-intl/dist/es/numbers/utils.js", "../../@progress/kendo-intl/dist/es/numbers/custom-number-format.js", "../../@progress/kendo-intl/dist/es/numbers/format-options.js", "../../@progress/kendo-intl/dist/es/numbers/format-number.js", "../../@progress/kendo-intl/dist/es/common/is-number.js", "../../@progress/kendo-intl/dist/es/numbers/parse-number.js", "../../@progress/kendo-intl/dist/es/common/format-string.js", "../../@progress/kendo-intl/dist/es/dates/date-pattern.js", "../../@progress/kendo-intl/dist/es/dates/date-name-type.js", "../../@progress/kendo-intl/dist/es/dates/format-names.js", "../../@progress/kendo-intl/dist/es/common/is-date.js", "../../@progress/kendo-intl/dist/es/dates/constants.js", "../../@progress/kendo-intl/dist/es/dates/format-date.js", "../../@progress/kendo-intl/dist/es/dates/time-utils.js", "../../@progress/kendo-intl/dist/es/dates/parse-date.js", "../../@progress/kendo-intl/dist/es/dates/split-date-format.js", "../../@progress/kendo-intl/dist/es/format.js", "../../@progress/kendo-react-intl/Intl/IntlService.mjs", "../../@progress/kendo-react-intl/Localization/messages.mjs", "../../@progress/kendo-react-intl/Localization/LocalizationService.mjs", "../../@progress/kendo-react-intl/globalization/GlobalizationContext.mjs", "../../@progress/kendo-react-intl/intlUtils.mjs", "../../@progress/kendo-react-intl/server/ServerGlobalization.mjs", "../../@progress/kendo-react-intl/Intl/IntlProvider.mjs", "../../@progress/kendo-react-intl/Intl/load.mjs", "../../@progress/kendo-react-intl/Intl/IntlDataProvider.mjs", "../../@progress/kendo-react-intl/Localization/LocalizationProvider.mjs", "../../@progress/kendo-react-intl/Localization/loadMessages.mjs", "../../@progress/kendo-react-intl/Localization/LocalizationDataProvider.mjs", "../../@progress/kendo-react-intl/hooks/useInternationalization.mjs", "../../@progress/kendo-react-intl/hooks/useLocalization.mjs"],
  "sourcesContent": ["var defaultData = {\r\n    en: {\r\n        name: \"en\",\r\n        identity: {\r\n            version: {\r\n                _unicodeVersion: \"14.0.0\",\r\n                _cldrVersion: \"41\"\r\n            },\r\n            language: \"en\"\r\n        },\r\n        territory: \"US\",\r\n        numbers: {\r\n            symbols: {\r\n                decimal: \".\",\r\n                group: \",\",\r\n                list: \";\",\r\n                percentSign: \"%\",\r\n                plusSign: \"+\",\r\n                minusSign: \"-\",\r\n                exponential: \"E\",\r\n                superscriptingExponent: \"×\",\r\n                perMille: \"‰\",\r\n                infinity: \"∞\",\r\n                nan: \"NaN\",\r\n                timeSeparator: \":\",\r\n                approximatelySign: \"~\"\r\n            },\r\n            decimal: {\r\n                patterns: [\r\n                    \"n\"\r\n                ],\r\n                groupSize: [\r\n                    3\r\n                ]\r\n            },\r\n            scientific: {\r\n                patterns: [\r\n                    \"nEn\"\r\n                ],\r\n                groupSize: []\r\n            },\r\n            percent: {\r\n                patterns: [\r\n                    \"n%\"\r\n                ],\r\n                groupSize: [\r\n                    3\r\n                ]\r\n            },\r\n            currency: {\r\n                patterns: [\r\n                    \"$n\"\r\n                ],\r\n                groupSize: [\r\n                    3\r\n                ],\r\n                \"unitPattern-count-one\": \"n $\",\r\n                \"unitPattern-count-other\": \"n $\"\r\n            },\r\n            currencies: {\r\n                BGN: {\r\n                    displayName: \"Bulgarian Lev\",\r\n                    \"displayName-count-one\": \"Bulgarian lev\",\r\n                    \"displayName-count-other\": \"Bulgarian leva\",\r\n                    symbol: \"BGN\"\r\n                },\r\n                EUR: {\r\n                    displayName: \"Euro\",\r\n                    \"displayName-count-one\": \"euro\",\r\n                    \"displayName-count-other\": \"euros\",\r\n                    symbol: \"€\",\r\n                    \"symbol-alt-narrow\": \"€\"\r\n                },\r\n                USD: {\r\n                    displayName: \"US Dollar\",\r\n                    \"displayName-count-one\": \"US dollar\",\r\n                    \"displayName-count-other\": \"US dollars\",\r\n                    symbol: \"$\",\r\n                    \"symbol-alt-narrow\": \"$\"\r\n                }\r\n            },\r\n            localeCurrency: \"USD\",\r\n            accounting: {\r\n                patterns: [\r\n                    \"$n\",\r\n                    \"($n)\"\r\n                ],\r\n                groupSize: [\r\n                    3\r\n                ]\r\n            }\r\n        },\r\n        calendar: {\r\n            gmtFormat: \"GMT{0}\",\r\n            gmtZeroFormat: \"GMT\",\r\n            patterns: {\r\n                d: \"M/d/y\",\r\n                D: \"EEEE, MMMM d, y\",\r\n                m: \"MMM d\",\r\n                M: \"MMMM d\",\r\n                y: \"MMM y\",\r\n                Y: \"MMMM y\",\r\n                F: \"EEEE, MMMM d, y h:mm:ss a\",\r\n                g: \"M/d/y h:mm a\",\r\n                G: \"M/d/y h:mm:ss a\",\r\n                t: \"h:mm a\",\r\n                T: \"h:mm:ss a\",\r\n                s: \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\r\n                u: \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"\r\n            },\r\n            dateTimeFormats: {\r\n                full: \"{1} 'at' {0}\",\r\n                long: \"{1} 'at' {0}\",\r\n                medium: \"{1}, {0}\",\r\n                short: \"{1}, {0}\",\r\n                availableFormats: {\r\n                    Bh: \"h B\",\r\n                    Bhm: \"h:mm B\",\r\n                    Bhms: \"h:mm:ss B\",\r\n                    d: \"d\",\r\n                    E: \"ccc\",\r\n                    EBhm: \"E h:mm B\",\r\n                    EBhms: \"E h:mm:ss B\",\r\n                    Ed: \"d E\",\r\n                    Ehm: \"E h:mm a\",\r\n                    EHm: \"E HH:mm\",\r\n                    Ehms: \"E h:mm:ss a\",\r\n                    EHms: \"E HH:mm:ss\",\r\n                    Gy: \"y G\",\r\n                    GyMd: \"M/d/y GGGGG\",\r\n                    GyMMM: \"MMM y G\",\r\n                    GyMMMd: \"MMM d, y G\",\r\n                    GyMMMEd: \"E, MMM d, y G\",\r\n                    h: \"h a\",\r\n                    H: \"HH\",\r\n                    hm: \"h:mm a\",\r\n                    Hm: \"HH:mm\",\r\n                    hms: \"h:mm:ss a\",\r\n                    Hms: \"HH:mm:ss\",\r\n                    hmsv: \"h:mm:ss a v\",\r\n                    Hmsv: \"HH:mm:ss v\",\r\n                    hmv: \"h:mm a v\",\r\n                    Hmv: \"HH:mm v\",\r\n                    M: \"L\",\r\n                    Md: \"M/d\",\r\n                    MEd: \"E, M/d\",\r\n                    MMM: \"LLL\",\r\n                    MMMd: \"MMM d\",\r\n                    MMMEd: \"E, MMM d\",\r\n                    MMMMd: \"MMMM d\",\r\n                    \"MMMMW-count-one\": \"'week' W 'of' MMMM\",\r\n                    \"MMMMW-count-other\": \"'week' W 'of' MMMM\",\r\n                    ms: \"mm:ss\",\r\n                    y: \"y\",\r\n                    yM: \"M/y\",\r\n                    yMd: \"M/d/y\",\r\n                    yMEd: \"E, M/d/y\",\r\n                    yMMM: \"MMM y\",\r\n                    yMMMd: \"MMM d, y\",\r\n                    yMMMEd: \"E, MMM d, y\",\r\n                    yMMMM: \"MMMM y\",\r\n                    yQQQ: \"QQQ y\",\r\n                    yQQQQ: \"QQQQ y\",\r\n                    \"yw-count-one\": \"'week' w 'of' Y\",\r\n                    \"yw-count-other\": \"'week' w 'of' Y\"\r\n                }\r\n            },\r\n            timeFormats: {\r\n                full: \"h:mm:ss a zzzz\",\r\n                long: \"h:mm:ss a z\",\r\n                medium: \"h:mm:ss a\",\r\n                short: \"h:mm a\"\r\n            },\r\n            dateFormats: {\r\n                full: \"EEEE, MMMM d, y\",\r\n                long: \"MMMM d, y\",\r\n                medium: \"MMM d, y\",\r\n                short: \"M/d/yy\"\r\n            },\r\n            days: {\r\n                format: {\r\n                    abbreviated: [\r\n                        \"Sun\",\r\n                        \"Mon\",\r\n                        \"Tue\",\r\n                        \"Wed\",\r\n                        \"Thu\",\r\n                        \"Fri\",\r\n                        \"Sat\"\r\n                    ],\r\n                    narrow: [\r\n                        \"S\",\r\n                        \"M\",\r\n                        \"T\",\r\n                        \"W\",\r\n                        \"T\",\r\n                        \"F\",\r\n                        \"S\"\r\n                    ],\r\n                    short: [\r\n                        \"Su\",\r\n                        \"Mo\",\r\n                        \"Tu\",\r\n                        \"We\",\r\n                        \"Th\",\r\n                        \"Fr\",\r\n                        \"Sa\"\r\n                    ],\r\n                    wide: [\r\n                        \"Sunday\",\r\n                        \"Monday\",\r\n                        \"Tuesday\",\r\n                        \"Wednesday\",\r\n                        \"Thursday\",\r\n                        \"Friday\",\r\n                        \"Saturday\"\r\n                    ]\r\n                },\r\n                \"stand-alone\": {\r\n                    abbreviated: [\r\n                        \"Sun\",\r\n                        \"Mon\",\r\n                        \"Tue\",\r\n                        \"Wed\",\r\n                        \"Thu\",\r\n                        \"Fri\",\r\n                        \"Sat\"\r\n                    ],\r\n                    narrow: [\r\n                        \"S\",\r\n                        \"M\",\r\n                        \"T\",\r\n                        \"W\",\r\n                        \"T\",\r\n                        \"F\",\r\n                        \"S\"\r\n                    ],\r\n                    short: [\r\n                        \"Su\",\r\n                        \"Mo\",\r\n                        \"Tu\",\r\n                        \"We\",\r\n                        \"Th\",\r\n                        \"Fr\",\r\n                        \"Sa\"\r\n                    ],\r\n                    wide: [\r\n                        \"Sunday\",\r\n                        \"Monday\",\r\n                        \"Tuesday\",\r\n                        \"Wednesday\",\r\n                        \"Thursday\",\r\n                        \"Friday\",\r\n                        \"Saturday\"\r\n                    ]\r\n                }\r\n            },\r\n            months: {\r\n                format: {\r\n                    abbreviated: [\r\n                        \"Jan\",\r\n                        \"Feb\",\r\n                        \"Mar\",\r\n                        \"Apr\",\r\n                        \"May\",\r\n                        \"Jun\",\r\n                        \"Jul\",\r\n                        \"Aug\",\r\n                        \"Sep\",\r\n                        \"Oct\",\r\n                        \"Nov\",\r\n                        \"Dec\"\r\n                    ],\r\n                    narrow: [\r\n                        \"J\",\r\n                        \"F\",\r\n                        \"M\",\r\n                        \"A\",\r\n                        \"M\",\r\n                        \"J\",\r\n                        \"J\",\r\n                        \"A\",\r\n                        \"S\",\r\n                        \"O\",\r\n                        \"N\",\r\n                        \"D\"\r\n                    ],\r\n                    wide: [\r\n                        \"January\",\r\n                        \"February\",\r\n                        \"March\",\r\n                        \"April\",\r\n                        \"May\",\r\n                        \"June\",\r\n                        \"July\",\r\n                        \"August\",\r\n                        \"September\",\r\n                        \"October\",\r\n                        \"November\",\r\n                        \"December\"\r\n                    ]\r\n                },\r\n                \"stand-alone\": {\r\n                    abbreviated: [\r\n                        \"Jan\",\r\n                        \"Feb\",\r\n                        \"Mar\",\r\n                        \"Apr\",\r\n                        \"May\",\r\n                        \"Jun\",\r\n                        \"Jul\",\r\n                        \"Aug\",\r\n                        \"Sep\",\r\n                        \"Oct\",\r\n                        \"Nov\",\r\n                        \"Dec\"\r\n                    ],\r\n                    narrow: [\r\n                        \"J\",\r\n                        \"F\",\r\n                        \"M\",\r\n                        \"A\",\r\n                        \"M\",\r\n                        \"J\",\r\n                        \"J\",\r\n                        \"A\",\r\n                        \"S\",\r\n                        \"O\",\r\n                        \"N\",\r\n                        \"D\"\r\n                    ],\r\n                    wide: [\r\n                        \"January\",\r\n                        \"February\",\r\n                        \"March\",\r\n                        \"April\",\r\n                        \"May\",\r\n                        \"June\",\r\n                        \"July\",\r\n                        \"August\",\r\n                        \"September\",\r\n                        \"October\",\r\n                        \"November\",\r\n                        \"December\"\r\n                    ]\r\n                }\r\n            },\r\n            quarters: {\r\n                format: {\r\n                    abbreviated: [\r\n                        \"Q1\",\r\n                        \"Q2\",\r\n                        \"Q3\",\r\n                        \"Q4\"\r\n                    ],\r\n                    narrow: [\r\n                        \"1\",\r\n                        \"2\",\r\n                        \"3\",\r\n                        \"4\"\r\n                    ],\r\n                    wide: [\r\n                        \"1st quarter\",\r\n                        \"2nd quarter\",\r\n                        \"3rd quarter\",\r\n                        \"4th quarter\"\r\n                    ]\r\n                },\r\n                \"stand-alone\": {\r\n                    abbreviated: [\r\n                        \"Q1\",\r\n                        \"Q2\",\r\n                        \"Q3\",\r\n                        \"Q4\"\r\n                    ],\r\n                    narrow: [\r\n                        \"1\",\r\n                        \"2\",\r\n                        \"3\",\r\n                        \"4\"\r\n                    ],\r\n                    wide: [\r\n                        \"1st quarter\",\r\n                        \"2nd quarter\",\r\n                        \"3rd quarter\",\r\n                        \"4th quarter\"\r\n                    ]\r\n                }\r\n            },\r\n            dayPeriods: {\r\n                format: {\r\n                    abbreviated: {\r\n                        midnight: \"midnight\",\r\n                        am: \"AM\",\r\n                        \"am-alt-variant\": \"am\",\r\n                        noon: \"noon\",\r\n                        pm: \"PM\",\r\n                        \"pm-alt-variant\": \"pm\",\r\n                        morning1: \"in the morning\",\r\n                        afternoon1: \"in the afternoon\",\r\n                        evening1: \"in the evening\",\r\n                        night1: \"at night\"\r\n                    },\r\n                    narrow: {\r\n                        midnight: \"mi\",\r\n                        am: \"a\",\r\n                        \"am-alt-variant\": \"am\",\r\n                        noon: \"n\",\r\n                        pm: \"p\",\r\n                        \"pm-alt-variant\": \"pm\",\r\n                        morning1: \"in the morning\",\r\n                        afternoon1: \"in the afternoon\",\r\n                        evening1: \"in the evening\",\r\n                        night1: \"at night\"\r\n                    },\r\n                    wide: {\r\n                        midnight: \"midnight\",\r\n                        am: \"AM\",\r\n                        \"am-alt-variant\": \"am\",\r\n                        noon: \"noon\",\r\n                        pm: \"PM\",\r\n                        \"pm-alt-variant\": \"pm\",\r\n                        morning1: \"in the morning\",\r\n                        afternoon1: \"in the afternoon\",\r\n                        evening1: \"in the evening\",\r\n                        night1: \"at night\"\r\n                    }\r\n                },\r\n                \"stand-alone\": {\r\n                    abbreviated: {\r\n                        midnight: \"midnight\",\r\n                        am: \"AM\",\r\n                        \"am-alt-variant\": \"am\",\r\n                        noon: \"noon\",\r\n                        pm: \"PM\",\r\n                        \"pm-alt-variant\": \"pm\",\r\n                        morning1: \"morning\",\r\n                        afternoon1: \"afternoon\",\r\n                        evening1: \"evening\",\r\n                        night1: \"night\"\r\n                    },\r\n                    narrow: {\r\n                        midnight: \"midnight\",\r\n                        am: \"AM\",\r\n                        \"am-alt-variant\": \"am\",\r\n                        noon: \"noon\",\r\n                        pm: \"PM\",\r\n                        \"pm-alt-variant\": \"pm\",\r\n                        morning1: \"morning\",\r\n                        afternoon1: \"afternoon\",\r\n                        evening1: \"evening\",\r\n                        night1: \"night\"\r\n                    },\r\n                    wide: {\r\n                        midnight: \"midnight\",\r\n                        am: \"AM\",\r\n                        \"am-alt-variant\": \"am\",\r\n                        noon: \"noon\",\r\n                        pm: \"PM\",\r\n                        \"pm-alt-variant\": \"pm\",\r\n                        morning1: \"morning\",\r\n                        afternoon1: \"afternoon\",\r\n                        evening1: \"evening\",\r\n                        night1: \"night\"\r\n                    }\r\n                }\r\n            },\r\n            eras: {\r\n                format: {\r\n                    wide: {\r\n                        \"0\": \"Before Christ\",\r\n                        \"1\": \"Anno Domini\",\r\n                        \"0-alt-variant\": \"Before Common Era\",\r\n                        \"1-alt-variant\": \"Common Era\"\r\n                    },\r\n                    abbreviated: {\r\n                        \"0\": \"BC\",\r\n                        \"1\": \"AD\",\r\n                        \"0-alt-variant\": \"BCE\",\r\n                        \"1-alt-variant\": \"CE\"\r\n                    },\r\n                    narrow: {\r\n                        \"0\": \"B\",\r\n                        \"1\": \"A\",\r\n                        \"0-alt-variant\": \"BCE\",\r\n                        \"1-alt-variant\": \"CE\"\r\n                    }\r\n                }\r\n            },\r\n            dateFields: {\r\n                era: {\r\n                    wide: \"era\",\r\n                    short: \"era\",\r\n                    narrow: \"era\"\r\n                },\r\n                year: {\r\n                    wide: \"year\",\r\n                    short: \"yr.\",\r\n                    narrow: \"yr.\"\r\n                },\r\n                quarter: {\r\n                    wide: \"quarter\",\r\n                    short: \"qtr.\",\r\n                    narrow: \"qtr.\"\r\n                },\r\n                month: {\r\n                    wide: \"month\",\r\n                    short: \"mo.\",\r\n                    narrow: \"mo.\"\r\n                },\r\n                week: {\r\n                    wide: \"week\",\r\n                    short: \"wk.\",\r\n                    narrow: \"wk.\"\r\n                },\r\n                weekOfMonth: {\r\n                    wide: \"week of month\",\r\n                    short: \"wk. of mo.\",\r\n                    narrow: \"wk. of mo.\"\r\n                },\r\n                day: {\r\n                    wide: \"day\",\r\n                    short: \"day\",\r\n                    narrow: \"day\"\r\n                },\r\n                dayOfYear: {\r\n                    wide: \"day of year\",\r\n                    short: \"day of yr.\",\r\n                    narrow: \"day of yr.\"\r\n                },\r\n                weekday: {\r\n                    wide: \"day of the week\",\r\n                    short: \"day of wk.\",\r\n                    narrow: \"day of wk.\"\r\n                },\r\n                weekdayOfMonth: {\r\n                    wide: \"weekday of the month\",\r\n                    short: \"wkday. of mo.\",\r\n                    narrow: \"wkday. of mo.\"\r\n                },\r\n                dayperiod: {\r\n                    short: \"AM/PM\",\r\n                    wide: \"AM/PM\",\r\n                    narrow: \"AM/PM\"\r\n                },\r\n                hour: {\r\n                    wide: \"hour\",\r\n                    short: \"hr.\",\r\n                    narrow: \"hr.\"\r\n                },\r\n                minute: {\r\n                    wide: \"minute\",\r\n                    short: \"min.\",\r\n                    narrow: \"min.\"\r\n                },\r\n                second: {\r\n                    wide: \"second\",\r\n                    short: \"sec.\",\r\n                    narrow: \"sec.\"\r\n                },\r\n                zone: {\r\n                    wide: \"time zone\",\r\n                    short: \"zone\",\r\n                    narrow: \"zone\"\r\n                },\r\n                millisecond: {\r\n                    narrow: \"ms\",\r\n                    short: \"ms\",\r\n                    wide: \"millisecond\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    supplemental: {\r\n        likelySubtags: {\r\n            en: \"en-Latn-US\"\r\n        },\r\n        currencyData: {\r\n            region: {\r\n                US: [\r\n                    {\r\n                        USD: {\r\n                            _from: \"1792-01-01\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        weekData: {\r\n            firstDay: {\r\n                US: \"sun\"\r\n            },\r\n            weekendStart: {\r\n                \"001\": \"sat\"\r\n            },\r\n            weekendEnd: {\r\n                \"001\": \"sun\"\r\n            }\r\n        }\r\n    }\r\n};\r\nexport default defaultData;", "export default function isString(value) {\r\n    return typeof value === \"string\";\r\n}", "//The error is represented by unique name and corresponding message\r\n//The message can contain placeholders with index, e.g. {0}, {1}\r\n\r\nexport default {\r\n    \"NoLocale\": \"Missing locale info for '{0}'\",\r\n    \"NoCurrency\": \"Cannot determine currency information. Please load the locale currencies data.\",\r\n    \"NoSupplementalCurrency\": \"Cannot determine currency. Please load the supplemental currencyData.\",\r\n    \"NoCurrencyRegion\": \"No currency data for region '{0}'\",\r\n    \"NoCurrencyDisplay\": \"Cannot determine currency display information. Please load the locale currencies data. The default culture does not include the all currencies data.\",\r\n    \"NoGMTInfo\": \"Cannot determine locale GMT format. Please load the locale timeZoneNames data.\",\r\n    \"NoWeekData\": \"Cannot determine locale first day of week. Please load the supplemental weekData.\",\r\n    \"NoFirstDay\": \"Cannot determine locale first day of week. Please load the supplemental weekData. The default culture includes only the 'en-US' first day info.\",\r\n    \"NoValidCurrency\": \"Cannot determine a default currency for the {0} locale. Please specify explicitly the currency with the format options.\",\r\n    \"NoDateFieldNames\": \"Cannot determine the locale date field names. Please load the locale dateFields data.\"\r\n};\r\n", "import errorDetails from './error-details';\r\n\r\nvar formatRegExp = /\\{(\\d+)}?\\}/g;\r\n\r\nvar IntlError = function IntlError(ref) {\r\n    var name = ref.name;\r\n    var message = ref.message;\r\n\r\n    if (!name || !message) {\r\n        throw new Error(\"{ name: string, message: string } object is required!\");\r\n    }\r\n\r\n    this.name = name;\r\n    this.message = message;\r\n};\r\n\r\nIntlError.prototype.formatMessage = function formatMessage () {\r\n        var values = [], len = arguments.length;\r\n        while ( len-- ) values[ len ] = arguments[ len ];\r\n\r\n    var flattenValues = flatten(values);\r\n\r\n    var formattedMessage = this.message.replace(formatRegExp, function(match, index) {\r\n        return flattenValues[parseInt(index, 10)];\r\n    });\r\n\r\n    return ((this.name) + \": \" + formattedMessage);\r\n};\r\n\r\nIntlError.prototype.error = function error () {\r\n        var values = [], len = arguments.length;\r\n        while ( len-- ) values[ len ] = arguments[ len ];\r\n\r\n    return new Error(this.formatMessage(values));\r\n};\r\n\r\nvar flatten = function(arr) {\r\n    return arr.reduce(function (a, b) { return a.concat(b); }, []);\r\n};\r\n\r\nvar toIntlErrors = function(errors) {\r\n    var predicate = function(prev, name) {\r\n        prev[name] = new IntlError({ name: name, message: errors[name] });\r\n        return prev;\r\n    };\r\n\r\n    return Object.keys(errors).reduce(predicate, {});\r\n};\r\n\r\nvar errors = toIntlErrors(errorDetails);\r\n\r\nexport {\r\n    errors,\r\n    IntlError,\r\n    toIntlErrors\r\n};\r\n", "import defaultData from './default-data';\r\nimport isString from '../common/is-string';\r\nimport { errors } from '../errors';\r\n\r\nfunction availableLocaleInfo(fullName, suffixes) {\r\n    var parts = fullName.split(\"-\");\r\n    var language = parts[0];\r\n    var script = parts[1];\r\n    var territory = parts[2];\r\n\r\n    return cldr[fullName] || (suffixes.indexOf(territory) !== -1 && cldr[language + \"-\" + territory]) || (suffixes.indexOf(script) !== -1 && cldr[language + \"-\" + script]) || cldr[language];\r\n}\r\n\r\nfunction localeFullName(language, suffixes) {\r\n    var likelySubtags = cldr.supplemental.likelySubtags;\r\n\r\n    for (var idx = 0; idx < suffixes.length; idx++) {\r\n        var name = likelySubtags[language + \"-\" + suffixes[idx ]];\r\n        if (name) {\r\n            return name;\r\n        }\r\n    }\r\n\r\n    if (likelySubtags[language]) {\r\n        return likelySubtags[language];\r\n    }\r\n}\r\n\r\nexport var cldr = defaultData;\r\n\r\nexport function getLocaleInfo(locale) {\r\n    var info;\r\n    if (isString(locale)) {\r\n        info = localeInfo(locale);\r\n    } else {\r\n        info = locale;\r\n    }\r\n    return info;\r\n}\r\n\r\nexport function localeInfo(locale) {\r\n    if (cldr[locale]) {\r\n        return cldr[locale];\r\n    }\r\n\r\n    var likelySubtags = cldr.supplemental.likelySubtags;\r\n    if (likelySubtags) {\r\n        var parts = locale.split(\"-\");\r\n        var language = parts[0];\r\n        var suffixes = parts.slice(1);\r\n        var fullName = localeFullName(language, suffixes);\r\n        var info = fullName ? availableLocaleInfo(fullName, suffixes) : null;\r\n        if (info) {\r\n            return info;\r\n        }\r\n    }\r\n\r\n    throw errors.NoLocale.error(locale);\r\n}\r\n", "export var DECIMAL = \"decimal\";\r\nexport var CURRENCY = \"currency\";\r\nexport var ACCOUNTING = \"accounting\";\r\nexport var PERCENT = \"percent\";\r\nexport var SCIENTIFIC = \"scientific\";\r\n\r\nexport var CURRENCY_PLACEHOLDER = \"$\";\r\nexport var PERCENT_PLACEHOLDER = \"%\";\r\nexport var NUMBER_PLACEHOLDER = \"n\";\r\n\r\nexport var LIST_SEPARATOR = \";\";\r\nexport var GROUP_SEPARATOR = \",\";\r\n\r\nexport var POINT = \".\";\r\nexport var EMPTY = \"\";\r\n\r\nexport var DEFAULT_LOCALE = \"en\";\r\n\r\n", "import { cldr } from './info';\r\nimport { CURRENCY, ACCOUNTING, DECIMAL, CURRENCY_PLACEHOLDER, NUMBER_PLACEHOLDER, LIST_SEPARATOR, GROUP_SEPARATOR, POINT } from '../common/constants';\r\n\r\nvar LATIN_NUMBER_FORMATS = \"Formats-numberSystem-latn\";\r\nvar LATIN_NUMBER_SYMBOLS = \"symbols-numberSystem-latn\";\r\n\r\nvar patternRegExp = /([#,0.]+)/g;\r\nvar cldrCurrencyRegExp = /¤/g;\r\n\r\nfunction getPatterns(pattern) {\r\n    patternRegExp.lastIndex = 0;\r\n\r\n    return pattern.replace(cldrCurrencyRegExp, CURRENCY_PLACEHOLDER).replace(patternRegExp, NUMBER_PLACEHOLDER).split(LIST_SEPARATOR);\r\n}\r\n\r\nfunction getGroupSize(pattern) {\r\n    patternRegExp.lastIndex = 0;\r\n\r\n    var numberPatterns = patternRegExp.exec(pattern.split(LIST_SEPARATOR)[0])[0].split(POINT);\r\n    var integer = numberPatterns[0];\r\n\r\n    var groupSize = integer.split(GROUP_SEPARATOR).slice(1).map(function(group) {\r\n        return group.length;\r\n    }).reverse();\r\n\r\n    return groupSize;\r\n}\r\n\r\nfunction loadCurrencyUnitPatterns(currencyInfo, currencyFormats) {\r\n    for (var field in currencyFormats) {\r\n        if (field.startsWith(\"unitPattern\")) {\r\n            currencyInfo[field] = currencyFormats[field].replace(\"{0}\", NUMBER_PLACEHOLDER).replace(\"{1}\", CURRENCY_PLACEHOLDER);\r\n        }\r\n    }\r\n}\r\n\r\nexport default function loadNumbersInfo(locale, info) {\r\n    var localeInfo = cldr[locale];\r\n    var numbers = localeInfo.numbers = localeInfo.numbers || {};\r\n    numbers.symbols = numbers.symbols || {};\r\n    for (var field in info) {\r\n        if (field === LATIN_NUMBER_SYMBOLS) {\r\n            Object.assign(numbers.symbols, info[field]);\r\n        } else if (field.includes(LATIN_NUMBER_FORMATS)) {\r\n            var style = field.substr(0, field.indexOf(LATIN_NUMBER_FORMATS));\r\n            var pattern = info[field].standard;\r\n            numbers[style] = {\r\n                patterns: getPatterns(pattern)\r\n            };\r\n            if (style === CURRENCY) {\r\n                numbers[style].groupSize = getGroupSize((info[DECIMAL + LATIN_NUMBER_FORMATS] || info[field]).standard);\r\n                loadCurrencyUnitPatterns(numbers[style], info[field]);\r\n                numbers[ACCOUNTING] = {\r\n                    patterns: getPatterns(info[field][ACCOUNTING]),\r\n                    groupSize: numbers[style].groupSize\r\n                };\r\n            } else {\r\n                numbers[style].groupSize = getGroupSize(pattern);\r\n            }\r\n        } else if (field === \"currencies\") {\r\n            numbers.currencies = info[field];\r\n        }\r\n    }\r\n}", "import { cldr } from './info';\r\n\r\nvar predefinedDatePatterns = {\r\n    s: \"yyyy'-'MM'-'dd'T'HH':'mm':'ss\",\r\n    u: \"yyyy'-'MM'-'dd HH':'mm':'ss'Z'\"\r\n};\r\n\r\nvar YEAR_REGEX = /y+/g;\r\nvar SHORT_DATE = [ [ \"dateFormats\", \"short\" ] ];\r\n\r\nvar datePatterns = {\r\n    D: [ [ \"dateFormats\", \"full\" ] ],\r\n    m: [ [ \"dateTimeFormats\", \"availableFormats\", \"MMMd\" ] ],\r\n    M: [ [ \"dateTimeFormats\", \"availableFormats\", \"MMMMd\" ] ],\r\n    y: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMMM\" ] ],\r\n    Y: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMMMM\" ] ],\r\n    F: [ [ \"dateFormats\", \"full\" ], [ \"timeFormats\", \"medium\" ] ],\r\n    g: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ], [ \"timeFormats\", \"short\" ] ],\r\n    G: [ [ \"dateTimeFormats\", \"availableFormats\", \"yMd\" ], [ \"timeFormats\", \"medium\" ] ],\r\n    t: [ [ \"timeFormats\", \"short\" ] ],\r\n    T: [ [ \"timeFormats\", \"medium\" ] ]\r\n};\r\n\r\nfunction toArray(obj) {\r\n    var result = [];\r\n    var names = Object.getOwnPropertyNames(obj);\r\n    for (var idx = 0; idx < names.length; idx++) {\r\n        var value = obj[names[idx]];\r\n        result.push(value);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getCalendarNames(info, isObj) {\r\n    var result = {};\r\n    for (var formatType in info) {\r\n        var names = result[formatType] = {};\r\n        for (var format in info[formatType]) {\r\n            var formats = info[formatType][format];\r\n            names[format] = isObj ? formats : toArray(formats);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getEraNames(eras) {\r\n    var result = {};\r\n    var format = result.format = {};\r\n    var eraNameMap = {\r\n        eraAbbr: \"abbreviated\",\r\n        eraNames: \"wide\",\r\n        eraNarrow: \"narrow\"\r\n    };\r\n\r\n    for (var eraFormatName in eras) {\r\n        var formatName = eraNameMap[eraFormatName];\r\n        format[formatName] = eras[eraFormatName];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction loadCalendarNames(locale, calendar) {\r\n    var localeCalendar = cldr[locale].calendar;\r\n    localeCalendar.days = getCalendarNames(calendar.days);\r\n    localeCalendar.months = getCalendarNames(calendar.months);\r\n    localeCalendar.quarters = getCalendarNames(calendar.quarters);\r\n    localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);\r\n\r\n    localeCalendar.eras = getEraNames(calendar.eras);\r\n}\r\n\r\nfunction loadCalendarDateFields(locale, fields) {\r\n    var localeCalendar = cldr[locale].calendar;\r\n    var dateFields = {};\r\n\r\n    for (var field in fields) {\r\n        var ref = field.split('-');\r\n        var fieldName = ref[0];\r\n        var formatType = ref[1]; if ( formatType === void 0 ) formatType = 'wide';\r\n        var fieldInfo = dateFields[fieldName] || {};\r\n        var displayName = fields[field].displayName;\r\n\r\n        if (!displayName) { continue; }\r\n\r\n        fieldInfo[formatType] = displayName;\r\n        dateFields[fieldName] = fieldInfo;\r\n    }\r\n\r\n    localeCalendar.dateFields = dateFields;\r\n}\r\n\r\nfunction getPredefinedFormat(paths, calendar) {\r\n    var result = [];\r\n\r\n    for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {\r\n        var fields = paths[ pathIdx ];\r\n        var pattern = calendar;\r\n        for (var idx = 0; idx < fields.length; idx++) {\r\n            pattern = pattern[fields[idx]];\r\n        }\r\n        result.push(pattern);\r\n    }\r\n\r\n    return result.join(\" \");\r\n}\r\n\r\nfunction loadCalendarPatterns(locale, calendar) {\r\n    var cldrCalendar = cldr[locale].calendar;\r\n    var patterns = cldrCalendar.patterns = {};\r\n\r\n    patterns.d = getPredefinedFormat(SHORT_DATE, calendar).replace(YEAR_REGEX, 'y');\r\n\r\n    for (var pattern in datePatterns) {\r\n        patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);\r\n    }\r\n\r\n    for (var pattern$1 in predefinedDatePatterns) {\r\n        patterns[pattern$1] = predefinedDatePatterns[pattern$1];\r\n    }\r\n\r\n    var dateTimeFormats = calendar.dateTimeFormats;\r\n    cldrCalendar.dateTimeFormats = {\r\n        full: dateTimeFormats.full,\r\n        long: dateTimeFormats.long,\r\n        medium: dateTimeFormats.medium,\r\n        short: dateTimeFormats.short,\r\n        availableFormats: dateTimeFormats.availableFormats\r\n    };\r\n    cldrCalendar.timeFormats = calendar.timeFormats;\r\n    cldrCalendar.dateFormats = calendar.dateFormats;\r\n}\r\n\r\n\r\nexport default function loadCalendarInfo(locale, info) {\r\n    var calendar = cldr[locale].calendar = cldr[locale].calendar || {};\r\n    for (var field in info) {\r\n        if (field === \"timeZoneNames\") {\r\n            calendar.gmtFormat = info[field].gmtFormat;\r\n            calendar.gmtZeroFormat = info[field].gmtZeroFormat;\r\n        } else if (field === \"calendars\" && info[field].gregorian) {\r\n            loadCalendarPatterns(locale, info[field].gregorian);\r\n            loadCalendarNames(locale, info[field].gregorian);\r\n        } else if (field === \"fields\") {\r\n            loadCalendarDateFields(locale, info.fields);\r\n        }\r\n    }\r\n}\r\n", "import { cldr } from './info';\r\n\r\nfunction territoryFromName(name, identity) {\r\n    var likelySubtags = cldr.supplemental.likelySubtags;\r\n    var parts = name.split(\"-\");\r\n    if (likelySubtags) {\r\n        var likelyName = likelySubtags[name] || likelySubtags[parts[0]];\r\n        if (likelyName) {\r\n            parts = likelyName.split(\"-\");\r\n        }\r\n    }\r\n\r\n    if (identity) {\r\n        for (var idx = parts.length - 1; idx >= 1; idx--) {\r\n            var part = parts[idx];\r\n            if (part === identity.variant || part === identity.script) {\r\n                parts.splice(idx, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    var length = parts.length;\r\n\r\n    if (length > 1) {\r\n        var territory = parts[length - 1];\r\n        return territory.toUpperCase();\r\n    }\r\n}\r\n\r\nexport default function localeTerritory(info) {\r\n    if (info.territory) {\r\n        return info.territory;\r\n    }\r\n\r\n    var name = info.name;\r\n    var identity = info.identity;\r\n    var territory;\r\n\r\n    if (identity && identity.territory) {\r\n        territory = identity.territory;\r\n    } else {\r\n        territory = territoryFromName(name, identity);\r\n    }\r\n\r\n    info.territory = territory;\r\n\r\n    return territory;\r\n}\r\n", "var MILLISECOND = 'duration-millisecond';\r\nvar UNIT_PATTERN_ONE = 'unitPattern-count-one';\r\nvar UNIT_PATTERN_OTHER = 'unitPattern-count-other';\r\nvar placeholderPattern = /\\{0\\}\\s?/;\r\n\r\nfunction extractUnit(unit) {\r\n    var value = unit[UNIT_PATTERN_ONE] || unit[UNIT_PATTERN_OTHER];\r\n    return value.replace(placeholderPattern, '');\r\n}\r\n\r\nexport default function loadUnits(localeInfo, units) {\r\n    localeInfo.calendar.dateFields.millisecond = {\r\n        narrow: extractUnit(units.narrow[MILLISECOND]),\r\n        short: extractUnit(units.short[MILLISECOND]),\r\n        wide: extractUnit(units.long[MILLISECOND])\r\n    };\r\n}\r\n", "import { cldr } from './info';\r\nimport loadNumbersInfo from './load-numbers';\r\nimport loadCalendarInfo from './load-dates';\r\nimport localeTerritory from './territory';\r\nimport loadUnits from './load-units';\r\n\r\nfunction loadLocale(locale, info) {\r\n    for (var field in info) {\r\n        if (field === \"numbers\") {\r\n            loadNumbersInfo(locale, info[field]);\r\n        } else if (field === \"dates\") {\r\n            loadCalendarInfo(locale, info[field]);\r\n        }\r\n    }\r\n}\r\n\r\nexport default function load() {\r\n    var arguments$1 = arguments;\r\n\r\n    var length = arguments.length;\r\n    for (var idx = 0; idx < length; idx++) {\r\n        var entry = arguments$1[idx];\r\n        if (entry.main) {\r\n            var locale = Object.keys(entry.main)[0];\r\n            var info = entry.main[locale];\r\n            var localeInfo = cldr[locale] = cldr[locale] || {};\r\n\r\n            if (info.units) {\r\n                loadUnits(localeInfo, info.units);\r\n            } else {\r\n                localeInfo.name = localeInfo.name || locale;\r\n                localeInfo.identity = localeInfo.identity || info.identity;\r\n\r\n                localeTerritory(localeInfo);\r\n                loadLocale(locale, info);\r\n            }\r\n        } else if (entry.supplemental) {\r\n            if (entry.supplemental.weekData) {\r\n                cldr.supplemental.weekData = {\r\n                    firstDay: entry.supplemental.weekData.firstDay,\r\n                    weekendStart: entry.supplemental.weekData.weekendStart,\r\n                    weekendEnd: entry.supplemental.weekData.weekendEnd\r\n                };\r\n            } else if (entry.supplemental.likelySubtags) {\r\n                cldr.supplemental.likelySubtags = Object.assign(cldr.supplemental.likelySubtags, entry.supplemental.likelySubtags);\r\n            } else if (entry.supplemental.currencyData) {\r\n                var currencyData = cldr.supplemental.currencyData;\r\n                currencyData.region = Object.assign(currencyData.region || {}, entry.supplemental.currencyData.region);\r\n                currencyData.fractions = Object.assign(currencyData.fractions || {}, entry.supplemental.currencyData.fractions);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { localeInfo } from './info';\r\nimport { errors } from '../errors';\r\nimport { DEFAULT_LOCALE } from '../common/constants';\r\n\r\nexport default function dateFieldName(options, locale) {\r\n    if ( locale === void 0 ) locale = DEFAULT_LOCALE;\r\n\r\n    var info = localeInfo(locale);\r\n    var dateFields = info.calendar.dateFields;\r\n    if (!dateFields) {\r\n        throw errors.NoDateFieldNames.error();\r\n    }\r\n\r\n    var fieldNameInfo = dateFields[options.type] || {};\r\n\r\n    return fieldNameInfo[options.nameType] || fieldNameInfo['wide'];\r\n}\r\n", "import { getLocaleInfo } from './info';\r\nimport { EMPTY } from '../common/constants';\r\n\r\nfunction lowerArray(arr) {\r\n    var result = [];\r\n    for (var idx = 0; idx < arr.length; idx++) {\r\n        result.push(arr[idx].toLowerCase());\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction lowerObject(obj) {\r\n    var result = {};\r\n    for (var field in obj) {\r\n        result[field] = obj[field].toLowerCase();\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction cloneLower(obj) {\r\n    var result = Array.isArray(obj) ? lowerArray(obj) : lowerObject(obj);\r\n    return result;\r\n}\r\n\r\nexport default function dateFormatNames(locale, options) {\r\n    var type = options.type;\r\n    var nameType = options.nameType;\r\n    var standAlone = options.standAlone;\r\n    var lower = options.lower;\r\n    var info = getLocaleInfo(locale);\r\n    var formatType = standAlone ? \"stand-alone\" : \"format\";\r\n    var lowerNameType = (lower ? \"lower-\" : EMPTY) + nameType;\r\n    var formatNames = info.calendar[type][formatType];\r\n    var result = formatNames[lowerNameType];\r\n    if (!result && lower) {\r\n        result = formatNames[lowerNameType] = cloneLower(formatNames[nameType]);\r\n    }\r\n    return result;\r\n}", "export default function parseRangeDate(value) {\r\n    var parts = value.split('-');\r\n    var year = parseInt(parts[0], 10);\r\n    var month = parseInt(parts[1], 10) - 1;\r\n    var day = parseInt(parts[2], 10);\r\n\r\n    return new Date(year, month, day);\r\n}\r\n", "import { cldr, getLocaleInfo } from './info';\r\nimport { errors } from '../errors';\r\nimport localeTerritory from './territory';\r\nimport parseRangeDate from './parse-range-date';\r\n\r\n/* eslint-disable consistent-return */\r\n\r\nvar NoCurrency = errors.NoCurrency;\r\nvar NoCurrencyDisplay = errors.NoCurrencyDisplay;\r\nvar NoSupplementalCurrency = errors.NoSupplementalCurrency;\r\nvar NoCurrencyRegion = errors.NoCurrencyRegion;\r\nvar NoValidCurrency = errors.NoValidCurrency;\r\n\r\nvar DEFAULT_CURRENCY_FRACTIONS = 2;\r\nvar SYMBOL = \"symbol\";\r\nvar INVALID_CURRENCY_CODE = 'XXX';\r\n\r\nvar GLOBAL_CURRENCIES = {\r\n    '001': 'USD', // 001 refers to world. not sure if it is correct to assume USD but seems better than throw an error\r\n    '150': 'EUR' // 150 territory for Europe\r\n\r\n};\r\n\r\nfunction getCurrencyInfo(locale, currency, throwIfNoValid) {\r\n    var info = getLocaleInfo(locale);\r\n    var currencies = info.numbers.currencies;\r\n    if (!currencies) {\r\n        if (throwIfNoValid) {\r\n            throw NoCurrency.error();\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    var currencyDisplayInfo = currencies[currency];\r\n\r\n    if (!currencyDisplayInfo) {\r\n        if (throwIfNoValid) {\r\n            throw NoCurrencyDisplay.error();\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    return currencyDisplayInfo;\r\n}\r\n\r\nfunction lengthComparer(a, b) {\r\n    return b.length - a.length;\r\n}\r\n\r\nfunction regionCurrency(regionCurrencies) {\r\n    var latestValidUntil, latestValidUntilRange;\r\n    var latestStillValid, latestStillValidDate;\r\n\r\n    for (var idx = 0; idx < regionCurrencies.length; idx++) {\r\n        var currency = regionCurrencies[idx];\r\n        var code = Object.keys(currency)[0];\r\n        var info = currency[code];\r\n        if (code !== INVALID_CURRENCY_CODE && info._tender !== 'false' && info._from) {\r\n            if (!info._to) {\r\n                var stillValidDate = parseRangeDate(info._from);\r\n                if (!latestStillValidDate || latestStillValidDate < stillValidDate) {\r\n                    latestStillValid = code;\r\n                    latestStillValidDate = stillValidDate;\r\n                }\r\n            } else if (!latestStillValid) {\r\n                var validFrom = parseRangeDate(info._from);\r\n                var validTo = parseRangeDate(info._to);\r\n                if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {\r\n                    latestValidUntil = code;\r\n                    latestValidUntilRange = {\r\n                        from: validFrom,\r\n                        to: validTo\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return latestStillValid || latestValidUntil;\r\n}\r\n\r\nexport function currencyDisplays(locale, currency, throwIfNoValid) {\r\n    if ( throwIfNoValid === void 0 ) throwIfNoValid = true;\r\n\r\n    var currencyInfo = getCurrencyInfo(locale, currency, throwIfNoValid);\r\n    if (!currencyInfo) {\r\n        return;\r\n    }\r\n\r\n    if (!currencyInfo.displays) {\r\n        var displays = [ currency ];\r\n        for (var field in currencyInfo) {\r\n            displays.push(currencyInfo[field]);\r\n        }\r\n        displays.sort(lengthComparer);\r\n        currencyInfo.displays = displays;\r\n    }\r\n\r\n    return currencyInfo.displays;\r\n}\r\n\r\nexport function currencyDisplay(locale, options) {\r\n    var value = options.value;\r\n    var currency = options.currency;\r\n    var currencyDisplay = options.currencyDisplay; if ( currencyDisplay === void 0 ) currencyDisplay = SYMBOL;\r\n\r\n    if (currencyDisplay === \"code\") {\r\n        return currency;\r\n    }\r\n\r\n    var currencyInfo = getCurrencyInfo(locale, currency, true);\r\n    var result;\r\n\r\n    if (currencyDisplay === SYMBOL) {\r\n        result = currencyInfo[\"symbol-alt-narrow\"] || currencyInfo[SYMBOL] || currency;\r\n    } else {\r\n        if (typeof value === \"undefined\" || value !== 1) {\r\n            result = currencyInfo[\"displayName-count-other\"];\r\n        } else {\r\n            result = currencyInfo[\"displayName-count-one\"];\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function currencyFractionOptions(code) {\r\n    var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\r\n    var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;\r\n\r\n    var fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];\r\n\r\n    if (fractions && fractions._digits) {\r\n        maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);\r\n    }\r\n\r\n    return {\r\n        minimumFractionDigits: minimumFractionDigits,\r\n        maximumFractionDigits: maximumFractionDigits\r\n    };\r\n}\r\n\r\nexport function territoryCurrencyCode(territory, throwIfNoValid) {\r\n    if ( throwIfNoValid === void 0 ) throwIfNoValid = true;\r\n\r\n    if (GLOBAL_CURRENCIES[territory]) {\r\n        return GLOBAL_CURRENCIES[territory];\r\n    }\r\n\r\n    var currencyData = cldr.supplemental.currencyData;\r\n    if (!currencyData) {\r\n        if (throwIfNoValid) {\r\n            throw NoSupplementalCurrency.error();\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    var regionCurrencies = currencyData.region[territory];\r\n\r\n    if (!regionCurrencies) {\r\n        if (throwIfNoValid) {\r\n            throw NoCurrencyRegion.error(territory);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    var currencyCode = regionCurrency(regionCurrencies);\r\n\r\n    return currencyCode;\r\n}\r\n\r\nexport function localeCurrency(locale, throwIfNoValid) {\r\n    var info = getLocaleInfo(locale);\r\n    var numbers = info.numbers;\r\n\r\n    if (!numbers.localeCurrency) {\r\n        var currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);\r\n\r\n        if (!currency && throwIfNoValid) {\r\n            throw NoValidCurrency.error(info.name);\r\n        }\r\n\r\n        numbers.localeCurrency = currency;\r\n    }\r\n\r\n    return numbers.localeCurrency;\r\n}\r\n", "\r\nexport var DAYS_OF_WEEK = [ \"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\" ];\r\n\r\nexport var DEFAULT_TERRITORY = '001';\r\n", "import { cldr, getLocaleInfo } from './info';\r\nimport localeTerritory from './territory';\r\n\r\nimport { DAYS_OF_WEEK, DEFAULT_TERRITORY } from './constants';\r\nimport { errors } from '../errors';\r\n\r\nvar NoWeekData = errors.NoWeekData;\r\nvar NoFirstDay = errors.NoFirstDay;\r\n\r\nexport default function firstDay(locale) {\r\n    var info = getLocaleInfo(locale);\r\n\r\n    if (!isNaN(info.firstDay)) {\r\n        return info.firstDay;\r\n    }\r\n\r\n    var weekData = cldr.supplemental.weekData;\r\n    if (!weekData) {\r\n        throw NoWeekData.error();\r\n    }\r\n\r\n    var firstDay = weekData.firstDay[localeTerritory(info)] || weekData.firstDay[DEFAULT_TERRITORY];\r\n\r\n    if (!firstDay) {\r\n        throw NoFirstDay.error();\r\n    }\r\n\r\n    info.firstDay = DAYS_OF_WEEK.indexOf(firstDay);\r\n\r\n    return info.firstDay;\r\n}\r\n", "import { cldr, getLocaleInfo } from './info';\r\nimport localeTerritory from './territory';\r\n\r\nimport { DAYS_OF_WEEK, DEFAULT_TERRITORY } from './constants';\r\nimport { errors } from '../errors';\r\n\r\nvar NoWeekData = errors.NoWeekData;\r\n\r\nexport default function weekendRange(locale) {\r\n    var info = getLocaleInfo(locale);\r\n\r\n    if (info.weekendRange) {\r\n        return info.weekendRange;\r\n    }\r\n\r\n    var weekData = cldr.supplemental.weekData;\r\n    if (!weekData) {\r\n        throw NoWeekData.error();\r\n    }\r\n\r\n    var territory = localeTerritory(info);\r\n    var start = weekData.weekendStart[territory] || weekData.weekendStart[DEFAULT_TERRITORY];\r\n    var end = weekData.weekendEnd[territory] || weekData.weekendEnd[DEFAULT_TERRITORY];\r\n\r\n    info.weekendRange = {\r\n        start: DAYS_OF_WEEK.indexOf(start),\r\n        end: DAYS_OF_WEEK.indexOf(end)\r\n    };\r\n\r\n    return info.weekendRange;\r\n}\r\n", "import { getLocaleInfo } from './info';\r\n\r\nexport default function numberSymbols(locale) {\r\n    var info = getLocaleInfo(locale);\r\n\r\n    return info.numbers.symbols;\r\n}", "export default function isNegativeZero(value) {\r\n    return (1 / value === -Infinity);\r\n}\r\n", "import { currencyDisplay, localeCurrency } from '../cldr';\r\n\r\nexport default function formatCurrencySymbol(info, options) {\r\n    if ( options === void 0 ) options = {};\r\n\r\n    if (!options.currency) {\r\n        options.currency = localeCurrency(info, true);\r\n    }\r\n\r\n    var display = currencyDisplay(info, options);\r\n\r\n    return display;\r\n}\r\n", "export default function groupInteger(number, start, end, options, info) {\r\n    var symbols = info.numbers.symbols;\r\n    var decimalIndex = number.indexOf(symbols.decimal);\r\n    var groupSizes = options.groupSize.slice();\r\n    var groupSize = groupSizes.shift();\r\n\r\n    var integerEnd = decimalIndex !== -1 ? decimalIndex : end + 1;\r\n\r\n    var integer = number.substring(start, integerEnd);\r\n    var result = number;\r\n    var integerLength = integer.length;\r\n\r\n    if (integerLength >= groupSize) {\r\n        var idx = integerLength;\r\n        var parts = [];\r\n\r\n        while (idx > -1) {\r\n            var value = integer.substring(idx - groupSize, idx);\r\n            if (value) {\r\n                parts.push(value);\r\n            }\r\n            idx -= groupSize;\r\n            var newGroupSize = groupSizes.shift();\r\n            groupSize = newGroupSize !== undefined ? newGroupSize : groupSize;\r\n\r\n            if (groupSize === 0) {\r\n                value = integer.substring(0, idx);\r\n                if (value) {\r\n                    parts.push(value);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        integer = parts.reverse().join(symbols.group);\r\n        result = number.substring(0, start) + integer + number.substring(integerEnd);\r\n    }\r\n\r\n    return result;\r\n}", "import { CURRENCY, ACCOUNTING } from '../common/constants';\r\n\r\nexport default function isCurrencyStyle(style) {\r\n    return style === CURRENCY || style === ACCOUNTING;\r\n}", "export default function pad(number, digits, right) {\r\n    if ( digits === void 0 ) digits = 2;\r\n    if ( right === void 0 ) right = false;\r\n\r\n    var count = digits - String(number).length;\r\n    var result = number;\r\n\r\n    if (count > 0) {\r\n        var padString = new Array(count + 1).join(\"0\");\r\n        result = right ? number + padString : padString + number;\r\n    }\r\n\r\n    return result;\r\n}", "var MAX_PRECISION = 20;\r\n\r\nexport default function round(value, precision) {\r\n    var result = value;\r\n    var decimals = precision || 0;\r\n\r\n    result = result.toString().split('e');\r\n    result = Math.round(Number(result[0] + 'e' + (result[1] ? (Number(result[1]) + decimals) : decimals)));\r\n\r\n    result = result.toString().split('e');\r\n    result = Number(result[0] + 'e' + (result[1] ? (Number(result[1]) - decimals) : -decimals));\r\n\r\n    return result.toFixed(Math.min(decimals, MAX_PRECISION));\r\n}", "import { PERCENT, SCIENTIFIC, NUMBER_PLACEHOLDER, CURRENCY_PLACEHOLDER, PERCENT_PLACEHOLDER, EMPTY, POINT } from '../common/constants';\r\nimport isNegativeZero from '../common/is-negative-zero';\r\nimport formatCurrencySymbol from './format-currency-symbol';\r\nimport groupInteger from './group-integer';\r\nimport isCurrencyStyle from './is-currency-style';\r\nimport pad from '../common/pad';\r\nimport round from '../common/round';\r\nimport { currencyFractionOptions } from '../cldr';\r\n\r\nvar DEFAULT_DECIMAL_ROUNDING = 3;\r\nvar DEFAULT_PERCENT_ROUNDING = 0;\r\n\r\nvar trailingZeroRegex = /0+$/;\r\n\r\nfunction fractionOptions(options) {\r\n    var minimumFractionDigits = options.minimumFractionDigits;\r\n    var maximumFractionDigits = options.maximumFractionDigits;\r\n    var style = options.style;\r\n    var isCurrency = isCurrencyStyle(style);\r\n    var currencyFractions;\r\n    if (isCurrency) {\r\n        currencyFractions = currencyFractionOptions(options.currency);\r\n    }\r\n\r\n    if (minimumFractionDigits === undefined) {\r\n        minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;\r\n    }\r\n\r\n    if (maximumFractionDigits === undefined) {\r\n        if (style === PERCENT) {\r\n            maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING);\r\n        } else if (isCurrency) {\r\n            maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);\r\n        } else {\r\n            maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING);\r\n        }\r\n    }\r\n\r\n    return {\r\n        minimumFractionDigits: minimumFractionDigits,\r\n        maximumFractionDigits: maximumFractionDigits\r\n    };\r\n}\r\n\r\nfunction applyPattern(value, pattern, symbol) {\r\n    var result = EMPTY;\r\n    for (var idx = 0, length = pattern.length; idx < length; idx++) {\r\n        var ch = pattern.charAt(idx);\r\n\r\n        if (ch === NUMBER_PLACEHOLDER) {\r\n            result += value;\r\n        } else if (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) {\r\n            result += symbol;\r\n        } else {\r\n            result += ch;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction currencyUnitPattern(info, value) {\r\n    var currencyInfo = info.numbers.currency;\r\n    var pattern = value !== 1 ? currencyInfo[\"unitPattern-count-other\"] : currencyInfo[\"unitPattern-count-one\"];\r\n    if (value < 0) {\r\n        pattern = pattern.replace(NUMBER_PLACEHOLDER, (\"-\" + NUMBER_PLACEHOLDER));\r\n    }\r\n\r\n    return pattern;\r\n}\r\n\r\n\r\nexport default function standardNumberFormat(number, options, info) {\r\n    var symbols = info.numbers.symbols;\r\n    var style = options.style;\r\n    var isCurrency = isCurrencyStyle(style);\r\n\r\n    //return number in exponential format\r\n    if (style === SCIENTIFIC) {\r\n        var exponential = options.minimumFractionDigits !== undefined ? number.toExponential(options.minimumFractionDigits) : number.toExponential();\r\n        return exponential.replace(POINT, symbols.decimal);\r\n    }\r\n\r\n    var value = number;\r\n    var symbol;\r\n\r\n    if (isCurrency) {\r\n        options.value = value;\r\n        symbol = formatCurrencySymbol(info, options);\r\n    }\r\n\r\n    if (style === PERCENT) {\r\n        value *= 100;\r\n        symbol = symbols.percentSign;\r\n    }\r\n\r\n    var ref = fractionOptions(options);\r\n    var minimumFractionDigits = ref.minimumFractionDigits;\r\n    var maximumFractionDigits = ref.maximumFractionDigits;\r\n\r\n    value = round(value, maximumFractionDigits);\r\n\r\n    var negative = value < 0;\r\n    var negativeZero = isNegativeZero(number);\r\n\r\n    var parts = value.split(POINT);\r\n\r\n    var integer = parts[0];\r\n    var fraction = pad(parts[1] ? parts[1].replace(trailingZeroRegex, EMPTY) : EMPTY, minimumFractionDigits, true);\r\n\r\n    //exclude \"-\" if number is negative.\r\n    if (negative) {\r\n        integer = integer.substring(1);\r\n    }\r\n\r\n    if (options.minimumIntegerDigits) {\r\n        integer = pad(integer, options.minimumIntegerDigits);\r\n    }\r\n\r\n    var formattedValue = options.useGrouping !== false ? groupInteger(integer, 0, integer.length, options, info) : integer;\r\n\r\n    if (fraction) {\r\n        formattedValue += symbols.decimal + fraction;\r\n    }\r\n\r\n    var pattern;\r\n\r\n    if (isCurrency && options.currencyDisplay === \"name\") {\r\n        pattern = currencyUnitPattern(info, number);\r\n    } else {\r\n        var patterns = options.patterns;\r\n        pattern = (negative || negativeZero) ? patterns[1] || (\"-\" + patterns[0]) : patterns[0];\r\n    }\r\n\r\n    if (pattern === NUMBER_PLACEHOLDER && !negative) {\r\n        return formattedValue;\r\n    }\r\n\r\n    var result = applyPattern(formattedValue, pattern, symbol);\r\n\r\n    return result;\r\n}", "import { PERCENT_PLACEHOLDER, CURRENCY_PLACEHOLDER, CURRENCY, PERCENT, EMPTY } from '../common/constants';\r\nimport formatCurrencySymbol from './format-currency-symbol';\r\n\r\nvar literalRegExp = /(\\\\.)|(['][^']*[']?)|([\"][^\"]*[\"]?)/g;\r\nvar PLACEHOLDER = \"__??__\";\r\n\r\nexport function setStyleOptions(formatOptions, info) {\r\n    var format = formatOptions.format;\r\n\r\n    //multiply number if the format has percent\r\n    if (format.indexOf(PERCENT_PLACEHOLDER) !== -1) {\r\n        formatOptions.style = PERCENT;\r\n        formatOptions.symbol = info.numbers.symbols.percentSign;\r\n        formatOptions.number *= 100;\r\n    }\r\n\r\n    if (format.indexOf(CURRENCY_PLACEHOLDER) !== -1) {\r\n        formatOptions.style = CURRENCY;\r\n        formatOptions.symbol = formatCurrencySymbol(info);\r\n    }\r\n}\r\n\r\nexport function setFormatLiterals(formatOptions) {\r\n    var format = formatOptions.format;\r\n    if (format.indexOf(\"'\") > -1 || format.indexOf(\"\\\"\") > -1 || format.indexOf(\"\\\\\") > -1) {\r\n        var literals = formatOptions.literals = [];\r\n        formatOptions.format = format.replace(literalRegExp, function(match) {\r\n            var quoteChar = match.charAt(0).replace(\"\\\\\", EMPTY);\r\n            var literal = match.slice(1).replace(quoteChar, EMPTY);\r\n\r\n            literals.push(literal);\r\n\r\n            return PLACEHOLDER;\r\n        });\r\n    }\r\n}\r\n\r\nexport function replaceLiterals(number, literals) {\r\n    var result = number;\r\n    if (literals) {\r\n        var length = literals.length;\r\n        for (var idx = 0; idx < length; idx++) {\r\n            result = result.replace(PLACEHOLDER, literals[idx]);\r\n        }\r\n    }\r\n    return result;\r\n}", "import { CURRENCY, PERCENT, LIST_SEPARATOR, GROUP_SEPARATOR, CURRENCY_PLACEHOLDER, PERCENT_PLACEHOLDER, POINT, EMPTY } from '../common/constants';\r\nimport isNegativeZero from '../common/is-negative-zero';\r\nimport groupInteger from './group-integer';\r\nimport round from '../common/round';\r\nimport { setStyleOptions, setFormatLiterals, replaceLiterals } from './utils';\r\n\r\nvar SHARP = \"#\";\r\nvar ZERO = \"0\";\r\n\r\nvar trailingZerosRegExp = /(\\.(?:[0-9]*[1-9])?)0+$/g;\r\nvar trailingPointRegExp = /\\.$/;\r\nvar commaRegExp = /,/g;\r\n\r\nfunction trimTrailingZeros(value, lastZero) {\r\n    var trimRegex;\r\n\r\n    if (lastZero === 0) {\r\n        trimRegex = trailingZerosRegExp;\r\n    } else {\r\n        trimRegex = new RegExp((\"(\\\\.[0-9]{\" + lastZero + \"}[1-9]*)0+$\"), 'g');\r\n    }\r\n\r\n    return value.replace(trimRegex, '$1').replace(trailingPointRegExp, EMPTY);\r\n}\r\n\r\nfunction roundNumber(formatOptions) {\r\n    var number = formatOptions.number;\r\n    var format = formatOptions.format;\r\n    var decimalIndex = format.indexOf(POINT);\r\n\r\n    if (decimalIndex !== -1) {\r\n        var zeroIndex = format.lastIndexOf(ZERO) - decimalIndex;\r\n        var sharpIndex = format.lastIndexOf(SHARP) - decimalIndex;\r\n        var hasZero = zeroIndex > -1;\r\n        var hasSharp = sharpIndex > -1;\r\n        var fraction = number.toString().split(\"e\");\r\n\r\n        if (fraction[1]) {\r\n            fraction = round(number, Math.abs(fraction[1]));\r\n        } else {\r\n            fraction = fraction[0];\r\n        }\r\n        fraction = fraction.split(POINT)[1] || EMPTY;\r\n\r\n        var precision = fraction.length;\r\n        var trailingZeros = -1;\r\n\r\n        if (!hasZero && !hasSharp) {\r\n            formatOptions.format = format.substring(0, decimalIndex) + format.substring(decimalIndex + 1);\r\n            decimalIndex = -1;\r\n            precision = 0;\r\n        } else if (hasZero && zeroIndex > sharpIndex) {\r\n            precision = zeroIndex;\r\n        } else if (sharpIndex > zeroIndex) {\r\n            if (hasSharp && precision > sharpIndex) {\r\n                precision = sharpIndex;\r\n            } else if (hasZero && precision < zeroIndex) {\r\n                precision = zeroIndex;\r\n            }\r\n\r\n            trailingZeros = hasZero ? zeroIndex : 0;\r\n        }\r\n\r\n        if (precision > -1) {\r\n            number = round(number, precision);\r\n            if (trailingZeros > -1) {\r\n                number = trimTrailingZeros(number, trailingZeros);\r\n            }\r\n        }\r\n    } else {\r\n        number = round(number);\r\n    }\r\n\r\n    if (formatOptions.negative && (number * -1) >= 0 && !formatOptions.negativeZero) {\r\n        formatOptions.negative = false;\r\n    }\r\n\r\n    formatOptions.number = number;\r\n    formatOptions.decimalIndex = decimalIndex;\r\n}\r\n\r\nfunction isConstantFormat(format) {\r\n    return format.indexOf(SHARP) === -1 && format.indexOf(ZERO) === -1;\r\n}\r\n\r\nfunction setValueSpecificFormat(formatOptions) {\r\n    var number = formatOptions.number;\r\n    var format = formatOptions.format;\r\n    format = format.split(LIST_SEPARATOR);\r\n    if ((formatOptions.negative || formatOptions.negativeZero) && format[1]) {\r\n        format = format[1];\r\n        formatOptions.hasNegativeFormat = true;\r\n    } else if (number === 0) {\r\n        var zeroFormat = format[2];\r\n        format = zeroFormat || format[0];\r\n        if (zeroFormat && isConstantFormat(zeroFormat)) {\r\n            formatOptions.constant = zeroFormat;\r\n        }\r\n    } else {\r\n        format = format[0];\r\n    }\r\n\r\n    formatOptions.format = format;\r\n}\r\n\r\nfunction setGroupOptions(formatOptions) {\r\n    formatOptions.hasGroup = formatOptions.format.indexOf(GROUP_SEPARATOR) > -1;\r\n    if (formatOptions.hasGroup) {\r\n        formatOptions.format = formatOptions.format.replace(commaRegExp, EMPTY);\r\n    }\r\n}\r\n\r\nfunction placeholderIndex(index1, index2, start) {\r\n    var index;\r\n    if (index1 === -1 && index2 !== -1) {\r\n        index = index2;\r\n    } else if (index1 !== -1 && index2 === -1) {\r\n        index = index1;\r\n    } else {\r\n        index = start ? Math.min(index1, index2) : Math.max(index1, index2);\r\n    }\r\n    return index;\r\n}\r\n\r\nfunction setPlaceholderIndices(formatOptions) {\r\n    var format = formatOptions.format;\r\n    var sharpIndex = format.indexOf(SHARP);\r\n    var zeroIndex = format.indexOf(ZERO);\r\n\r\n    var start = placeholderIndex(sharpIndex, zeroIndex, true);\r\n\r\n    sharpIndex = format.lastIndexOf(SHARP);\r\n    zeroIndex = format.lastIndexOf(ZERO);\r\n\r\n    var end = placeholderIndex(sharpIndex, zeroIndex);\r\n\r\n    if (start === format.length) {\r\n        end = start;\r\n    }\r\n\r\n    formatOptions.start = start;\r\n    formatOptions.end = end;\r\n    formatOptions.lastZeroIndex = zeroIndex;\r\n}\r\n\r\nfunction replaceStyleSymbols(number, style, symbol) {\r\n    var result = number;\r\n    if (style === CURRENCY || style === PERCENT) {\r\n        result = EMPTY;\r\n        for (var idx = 0, length = number.length; idx < length; idx++) {\r\n            var ch = number.charAt(idx);\r\n            result += (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) ? symbol : ch;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction replacePlaceHolders(formatOptions, info) {\r\n    var start = formatOptions.start;\r\n    var end = formatOptions.end;\r\n    var negative = formatOptions.negative;\r\n    var negativeZero = formatOptions.negativeZero;\r\n    var format = formatOptions.format;\r\n    var decimalIndex = formatOptions.decimalIndex;\r\n    var lastZeroIndex = formatOptions.lastZeroIndex;\r\n    var hasNegativeFormat = formatOptions.hasNegativeFormat;\r\n    var hasGroup = formatOptions.hasGroup;\r\n    var number = formatOptions.number;\r\n    var value = number.toString().split(POINT);\r\n    var length = format.length;\r\n    var integer = value[0];\r\n    var fraction = value[1] || EMPTY;\r\n    var integerLength = integer.length;\r\n    var replacement = EMPTY;\r\n\r\n    number = format.substring(0, start);\r\n\r\n    if ((negative || negativeZero) && !hasNegativeFormat) {\r\n        number += \"-\";\r\n    }\r\n\r\n    for (var idx = start; idx < length; idx++) {\r\n        var ch = format.charAt(idx);\r\n\r\n        if (decimalIndex === -1) {\r\n            if (end - idx < integerLength) {\r\n\r\n                number += integer;\r\n                break;\r\n            }\r\n        } else {\r\n            if (lastZeroIndex !== -1 && lastZeroIndex < idx) {\r\n                replacement = EMPTY;\r\n            }\r\n\r\n            if ((decimalIndex - idx) <= integerLength && decimalIndex - idx > -1) {\r\n                number += integer;\r\n                idx = decimalIndex;\r\n            }\r\n\r\n            if (decimalIndex === idx) {\r\n                number += (fraction ? info.numbers.symbols.decimal : EMPTY) + fraction;\r\n                idx += end - decimalIndex + 1;\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (ch === ZERO) {\r\n            number += ch;\r\n            replacement = ch;\r\n        } else if (ch === SHARP) {\r\n            number += replacement;\r\n        }\r\n    }\r\n\r\n    if (hasGroup) {\r\n        number = groupInteger(number, start + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end, (integerLength + start)), info.numbers.decimal, info);\r\n    }\r\n\r\n    if (end >= start) {\r\n        number += format.substring(end + 1);\r\n    }\r\n\r\n    return number;\r\n}\r\n\r\nfunction applyCustomFormat(formatOptions, info) {\r\n    var number = formatOptions.number;\r\n    if (formatOptions.start !== -1) {\r\n        number = replacePlaceHolders(formatOptions, info);\r\n        number = replaceStyleSymbols(number, formatOptions.style, formatOptions.symbol);\r\n        number = replaceLiterals(number, formatOptions.literals);\r\n    }\r\n\r\n    return number;\r\n}\r\n\r\nexport default function customNumberFormat(number, format, info) {\r\n    var formatOptions = {\r\n        negative: number < 0,\r\n        number: Math.abs(number),\r\n        negativeZero: isNegativeZero(number),\r\n        format: format\r\n    };\r\n\r\n    setValueSpecificFormat(formatOptions);\r\n\r\n    if (formatOptions.constant) {\r\n        return formatOptions.constant;\r\n    }\r\n\r\n    setFormatLiterals(formatOptions);\r\n    setStyleOptions(formatOptions, info);\r\n    setGroupOptions(formatOptions);\r\n    roundNumber(formatOptions);\r\n    setPlaceholderIndices(formatOptions);\r\n\r\n    return applyCustomFormat(formatOptions, info);\r\n}", "import { CURRENCY, ACCOUNTING, DECIMAL, PERCENT, SCIENTIFIC } from '../common/constants';\r\nimport isString from '../common/is-string';\r\n\r\nvar standardFormatRegExp = /^(n|c|p|e|a)(\\d*)$/i;\r\n\r\nfunction standardFormatOptions(format) {\r\n    var formatAndPrecision = standardFormatRegExp.exec(format);\r\n\r\n    if (formatAndPrecision) {\r\n        var options = {\r\n            style: DECIMAL\r\n        };\r\n\r\n        var style = formatAndPrecision[1].toLowerCase();\r\n\r\n        if (style === \"c\") {\r\n            options.style = CURRENCY;\r\n        } else if (style === \"a\") {\r\n            options.style = ACCOUNTING;\r\n        } else if (style === \"p\") {\r\n            options.style = PERCENT;\r\n        } else if (style === \"e\") {\r\n            options.style = SCIENTIFIC;\r\n        }\r\n\r\n        if (formatAndPrecision[2]) {\r\n            options.minimumFractionDigits = options.maximumFractionDigits = parseInt(formatAndPrecision[2], 10);\r\n        }\r\n\r\n        return options;\r\n    }\r\n}\r\n\r\nexport default function formatOptions(format) {\r\n    var options;\r\n    if (isString(format)) {\r\n        options = standardFormatOptions(format);\r\n    } else {\r\n        options = format;\r\n    }\r\n\r\n    return options;\r\n}", "import { localeInfo } from '../cldr';\r\nimport { DECIMAL, DEFAULT_LOCALE, NUMBER_PLACEHOLDER, EMPTY } from '../common/constants';\r\nimport standardNumberFormat from './standard-number-format';\r\nimport customNumberFormat from './custom-number-format';\r\nimport formatOptions from './format-options';\r\n\r\nexport default function formatNumber(number, format, locale) {\r\n    if ( format === void 0 ) format = NUMBER_PLACEHOLDER;\r\n    if ( locale === void 0 ) locale = DEFAULT_LOCALE;\r\n\r\n    if (number === undefined || number === null) {\r\n        return EMPTY;\r\n    }\r\n\r\n    if (!isFinite(number)) {\r\n        return String(number);\r\n    }\r\n\r\n    var info = localeInfo(locale);\r\n    var options = formatOptions(format);\r\n\r\n    var result;\r\n    if (options) {\r\n        var style = options.style || DECIMAL;\r\n        result = standardNumberFormat(number, Object.assign({}, info.numbers[style], options), info);\r\n    } else {\r\n        result = customNumberFormat(number, format, info);\r\n    }\r\n\r\n    return result;\r\n}\r\n", "export default function isNumber(value) {\r\n    return typeof value === \"number\";\r\n}", "import { localeInfo, localeCurrency, currencyDisplays } from '../cldr';\r\nimport { PERCENT, NUMBER_PLACEHOLDER, CURRENCY_PLACEHOLDER, DEFAULT_LOCALE, EMPTY, POINT } from '../common/constants';\r\nimport { setStyleOptions, setFormatLiterals } from './utils';\r\nimport isNumber from '../common/is-number';\r\nimport isCurrencyStyle from './is-currency-style';\r\nimport formatOptions from './format-options';\r\nimport isString from '../common/is-string';\r\n\r\nvar exponentRegExp = /[eE][-+]?[0-9]+/;\r\nvar nonBreakingSpaceRegExp = /\\u00A0/g;\r\n\r\nfunction cleanNegativePattern(number, patterns) {\r\n    if (patterns.length > 1) {\r\n        var parts = (patterns[1] || EMPTY).replace(CURRENCY_PLACEHOLDER, EMPTY).split(NUMBER_PLACEHOLDER);\r\n        if (number.indexOf(parts[0]) > -1 && number.indexOf(parts[1]) > -1) {\r\n            return number.replace(parts[0], EMPTY).replace(parts[1], EMPTY);\r\n        }\r\n    }\r\n}\r\n\r\nfunction cleanCurrencyNumber(value, info, format) {\r\n    var options = formatOptions(format) || {};\r\n    var isCurrency = isCurrencyStyle(options.style);\r\n    var number = value;\r\n    var negative;\r\n\r\n    var currency = options.currency || localeCurrency(info, isCurrency);\r\n\r\n    if (currency) {\r\n        var displays = currencyDisplays(info, currency, isCurrency);\r\n        if (displays) {\r\n            for (var idx = 0; idx < displays.length; idx++) {\r\n                var display = displays[idx];\r\n                if (number.includes(display)) {\r\n                    number = number.replace(display, EMPTY);\r\n                    isCurrency = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isCurrency) {\r\n            var cleanNumber = cleanNegativePattern(number, info.numbers.currency.patterns) ||\r\n                cleanNegativePattern(number, info.numbers.accounting.patterns);\r\n\r\n            if (cleanNumber) {\r\n                negative = true;\r\n                number = cleanNumber;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return {\r\n        number: number,\r\n        negative: negative\r\n    };\r\n}\r\n\r\nfunction cleanLiterals(number, formatOptions) {\r\n    var literals = formatOptions.literals;\r\n    var result = number;\r\n\r\n    if (literals) {\r\n        for (var idx = 0; idx < literals.length; idx++) {\r\n            result = result.replace(literals[idx], EMPTY);\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction divideBy100(number) {\r\n    var strNumber = String(number);\r\n    var pointIndex = strNumber.indexOf(POINT);\r\n    var zeroesCount = 2;\r\n    var result = number / Math.pow(10, zeroesCount);\r\n\r\n    if (pointIndex === -1 || String(result).length <= strNumber.length + zeroesCount) {\r\n        return result;\r\n    }\r\n\r\n    var fractionDigits = strNumber.length - pointIndex + 1 + zeroesCount;\r\n    return parseFloat(result.toFixed(fractionDigits));\r\n}\r\n\r\nexport default function parseNumber(value, locale, format) {\r\n    if ( locale === void 0 ) locale = DEFAULT_LOCALE;\r\n    if ( format === void 0 ) format = {};\r\n\r\n    if (!value && value !== 0) {\r\n        return null;\r\n    }\r\n\r\n    if (isNumber(value)) {\r\n        return value;\r\n    }\r\n\r\n    var info = localeInfo(locale);\r\n    var symbols = info.numbers.symbols;\r\n\r\n    var number = value.toString();\r\n    var formatOptions = format || {};\r\n    var isPercent;\r\n\r\n    if (isString(format)) {\r\n        formatOptions = { format: format };\r\n        setFormatLiterals(formatOptions);\r\n        number = cleanLiterals(number, formatOptions);\r\n\r\n        setStyleOptions(formatOptions, info);\r\n    }\r\n\r\n    if (formatOptions.style === PERCENT || number.indexOf(symbols.percentSign) > -1) {\r\n        number = number.replace(symbols.percentSign, EMPTY);\r\n        isPercent = true;\r\n    }\r\n\r\n    if (exponentRegExp.test(number)) {\r\n        number = parseFloat(number.replace(symbols.decimal, POINT));\r\n        return isNaN(number) ? null : number;\r\n    }\r\n\r\n    var ref = cleanCurrencyNumber(number, info, formatOptions);\r\n    var negativeCurrency = ref.negative;\r\n    var currencyNumber = ref.number;\r\n    number = String(currencyNumber).trim();\r\n\r\n    var negativeSignIndex = number.indexOf(\"-\");\r\n    if (negativeSignIndex > 0) {\r\n        return null;\r\n    }\r\n\r\n    var isNegative = negativeSignIndex > -1;\r\n\r\n    isNegative = negativeCurrency !== undefined ? negativeCurrency : isNegative;\r\n\r\n    number = number.replace(\"-\", EMPTY)\r\n          .replace(nonBreakingSpaceRegExp, \" \")\r\n          .split(symbols.group.replace(nonBreakingSpaceRegExp, \" \")).join(EMPTY)\r\n          .replace(symbols.decimal, POINT);\r\n\r\n    number = parseFloat(number);\r\n\r\n    if (isNaN(number)) {\r\n        number = null;\r\n    } else if (isNegative) {\r\n        number *= -1;\r\n    }\r\n\r\n    if (number && isPercent) {\r\n        number = divideBy100(number);\r\n    }\r\n\r\n    return number;\r\n}\r\n", "var formatRegExp = /\\{(\\d+)}/g;\r\n\r\nexport default function formatString(format) {\r\n    var values = arguments;\r\n\r\n    return format.replace(formatRegExp, function (match, index) {\r\n        var value = values[parseInt(index, 10) + 1];\r\n\r\n        return value;\r\n    });\r\n}", "import formatString from '../common/format-string';\r\nimport isString from '../common/is-string';\r\nimport { EMPTY } from '../common/constants';\r\n\r\nvar REMOVAL_PENALTY = 120;\r\nvar ADDITION_PENALTY = 20;\r\nvar LENGHT_DELTA = [ 2, 1, 5, 3, 4 ];\r\nvar LONG_LESS_PENALTY_DELTA = -2;\r\nvar SHORT_LESS_PENALTY_DELTA = -1;\r\nvar SHORT_MORE_PENALTY_DELTA = 1;\r\nvar LONG_MORE_PENALTY_DELTA = 2;\r\n\r\nvar PENALTIES = {};\r\nPENALTIES[LONG_LESS_PENALTY_DELTA.toString()] = 8;\r\nPENALTIES[SHORT_LESS_PENALTY_DELTA.toString()] = 6;\r\nPENALTIES[LONG_MORE_PENALTY_DELTA.toString()] = 6;\r\nPENALTIES[SHORT_MORE_PENALTY_DELTA.toString()] = 3;\r\n\r\nvar VALUE_FORMAT_LENGTH = {\r\n    numeric: 1,\r\n    \"2-digit\": 2,\r\n    short: 3,\r\n    long: 4,\r\n    narrow: 5\r\n};\r\n\r\nvar TIME_SPECIFIERS_REGEX = /[hHmsSzZoOvVxX]/;\r\n\r\nfunction getHourSpecifier(options) {\r\n    return options.hour12 ? \"h\" : \"H\";\r\n}\r\n\r\nvar DATE_OPTIONS_MAP = [ {\r\n    key: \"era\",\r\n    specifier: \"G\"\r\n}, {\r\n    key: \"year\",\r\n    specifier: \"y\"\r\n}, {\r\n    key: \"month\",\r\n    specifier: \"M\"\r\n}, {\r\n    key: \"day\",\r\n    specifier: \"d\"\r\n}, {\r\n    key: \"weekday\",\r\n    specifier: \"E\"\r\n}, {\r\n    key: \"hour\",\r\n    getSpecifier: getHourSpecifier\r\n}, {\r\n    key: \"minute\",\r\n    specifier: \"m\"\r\n}, {\r\n    key: \"second\",\r\n    specifier: \"s\"\r\n}, {\r\n    key: \"timeZoneName\",\r\n    specifier: \"z\"\r\n} ];\r\n\r\nvar STAND_ALONE_SPECIFIERS = {\r\n    e: 'c',\r\n    E: 'c',\r\n    M: 'L',\r\n    Q: 'q'\r\n};\r\n\r\nvar specifiersRegex = {};\r\nvar resolvedFormats = {};\r\n\r\nfunction getSpecifierRegex(specifier) {\r\n    if (!specifiersRegex[specifier]) {\r\n        specifiersRegex[specifier] = new RegExp(specifier + \"+\");\r\n    }\r\n    return specifiersRegex[specifier];\r\n}\r\n\r\nfunction skeletonSpecifiers(skeleton) {\r\n    var result = [];\r\n    var current = skeleton.charAt(0);\r\n    var specifier = current;\r\n    for (var idx = 1; idx < skeleton.length; idx++) {\r\n        var character = skeleton.charAt(idx);\r\n        if (character === specifier) {\r\n            current += character;\r\n        } else {\r\n            result.push(current);\r\n            current = specifier = character;\r\n        }\r\n    }\r\n\r\n    result.push(current);\r\n\r\n    return result;\r\n}\r\n\r\nfunction findBestMatch(specifiers, availableFormats) {\r\n    var specifiersLength = specifiers.length;\r\n    var maxScore = -Number.MAX_VALUE;\r\n    var bestMatches, result;\r\n    for (var format in availableFormats) {\r\n        var matches = [];\r\n        var currentFormat = format.replace(\"v\", \"z\");\r\n        var score = 0;\r\n        for (var idx = 0; idx < specifiersLength; idx++) {\r\n            var specifier = specifiers[idx];\r\n            var specifierRegex = getSpecifierRegex(specifier[0]);\r\n            var match = (specifierRegex.exec(currentFormat) || [])[0];\r\n\r\n            if (!match) {\r\n                score -= REMOVAL_PENALTY;\r\n            } else {\r\n                currentFormat = currentFormat.replace(match, EMPTY);\r\n                if (match.length !== specifier.length) {\r\n                    var delta = Math.max(Math.min(LENGHT_DELTA[match.length] - LENGHT_DELTA[specifier.length], 2), -2);\r\n                    score -= PENALTIES[delta];\r\n                }\r\n            }\r\n\r\n            matches.push(match);\r\n\r\n            if (score < maxScore) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (currentFormat.length) {\r\n            score -= skeletonSpecifiers(currentFormat).length * ADDITION_PENALTY;\r\n        }\r\n\r\n        if (score > maxScore) {\r\n            maxScore = score;\r\n            bestMatches = matches;\r\n            result = availableFormats[format];\r\n        }\r\n    }\r\n\r\n    result = result.replace(\"v\", \"z\");\r\n\r\n    for (var idx$1 = 0; idx$1 < specifiersLength; idx$1++) {\r\n        var bestMatch = bestMatches[idx$1];\r\n        if (bestMatch && bestMatch !== specifiers[idx$1]) {\r\n            var matchSpecifier = bestMatches[idx$1][0];\r\n            result = result.replace(getSpecifierRegex(matchSpecifier), specifiers[idx$1]);\r\n            if (STAND_ALONE_SPECIFIERS[matchSpecifier]) {\r\n                result = result.replace(getSpecifierRegex(STAND_ALONE_SPECIFIERS[matchSpecifier]), specifiers[idx$1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction cacheFormat(skeleton, format, locale) {\r\n    if (!resolvedFormats[locale]) {\r\n        resolvedFormats[locale] = {};\r\n    }\r\n    resolvedFormats[locale][skeleton] = format;\r\n}\r\n\r\n\r\nfunction skeletonFormat(skeleton, info) {\r\n    var availableFormats = info.calendar.dateTimeFormats.availableFormats;\r\n    if (availableFormats[skeleton]) {\r\n        return availableFormats[skeleton];\r\n    }\r\n    if (resolvedFormats[info.name] && resolvedFormats[info.name][skeleton]) {\r\n        return resolvedFormats[info.name][skeleton];\r\n    }\r\n    var timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX);\r\n    var result;\r\n    if (timeStartIndex > 0) {\r\n        var dateSkeleton = skeleton.substr(0, timeStartIndex);\r\n        var timeSkeleton = skeleton.substr(timeStartIndex);\r\n\r\n        result = formatString(info.calendar.dateTimeFormats.short, //should be deterimed based on specifiers\r\n            availableFormats[timeSkeleton] || findBestMatch(skeletonSpecifiers(timeSkeleton), availableFormats),\r\n            availableFormats[dateSkeleton] || findBestMatch(skeletonSpecifiers(dateSkeleton), availableFormats));\r\n    } else {\r\n        result = findBestMatch(skeletonSpecifiers(skeleton), availableFormats);\r\n    }\r\n\r\n    cacheFormat(skeleton, result, info.name);\r\n    return result;\r\n}\r\n\r\nfunction skeletonFromOptions(options) {\r\n    var result = [];\r\n    for (var idx = 0; idx < DATE_OPTIONS_MAP.length; idx++) {\r\n        var option = DATE_OPTIONS_MAP[idx];\r\n        var field = option.key;\r\n        var value = options[field];\r\n        if (value) {\r\n            var spcifier = option.specifier || option.getSpecifier(options);\r\n            result.push(spcifier.repeat(VALUE_FORMAT_LENGTH[value]));\r\n        }\r\n    }\r\n\r\n    return result.join(EMPTY);\r\n}\r\n\r\nexport default function datePattern(format, info) {\r\n    var calendar = info.calendar;\r\n    var result;\r\n    if (isString(format)) {\r\n        if (calendar.patterns[format]) {\r\n            result = calendar.patterns[format];\r\n        } else {\r\n            result = format;\r\n        }\r\n    } else if (format) {\r\n        if (format.pattern) {\r\n            return format.pattern;\r\n        }\r\n\r\n        var skeleton = format.skeleton;\r\n        if (!skeleton) {\r\n            if (format.datetime) {\r\n                result = formatString(calendar.dateTimeFormats[format.datetime], calendar.timeFormats[format.datetime], calendar.dateFormats[format.datetime]);\r\n            } else if (format.date) {\r\n                result = calendar.dateFormats[format.date];\r\n            } else if (format.time) {\r\n                result = calendar.timeFormats[format.time];\r\n            } else {\r\n                skeleton = skeletonFromOptions(format);\r\n            }\r\n        }\r\n\r\n        if (skeleton) {\r\n            result = skeletonFormat(skeleton, info);\r\n        }\r\n    }\r\n\r\n    if (!result) {\r\n        result = calendar.patterns.d;\r\n    }\r\n\r\n    return result;\r\n}\r\n", "export default function dateNameType(formatLength) {\r\n    var nameType;\r\n    if (formatLength <= 3) {\r\n        nameType = \"abbreviated\";\r\n    } else if (formatLength === 4) {\r\n        nameType = \"wide\";\r\n    } else if (formatLength === 5) {\r\n        nameType = \"narrow\";\r\n    } else if (formatLength === 6) {\r\n        nameType = \"short\";\r\n    }\r\n\r\n    return nameType;\r\n}", "import dateFormatNames from '../cldr/date-format-names';\r\nimport dateNameType from './date-name-type';\r\n\r\nexport default function formatNames(locale, type, formatLength, standAlone, lower) {\r\n    return dateFormatNames(locale, {\r\n        type: type,\r\n        nameType: dateNameType(formatLength),\r\n        standAlone: standAlone,\r\n        lower: lower\r\n    });\r\n}", "function isFunction(fun) {\r\n    return typeof(fun) === 'function';\r\n}\r\n\r\nexport default function isDate(value) {\r\n    return Boolean(value) && isFunction(value.getTime) && isFunction(value.getMonth);\r\n}\r\n", "var MONTH = 'month';\r\nvar HOUR = 'hour';\r\nvar ZONE = 'zone';\r\nvar WEEKDAY = 'weekday';\r\nvar QUARTER = 'quarter';\r\n\r\nvar DATE_FIELD_MAP = {\r\n    'G': 'era',\r\n    'y': 'year',\r\n    'q': QUARTER,\r\n    'Q': QUARTER,\r\n    'M': MONTH,\r\n    'L': MONTH,\r\n    'd': 'day',\r\n    'E': WEEKDAY,\r\n    'c': WEEKDAY,\r\n    'e': WEEKDAY,\r\n    'h': HOUR,\r\n    'H': HOUR,\r\n    'k': HOUR,\r\n    'K': HOUR,\r\n    'm': 'minute',\r\n    's': 'second',\r\n    'S': 'millisecond',\r\n    'a': 'dayperiod',\r\n    'x': ZONE,\r\n    'X': ZONE,\r\n    'z': ZONE,\r\n    'Z': ZONE\r\n};\r\n\r\nvar dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|\"[^\"]*\"|'[^']*'/g;\r\n\r\nexport { dateFormatRegExp, DATE_FIELD_MAP };", "import { localeInfo, firstDay } from '../cldr';\r\nimport { DEFAULT_LOCALE, EMPTY } from '../common/constants';\r\nimport formatString from '../common/format-string';\r\nimport datePattern from './date-pattern';\r\nimport formatNames from './format-names';\r\nimport pad from '../common/pad';\r\nimport isDate from '../common/is-date';\r\nimport { dateFormatRegExp } from './constants';\r\n\r\nfunction formatDayOfWeekIndex(day, formatLength, localeInfo) {\r\n    var firstDayIndex = firstDay(localeInfo);\r\n    var dayIndex;\r\n    if (day < firstDayIndex) {\r\n        dayIndex = 7 - firstDayIndex + day;\r\n    } else {\r\n        dayIndex = day - firstDayIndex;\r\n    }\r\n\r\n    return dayIndex + 1;\r\n}\r\n\r\nfunction formatMonth(month, formatLength, info, standAlone) {\r\n    if (formatLength <= 2) {\r\n        return pad(month + 1, formatLength);\r\n    }\r\n    return formatNames(info, \"months\", formatLength, standAlone)[month];\r\n}\r\n\r\nfunction formatQuarter(date, formatLength, info, standAlone) {\r\n    var quarter = Math.floor(date.getMonth() / 3);\r\n    if (formatLength < 3) {\r\n        return quarter + 1;\r\n    }\r\n\r\n    return formatNames(info, \"quarters\", formatLength, standAlone)[quarter];\r\n}\r\n\r\n\r\nfunction formatTimeZone(date, info, options) {\r\n    var shortHours = options.shortHours;\r\n    var optionalMinutes = options.optionalMinutes;\r\n    var separator = options.separator;\r\n    var localizedName = options.localizedName;\r\n    var zZeroOffset = options.zZeroOffset;\r\n    var offset = date.getTimezoneOffset() / 60;\r\n    if (offset === 0 && zZeroOffset) {\r\n        return \"Z\";\r\n    }\r\n    var sign = offset <= 0 ? \"+\" : \"-\";\r\n    var hoursMinutes = Math.abs(offset).toString().split(\".\");\r\n    var minutes = hoursMinutes[1] || 0;\r\n    var result = sign + (shortHours ? hoursMinutes[0] : pad(hoursMinutes[0], 2));\r\n    if (minutes || !optionalMinutes) {\r\n        result += (separator ? \":\" : EMPTY) + pad(minutes, 2);\r\n    }\r\n\r\n    if (localizedName) {\r\n        var localizedFormat = offset === 0 ? info.calendar.gmtZeroFormat : info.calendar.gmtFormat;\r\n        result = formatString(localizedFormat, result);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction formatDayOfWeek(date, formatLength, info, standAlone) {\r\n    var result;\r\n    if (formatLength < 3) {\r\n        result = formatDayOfWeekIndex(date.getDay(), formatLength, info);\r\n    } else {\r\n        result = formatNames(info, \"days\", formatLength, standAlone)[date.getDay()];\r\n    }\r\n    return result;\r\n}\r\n\r\nvar formatters = {};\r\n\r\nformatters.d = function(date, formatLength) {\r\n    return pad(date.getDate(), formatLength);\r\n};\r\n\r\nformatters.E = function(date, formatLength, info) {\r\n    return formatNames(info, \"days\", formatLength)[date.getDay()];\r\n};\r\n\r\nformatters.M = function(date, formatLength, info) {\r\n    return formatMonth(date.getMonth(), formatLength, info, false);\r\n};\r\n\r\nformatters.L = function(date, formatLength, info) {\r\n    return formatMonth(date.getMonth(), formatLength, info, true);\r\n};\r\n\r\nformatters.y = function(date, formatLength) {\r\n    var year = date.getFullYear();\r\n    if (formatLength === 2) {\r\n        year = year % 100;\r\n    }\r\n    return pad(year, formatLength);\r\n};\r\n\r\nformatters.h = function(date, formatLength) {\r\n    var hours = date.getHours() % 12 || 12;\r\n    return pad(hours, formatLength);\r\n};\r\n\r\nformatters.H = function(date, formatLength) {\r\n    return pad(date.getHours(), formatLength);\r\n};\r\n\r\nformatters.k = function(date, formatLength) {\r\n    return pad(date.getHours() || 24, formatLength);\r\n};\r\n\r\nformatters.K = function(date, formatLength) {\r\n    return pad(date.getHours() % 12, formatLength);\r\n};\r\n\r\nformatters.m = function(date, formatLength) {\r\n    return pad(date.getMinutes(), formatLength);\r\n};\r\n\r\nformatters.s = function(date, formatLength) {\r\n    return pad(date.getSeconds(), formatLength);\r\n};\r\n\r\nformatters.S = function(date, formatLength) {\r\n    var milliseconds = date.getMilliseconds();\r\n    var result;\r\n    if (milliseconds !== 0) {\r\n        result = pad(String(milliseconds / 1000).split(\".\")[1].substr(0, formatLength), formatLength, true);\r\n    } else {\r\n        result = pad(EMPTY, formatLength);\r\n    }\r\n    return result;\r\n};\r\n\r\nformatters.a = function(date, formatLength, info) {\r\n    return formatNames(info, \"dayPeriods\", formatLength)[date.getHours() < 12 ? \"am\" : \"pm\"];\r\n};\r\n\r\nformatters.z = function(date, formatLength, info) {\r\n    return formatTimeZone(date, info, {\r\n        shortHours: formatLength < 4,\r\n        optionalMinutes: formatLength < 4,\r\n        separator: true,\r\n        localizedName: true\r\n    });\r\n};\r\n\r\nformatters.Z = function(date, formatLength, info) {\r\n    return formatTimeZone(date, info, {\r\n        separator: formatLength > 3,\r\n        localizedName: formatLength === 4,\r\n        zZeroOffset: formatLength === 5\r\n    });\r\n};\r\n\r\nformatters.x = function(date, formatLength, info) {\r\n    return formatTimeZone(date, info, {\r\n        optionalMinutes: formatLength === 1,\r\n        separator: formatLength === 3 || formatLength === 5\r\n    });\r\n};\r\n\r\nformatters.X = function(date, formatLength, info) {\r\n    return formatTimeZone(date, info, {\r\n        optionalMinutes: formatLength === 1,\r\n        separator: formatLength === 3 || formatLength === 5,\r\n        zZeroOffset: true\r\n    });\r\n};\r\n\r\nformatters.G = function(date, formatLength, info) {\r\n    var era = date.getFullYear() >= 0 ? 1 : 0;\r\n    return formatNames(info, \"eras\", formatLength)[era];\r\n};\r\n\r\nformatters.e = formatDayOfWeek;\r\n\r\nformatters.c = function(date, formatLength, info) {\r\n    return formatDayOfWeek(date, formatLength, info, true);\r\n};\r\n\r\nformatters.q = function(date, formatLength, info) {\r\n    return formatQuarter(date, formatLength, info, true);\r\n};\r\n\r\nformatters.Q = formatQuarter;\r\n\r\nexport default function formatDate(date, format, locale) {\r\n    if ( locale === void 0 ) locale = DEFAULT_LOCALE;\r\n\r\n    if (!isDate(date)) {\r\n        if (date === undefined || date === null) {\r\n            return EMPTY;\r\n        }\r\n        return date;\r\n    }\r\n\r\n    var info = localeInfo(locale);\r\n    var pattern = datePattern(format, info);\r\n\r\n    return pattern.replace(dateFormatRegExp, function(match) {\r\n        var formatLength = match.length;\r\n        var result;\r\n\r\n        if (match.includes(\"'\") || match.includes(\"\\\"\")) {\r\n            result = match.slice(1, formatLength - 1);\r\n        } else {\r\n            result = formatters[match[0]](date, formatLength, info);\r\n        }\r\n\r\n        return result;\r\n    });\r\n}\r\n", "export function convertTimeZone(date, fromOffset, toOffset) {\r\n    var fromLocalOffset = date.getTimezoneOffset();\r\n\r\n    var offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\r\n\r\n    var toLocalOffset = offsetDate.getTimezoneOffset();\r\n\r\n    return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\r\n}\r\n\r\nexport function adjustDST(date, hours) {\r\n    if (!hours && date.getHours() === 23) {\r\n        date.setHours(date.getHours() + 2);\r\n    }\r\n}", "import { adjustDST, convertTimeZone } from './time-utils';\r\nimport { localeInfo } from '../cldr';\r\nimport { DEFAULT_LOCALE, EMPTY } from '../common/constants';\r\nimport { errors } from '../errors';\r\nimport formatNames from './format-names';\r\nimport datePattern from './date-pattern';\r\nimport round from '../common/round';\r\nimport isDate from '../common/is-date';\r\n\r\nvar timeZoneOffsetRegExp = /([+|-]\\d{1,2})(:?)(\\d{2})?/;\r\nvar dateRegExp = /^\\/Date\\((.*?)\\)\\/$/;\r\nvar offsetRegExp = /[+-]\\d*/;\r\nvar numberRegExp = {\r\n    2: /^\\d{1,2}/,\r\n    3: /^\\d{1,3}/,\r\n    4: /^\\d{4}/\r\n};\r\nvar numberRegex = /\\d+/;\r\nvar PLACEHOLDER = \"{0}\";\r\n\r\nvar leadingSpacesRegex = /^ */;\r\nvar trailingSpacesRegex = / *$/;\r\n\r\nvar standardDateFormats = [\r\n    \"yyyy/MM/dd HH:mm:ss\",\r\n    \"yyyy/MM/dd HH:mm\",\r\n    \"yyyy/MM/dd\",\r\n    \"E MMM dd yyyy HH:mm:ss\",\r\n    \"yyyy-MM-ddTHH:mm:ss.SSSSSSSXXX\",\r\n    \"yyyy-MM-ddTHH:mm:ss.SSSXXX\",\r\n    \"yyyy-MM-ddTHH:mm:ss.SSXXX\",\r\n    \"yyyy-MM-ddTHH:mm:ssXXX\",\r\n    \"yyyy-MM-ddTHH:mm:ss.SSSSSSS\",\r\n    \"yyyy-MM-ddTHH:mm:ss.SSS\",\r\n    \"yyyy-MM-ddTHH:mmXXX\",\r\n    \"yyyy-MM-ddTHH:mmX\",\r\n    \"yyyy-MM-ddTHH:mm:ss\",\r\n    \"yyyy-MM-ddTHH:mm\",\r\n    \"yyyy-MM-dd HH:mm:ss\",\r\n    \"yyyy-MM-dd HH:mm\",\r\n    \"yyyy-MM-dd\",\r\n    \"HH:mm:ss\",\r\n    \"HH:mm\"\r\n];\r\nvar FORMATS_SEQUENCE = [ \"G\", \"g\", \"F\", \"Y\", \"y\", \"M\", \"m\", \"D\", \"d\", \"y\", \"T\", \"t\" ];\r\nvar TWO_DIGIT_YEAR_MAX = 2029;\r\n\r\nfunction outOfRange(value, start, end) {\r\n    return !(value >= start && value <= end);\r\n}\r\n\r\nfunction lookAhead(match, state) {\r\n    var format = state.format;\r\n    var idx = state.idx;\r\n    var i = 0;\r\n    while (format[idx] === match) {\r\n        i++;\r\n        idx++;\r\n    }\r\n    if (i > 0) {\r\n        idx -= 1;\r\n    }\r\n    state.idx = idx;\r\n    return i;\r\n}\r\n\r\nfunction getNumber(size, state) {\r\n    var regex = size ? (numberRegExp[size] || new RegExp('^\\\\d{1,' + size + '}')) : numberRegex,\r\n        match = state.value.substr(state.valueIdx, size).match(regex);\r\n\r\n    if (match) {\r\n        match = match[0];\r\n        state.valueIdx += match.length;\r\n        return parseInt(match, 10);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction getIndexByName(names, state, lower) {\r\n    var i = 0,\r\n        length = names.length,\r\n        name, nameLength,\r\n        matchLength = 0,\r\n        matchIdx = 0,\r\n        subValue;\r\n\r\n    for (; i < length; i++) {\r\n        name = names[i];\r\n        nameLength = name.length;\r\n        subValue = state.value.substr(state.valueIdx, nameLength);\r\n\r\n        if (lower) {\r\n            subValue = subValue.toLowerCase();\r\n        }\r\n\r\n        if (subValue === name && nameLength > matchLength) {\r\n            matchLength = nameLength;\r\n            matchIdx = i;\r\n        }\r\n    }\r\n\r\n    if (matchLength) {\r\n        state.valueIdx += matchLength;\r\n        return matchIdx + 1;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction checkLiteral(state) {\r\n    var result = false;\r\n    if (state.value.charAt(state.valueIdx) === state.format[state.idx]) {\r\n        state.valueIdx++;\r\n        result = true;\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction calendarGmtFormats(calendar) {\r\n    var gmtFormat = calendar.gmtFormat;\r\n    var gmtZeroFormat = calendar.gmtZeroFormat;\r\n    if (!gmtFormat) {\r\n        throw errors.NoGMTInfo.error();\r\n    }\r\n\r\n    return [ gmtFormat.replace(PLACEHOLDER, EMPTY).toLowerCase(), gmtZeroFormat.replace(PLACEHOLDER, EMPTY).toLowerCase() ];\r\n}\r\n\r\nfunction parseTimeZoneOffset(state, info, options) {\r\n    var shortHours = options.shortHours;\r\n    var noSeparator = options.noSeparator;\r\n    var optionalMinutes = options.optionalMinutes;\r\n    var localizedName = options.localizedName;\r\n    var zLiteral = options.zLiteral;\r\n    state.UTC = true;\r\n\r\n    if (zLiteral && state.value.charAt(state.valueIdx) === \"Z\") {\r\n        state.valueIdx++;\r\n        return false;\r\n    }\r\n\r\n    if (localizedName && !getIndexByName(calendarGmtFormats(info.calendar), state, true)) {\r\n        return true;\r\n    }\r\n\r\n    var matches = timeZoneOffsetRegExp.exec(state.value.substr(state.valueIdx, 6));\r\n    if (!matches) {\r\n        return !localizedName;\r\n    }\r\n\r\n    var hoursMatch = matches[1];\r\n    var minutesMatch = matches[3];\r\n    var hoursOffset = parseInt(hoursMatch, 10);\r\n    var separator = matches[2];\r\n    var minutesOffset = parseInt(minutesMatch, 10);\r\n\r\n    if (isNaN(hoursOffset) || (!shortHours && hoursMatch.length !== 3) || (!optionalMinutes && isNaN(minutesOffset)) || (noSeparator && separator)) {\r\n        return true;\r\n    }\r\n\r\n    if (isNaN(minutesOffset)) {\r\n        minutesOffset = null;\r\n    }\r\n\r\n    if (outOfRange(hoursOffset, -12, 13) || (minutesOffset && outOfRange(minutesOffset, 0, 59))) {\r\n        return true;\r\n    }\r\n\r\n    state.valueIdx += matches[0].length;\r\n    state.hoursOffset = hoursOffset;\r\n    state.minutesOffset = minutesOffset;\r\n}\r\n\r\nfunction parseMonth(ch, state, info) {\r\n    var count = lookAhead(ch, state);\r\n    var names = formatNames(info, \"months\", count, ch === \"L\", true);\r\n\r\n    var month = count < 3 ? getNumber(2, state) : getIndexByName(names, state, true);\r\n\r\n    if (month === null || outOfRange(month, 1, 12)) {\r\n        return true;\r\n    }\r\n    state.month = month - 1;\r\n}\r\n\r\nfunction parseDayOfWeek(ch, state, info) {\r\n    var count = lookAhead(ch, state);\r\n    var names = formatNames(info, \"days\", count, ch === \"c\", true);\r\n    var dayOfWeek = count < 3 ? getNumber(1, state) : getIndexByName(names, state, true);\r\n    if ((!dayOfWeek && dayOfWeek !== 0) || outOfRange(dayOfWeek, 1, 7)) {\r\n        return true;\r\n    }\r\n}\r\n\r\nvar parsers = {};\r\n\r\nparsers.d = function(state) {\r\n    lookAhead(\"d\", state);\r\n    var day = getNumber(2, state);\r\n\r\n    if (day === null || outOfRange(day, 1, 31)) {\r\n        return true;\r\n    }\r\n\r\n    if (state.day === null) {\r\n        state.day = day;\r\n    }\r\n};\r\n\r\nparsers.E = function(state, info) {\r\n    var count = lookAhead(\"E\", state);\r\n    //validate if it matches the day?\r\n    var dayOfWeek = getIndexByName(formatNames(info, \"days\", count, false, true), state, true);\r\n    if (dayOfWeek === null) {\r\n        return true;\r\n    }\r\n};\r\n\r\nparsers.M = function(state, info) {\r\n    return parseMonth(\"M\", state, info);\r\n};\r\n\r\nparsers.L = function(state, info) {\r\n    return parseMonth(\"L\", state, info);\r\n};\r\n\r\nparsers.y = function(state) {\r\n    var count = lookAhead(\"y\", state);\r\n    var year = getNumber(count === 1 ? undefined : count, state);\r\n\r\n    if (year === null) {\r\n        return true;\r\n    }\r\n\r\n    if (count === 2) {\r\n        var currentYear = new Date().getFullYear();\r\n        year = (currentYear - currentYear % 100) + year;\r\n        if (year > TWO_DIGIT_YEAR_MAX) {\r\n            year -= 100;\r\n        }\r\n    }\r\n\r\n    state.year = year;\r\n};\r\n\r\nparsers.h = function(state) {\r\n    lookAhead(\"h\", state);\r\n\r\n    var hours = getNumber(2, state);\r\n    if (hours === 12) {\r\n        hours = 0;\r\n    }\r\n\r\n    if (hours === null || outOfRange(hours, 0, 11)) {\r\n        return true;\r\n    }\r\n\r\n    state.hours = hours;\r\n};\r\n\r\nparsers.K = function(state) {\r\n    lookAhead(\"K\", state);\r\n\r\n    var hours = getNumber(2, state);\r\n\r\n    if (hours === null || outOfRange(hours, 0, 11)) {\r\n        return true;\r\n    }\r\n\r\n    state.hours = hours;\r\n};\r\n\r\nparsers.a = function(state, info) {\r\n    var count = lookAhead(\"a\", state);\r\n    var periodFormats = formatNames(info, \"dayPeriods\", count, false, true);\r\n\r\n    var pmHour = getIndexByName([ periodFormats.pm ], state, true);\r\n    if (!pmHour && !getIndexByName([ periodFormats.am ], state, true)) {\r\n        return true;\r\n    }\r\n\r\n    state.pmHour = pmHour;\r\n};\r\n\r\nparsers.H = function(state) {\r\n    lookAhead(\"H\", state);\r\n    var hours = getNumber(2, state);\r\n    if (hours === null || outOfRange(hours, 0, 23)) {\r\n        return true;\r\n    }\r\n    state.hours = hours;\r\n};\r\n\r\nparsers.k = function(state) {\r\n    lookAhead(\"k\", state);\r\n\r\n    var hours = getNumber(2, state);\r\n\r\n    if (hours === null || outOfRange(hours, 1, 24)) {\r\n        return true;\r\n    }\r\n\r\n    state.hours = hours === 24 ? 0 : hours;\r\n};\r\n\r\nparsers.m = function(state) {\r\n    lookAhead(\"m\", state);\r\n    var minutes = getNumber(2, state);\r\n\r\n    if (minutes === null || outOfRange(minutes, 0, 59)) {\r\n        return true;\r\n    }\r\n\r\n    state.minutes = minutes;\r\n};\r\n\r\nparsers.s = function(state) {\r\n    lookAhead(\"s\", state);\r\n    var seconds = getNumber(2, state);\r\n    if (seconds === null || outOfRange(seconds, 0, 59)) {\r\n        return true;\r\n    }\r\n    state.seconds = seconds;\r\n};\r\n\r\nparsers.S = function(state) {\r\n    var count = lookAhead(\"S\", state);\r\n    var match = state.value.substr(state.valueIdx, count);\r\n    var milliseconds = null;\r\n\r\n    if (!isNaN(parseInt(match, 10))) {\r\n        milliseconds = parseFloat(\"0.\" + match, 10);\r\n        milliseconds = round(milliseconds, 3);\r\n        milliseconds *= 1000;\r\n        state.valueIdx += count;\r\n    }\r\n\r\n    if (milliseconds === null || outOfRange(milliseconds, 0, 999)) {\r\n        return true;\r\n    }\r\n\r\n    state.milliseconds = milliseconds;\r\n};\r\n\r\nparsers.z = function(state, info) {\r\n    var count = lookAhead(\"z\", state);\r\n\r\n    var shortFormat = count < 4;\r\n\r\n    var invalid = parseTimeZoneOffset(state, info, {\r\n        shortHours: shortFormat,\r\n        optionalMinutes: shortFormat,\r\n        localizedName: true\r\n    });\r\n\r\n    if (invalid) {\r\n        return invalid;\r\n    }\r\n};\r\n\r\nparsers.Z = function(state, info) {\r\n    var count = lookAhead(\"Z\", state);\r\n\r\n    var invalid = parseTimeZoneOffset(state, info, {\r\n        noSeparator: count < 4,\r\n        zLiteral: count === 5,\r\n        localizedName: count === 4\r\n    });\r\n\r\n    if (invalid) {\r\n        return invalid;\r\n    }\r\n};\r\n\r\nparsers.x = function(state, info) {\r\n    var count = lookAhead(\"x\", state);\r\n\r\n    var invalid = parseTimeZoneOffset(state, info, {\r\n        noSeparator: count !== 3 && count !== 5,\r\n        optionalMinutes: count === 1\r\n    });\r\n    if (invalid) {\r\n        return invalid;\r\n    }\r\n};\r\n\r\nparsers.X = function(state, info) {\r\n    var count = lookAhead(\"X\", state);\r\n\r\n    var invalid = parseTimeZoneOffset(state, info, {\r\n        noSeparator: count !== 3 && count !== 5,\r\n        optionalMinutes: count === 1,\r\n        zLiteral: true\r\n    });\r\n    if (invalid) {\r\n        return invalid;\r\n    }\r\n};\r\n\r\nparsers.G = function(state, info) {\r\n    var count = lookAhead(\"G\", state);\r\n    var eras = formatNames(info, \"eras\", count, false, true);\r\n    var era = getIndexByName([ eras[0], eras[1] ], state, true);\r\n\r\n    if (era === null) {\r\n        return true;\r\n    }\r\n};\r\n\r\nparsers.e = function(state, info) {\r\n    return parseDayOfWeek(\"e\", state, info);\r\n};\r\n\r\nparsers.c = function(state, info) {\r\n    return parseDayOfWeek(\"c\", state, info);\r\n};\r\n\r\nfunction createDate(state) {\r\n    var year = state.year;\r\n    var month = state.month;\r\n    var day = state.day;\r\n    var hours = state.hours;\r\n    var minutes = state.minutes;\r\n    var seconds = state.seconds;\r\n    var milliseconds = state.milliseconds;\r\n    var pmHour = state.pmHour;\r\n    var UTC = state.UTC;\r\n    var hoursOffset = state.hoursOffset;\r\n    var minutesOffset = state.minutesOffset;\r\n    var hasTime = hours !== null || minutes !== null || seconds || null;\r\n    var date = new Date();\r\n    var result;\r\n\r\n    if (year === null && month === null && day === null && hasTime) {\r\n        year = date.getFullYear();\r\n        month = date.getMonth();\r\n        day = date.getDate();\r\n    } else {\r\n        if (year === null) {\r\n            year = date.getFullYear();\r\n        }\r\n\r\n        if (day === null) {\r\n            day = 1;\r\n        }\r\n    }\r\n\r\n    if (pmHour && hours < 12) {\r\n        hours += 12;\r\n    }\r\n\r\n    if (UTC) {\r\n        if (hoursOffset) {\r\n            hours += -hoursOffset;\r\n        }\r\n\r\n        if (minutesOffset) {\r\n            minutes += -minutesOffset * (hoursOffset < 0 ? -1 : 1);\r\n        }\r\n\r\n        result = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));\r\n    } else {\r\n        result = new Date(year, month, day, hours, minutes, seconds, milliseconds);\r\n        adjustDST(result, hours);\r\n    }\r\n\r\n    if (year < 100) {\r\n        result.setFullYear(year);\r\n    }\r\n\r\n    if (result.getDate() !== day && UTC === undefined) {\r\n        return null;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction addFormatSpaces(value, format) {\r\n    var leadingSpaces = leadingSpacesRegex.exec(format)[0];\r\n    var trailingSpaces = trailingSpacesRegex.exec(format)[0];\r\n\r\n    return (\"\" + leadingSpaces + value + trailingSpaces);\r\n}\r\n\r\nfunction parseExact(value, format, info) {\r\n    var pattern = datePattern(format, info).split(EMPTY);\r\n\r\n    var state = {\r\n        format: pattern,\r\n        idx: 0,\r\n        value: addFormatSpaces(value, format),\r\n        valueIdx: 0,\r\n        year: null,\r\n        month: null,\r\n        day: null,\r\n        hours: null,\r\n        minutes: null,\r\n        seconds: null,\r\n        milliseconds: null\r\n    };\r\n    var length = pattern.length;\r\n    var literal = false;\r\n\r\n    for (; state.idx < length; state.idx++) {\r\n        var ch = pattern[state.idx];\r\n\r\n        if (literal) {\r\n            if (ch === \"'\") {\r\n                literal = false;\r\n            }\r\n\r\n            checkLiteral(state);\r\n        } else {\r\n            if (parsers[ch]) {\r\n                var invalid = parsers[ch](state, info);\r\n                if (invalid) {\r\n                    return null;\r\n                }\r\n            } else if (ch === \"'\") {\r\n                literal = true;\r\n                checkLiteral(state);\r\n            } else if (!checkLiteral(state)) {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (state.valueIdx < value.length) {\r\n        return null;\r\n    }\r\n\r\n    return createDate(state) || null;\r\n}\r\n\r\nfunction parseMicrosoftDateOffset(offset) {\r\n    var sign = offset.substr(0, 1) === \"-\" ? -1 : 1;\r\n\r\n    var result = offset.substring(1);\r\n    result = (parseInt(result.substr(0, 2), 10) * 60) + parseInt(result.substring(2), 10);\r\n\r\n    return sign * result;\r\n}\r\n\r\nfunction parseMicrosoftDateFormat(value) {\r\n    if (value && value.indexOf(\"/D\") === 0) {\r\n        var date = dateRegExp.exec(value);\r\n        if (date) {\r\n            date = date[1];\r\n            var tzoffset = offsetRegExp.exec(date.substring(1));\r\n\r\n            date = new Date(parseInt(date, 10));\r\n\r\n            if (tzoffset) {\r\n                tzoffset = parseMicrosoftDateOffset(tzoffset[0]);\r\n                date = convertTimeZone(date, date.getTimezoneOffset(), 0);\r\n                date = convertTimeZone(date, 0, -1 * tzoffset);\r\n            }\r\n\r\n            return date;\r\n        }\r\n    }\r\n}\r\n\r\nfunction defaultFormats(calendar) {\r\n    var formats = [];\r\n    var patterns = calendar.patterns;\r\n    var length = FORMATS_SEQUENCE.length;\r\n\r\n    for (var idx = 0; idx < length; idx++) {\r\n        formats.push(patterns[FORMATS_SEQUENCE[idx]]);\r\n    }\r\n\r\n    return formats.concat(standardDateFormats);\r\n}\r\n\r\nexport default function parseDate(value, formats, locale) {\r\n    if ( locale === void 0 ) locale = DEFAULT_LOCALE;\r\n\r\n    if (!value) {\r\n        return null;\r\n    }\r\n\r\n    if (isDate(value)) {\r\n        return value;\r\n    }\r\n\r\n    var parseValue = String(value).trim();\r\n    var date = parseMicrosoftDateFormat(parseValue);\r\n    if (date) {\r\n        return date;\r\n    }\r\n\r\n    var info = localeInfo(locale);\r\n    var parseFormats = formats || defaultFormats(info.calendar);\r\n    parseFormats = Array.isArray(parseFormats) ? parseFormats : [ parseFormats ];\r\n\r\n    var length = parseFormats.length;\r\n\r\n    for (var idx = 0; idx < length; idx++) {\r\n        date = parseExact(parseValue, parseFormats[idx], info);\r\n        if (date) {\r\n            return date;\r\n        }\r\n    }\r\n\r\n    return date;\r\n}\r\n", "import { DEFAULT_LOCALE } from '../common/constants';\r\nimport isNumber from '../common/is-number';\r\nimport datePattern from './date-pattern';\r\nimport dateNameType from './date-name-type';\r\nimport { dateFormatRegExp, DATE_FIELD_MAP } from './constants';\r\nimport { localeInfo } from '../cldr';\r\n\r\nvar NAME_TYPES = {\r\n    month: {\r\n        type: 'months',\r\n        minLength: 3,\r\n        standAlone: 'L'\r\n    },\r\n\r\n    quarter: {\r\n        type: 'quarters',\r\n        minLength: 3,\r\n        standAlone: 'q'\r\n    },\r\n\r\n    weekday: {\r\n        type: 'days',\r\n        minLength: {\r\n            E: 0,\r\n            c: 3,\r\n            e: 3\r\n        },\r\n        standAlone: 'c'\r\n    },\r\n\r\n    dayperiod: {\r\n        type: 'dayPeriods',\r\n        minLength: 0\r\n    },\r\n\r\n    era: {\r\n        type: 'eras',\r\n        minLength: 0\r\n    }\r\n};\r\n\r\nvar LITERAL = 'literal';\r\n\r\nfunction addLiteral(parts, value) {\r\n    var lastPart = parts[parts.length - 1];\r\n    if (lastPart && lastPart.type === LITERAL) {\r\n        lastPart.pattern += value;\r\n    } else {\r\n        parts.push({\r\n            type: LITERAL,\r\n            pattern: value\r\n        });\r\n    }\r\n}\r\n\r\nfunction isHour12(pattern) {\r\n    return pattern === 'h' || pattern === 'K';\r\n}\r\n\r\nexport default function splitDateFormat(format, locale) {\r\n    if ( locale === void 0 ) locale = DEFAULT_LOCALE;\r\n\r\n    var info = localeInfo(locale);\r\n    var pattern = datePattern(format, info);\r\n    var parts = [];\r\n    var lastIndex = dateFormatRegExp.lastIndex = 0;\r\n    var match = dateFormatRegExp.exec(pattern);\r\n\r\n    while (match) {\r\n        var value = match[0];\r\n\r\n        if (lastIndex < match.index) {\r\n            addLiteral(parts, pattern.substring(lastIndex, match.index));\r\n        }\r\n\r\n        if (value.startsWith('\"') || value.startsWith(\"'\")) {\r\n            addLiteral(parts, value);\r\n        } else {\r\n            var specifier = value[0];\r\n            var type = DATE_FIELD_MAP[specifier];\r\n            var part = {\r\n                type: type,\r\n                pattern: value\r\n            };\r\n\r\n            if (type === 'hour') {\r\n                part.hour12 = isHour12(value);\r\n            }\r\n\r\n            var names = NAME_TYPES[type];\r\n\r\n            if (names) {\r\n                var minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];\r\n                var patternLength = value.length;\r\n\r\n                if (patternLength >= minLength) {\r\n                    part.names = {\r\n                        type: names.type,\r\n                        nameType: dateNameType(patternLength),\r\n                        standAlone: names.standAlone === specifier\r\n                    };\r\n                }\r\n            }\r\n\r\n            parts.push(part);\r\n        }\r\n\r\n        lastIndex = dateFormatRegExp.lastIndex;\r\n        match = dateFormatRegExp.exec(pattern);\r\n    }\r\n\r\n    if (lastIndex < pattern.length) {\r\n        addLiteral(parts, pattern.substring(lastIndex));\r\n    }\r\n\r\n    return parts;\r\n}\r\n", "import { formatDate } from './dates';\r\nimport { formatNumber } from './numbers';\r\nimport { EMPTY } from './common/constants';\r\nimport isDate from './common/is-date';\r\nimport isNumber from './common/is-number';\r\n\r\nvar formatRegExp = /\\{(\\d+)(:[^}]+)?\\}/g;\r\n\r\nexport function toString(value, format, locale) {\r\n    if (format) {\r\n        if (isDate(value)) {\r\n            return formatDate(value, format, locale);\r\n        } else if (isNumber(value)) {\r\n            return formatNumber(value, format, locale);\r\n        }\r\n    }\r\n\r\n    return value !== undefined && value !== null ? value : EMPTY;\r\n}\r\n\r\nexport function format(format, values, locale) {\r\n    return format.replace(formatRegExp, function(match, index, placeholderFormat) {\r\n        var value = values[parseInt(index, 10)];\r\n\r\n        return toString(value, placeholderFormat ? placeholderFormat.substring(1) : EMPTY, locale);\r\n    });\r\n}\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\nimport * as e from \"@progress/kendo-intl\";\r\nclass o {\r\n  /**\r\n   * Creates a new instance of the internationalization service.\r\n   *\r\n   * @param locale - The locale that will be used by the internationalization methods.\r\n   */\r\n  constructor(r) {\r\n    if (this.locale = r, r === \"\" && process.env.NODE_ENV !== \"production\")\r\n      throw \"Locale should not be empty string\";\r\n  }\r\n  /**\r\n   * Formats a string with placeholders such as `Total amount {0:c}`.\r\n   *\r\n   * @param format - The format string.\r\n   * @param values - One or more values to output in the format string placeholders.\r\n   * @return - The formatted string.\r\n   */\r\n  format(r, ...t) {\r\n    return t.length === 1 && Array.isArray(t[0]) ? e.format(r, t[0], this.locale) : e.format(r, t, this.locale);\r\n  }\r\n  /**\r\n   * Converts a `Date` object to a string based on the specified format. If no format is provided, the default short date format is used.\r\n   *\r\n   * @param value - The date which will be formatted.\r\n   * @param format - The format string or options.\r\n   * @return - The formatted date.\r\n   */\r\n  formatDate(r, t) {\r\n    return e.formatDate(r, t, this.locale);\r\n  }\r\n  /**\r\n   * Converts an object to a string based on the specified format.\r\n   *\r\n   * @param value - The value which will be formatted.\r\n   * @param format - The format to use.\r\n   * @return - The formatted object.\r\n   */\r\n  toString(r, t) {\r\n    return e.toString(r, t, this.locale);\r\n  }\r\n  /**\r\n   * Converts a string to a `Number`.\r\n   *\r\n   * @param value - The string which will be parsed.\r\n   * @param format - The format string or options.\r\n   * @return - The parsed number.\r\n   */\r\n  parseNumber(r, t) {\r\n    return e.parseNumber(r, this.locale, t);\r\n  }\r\n  /**\r\n   * Converts a string to a `Date` object based on the specified format.\r\n   *\r\n   * @param value - The string which will be converted.\r\n   * @param format - The format strings or options.\r\n   * @return - The parsed date.\r\n   */\r\n  parseDate(r, t) {\r\n    return e.parseDate(r, t, this.locale);\r\n  }\r\n  /**\r\n   * Converts a `Number` to a string based on the specified format.\r\n   *\r\n   * @param value - The number which will be formatted.\r\n   * @param format - The format string or options.\r\n   * @return - The formatted number.\r\n   */\r\n  formatNumber(r, t) {\r\n    return e.formatNumber(r, t, this.locale);\r\n  }\r\n  /**\r\n   * Returns a localized date field name based on specific `dateFieldName` options.\r\n   *\r\n   * @param options - The detailed configuration for the desired date field name.\r\n   * @returns - The localized date field name from the current locale based on the option.\r\n   */\r\n  dateFieldName(r) {\r\n    return e.dateFieldName(r, this.locale);\r\n  }\r\n  /**\r\n   * Returns the day names from the current locale based on the option.\r\n   *\r\n   * @param options - The detailed configuration for the desired date format.\r\n   * @return - The day names from the current locale based on the option.\r\n   */\r\n  dateFormatNames(r) {\r\n    return e.dateFormatNames(this.locale, r);\r\n  }\r\n  /**\r\n   * Splits the date format into objects which contain information about each part of the pattern.\r\n   *\r\n   * @param format - The format string or options.\r\n   * @returns - The date format parts.\r\n   */\r\n  splitDateFormat(r) {\r\n    return e.splitDateFormat(r, this.locale);\r\n  }\r\n  /**\r\n   * Returns the number symbols from the current locale.\r\n   *\r\n   * @return - The number symbols from the current locale.\r\n   */\r\n  numberSymbols() {\r\n    return e.numberSymbols(this.locale);\r\n  }\r\n  /**\r\n   * Returns the first day index, starting from Sunday.\r\n   *\r\n   * @return - The index of the first day of the week (0 == Sunday).\r\n   */\r\n  firstDay() {\r\n    return e.firstDay(this.locale);\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  localeInfo() {\r\n    return e.localeInfo(this.locale);\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  localeCurrency() {\r\n    return e.localeCurrency(this.locale);\r\n  }\r\n}\r\nexport {\r\n  o as IntlService\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\nconst e = /* @__PURE__ */ Object.create({});\r\nexport {\r\n  e as messages\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\nimport { messages as a } from \"./messages.mjs\";\r\nclass s {\r\n  constructor(t) {\r\n    if (this.language = t, t === \"\" && process.env.NODE_ENV !== \"production\")\r\n      throw \"Language should not be an empty string\";\r\n  }\r\n  /* eslint-disable max-len */\r\n  /**\r\n   * Provides a string based on a key for the current language. When no string for the current language is available under this key, the `defaultValue` is returned.\r\n   *\r\n   * @param key - The key which identifies the string for the current language.\r\n   * @param defaultValue - The default value which will be returned when no string\r\n   * for the current language is available under the key.\r\n   * @return - The string for the current language.\r\n   */\r\n  // tslint:enable:max-line-length\r\n  toLanguageString(t, e) {\r\n    return this.language && a[this.language] && a[this.language].hasOwnProperty(t) ? a[this.language][t] : e;\r\n  }\r\n}\r\nexport {\r\n  s as LocalizationService\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\n\"use client\";\r\nimport * as o from \"react\";\r\nimport { IntlService as t } from \"../Intl/IntlService.mjs\";\r\nimport { LocalizationService as e } from \"../Localization/LocalizationService.mjs\";\r\nconst r = o.createContext({\r\n  intl: new t(\"en\"),\r\n  localization: new e()\r\n});\r\nexport {\r\n  r as GlobalizationContext\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\n\"use client\";\r\nimport { IntlService as n } from \"./Intl/IntlService.mjs\";\r\nimport { LocalizationService as e } from \"./Localization/LocalizationService.mjs\";\r\nimport { GlobalizationContext as i } from \"./globalization/GlobalizationContext.mjs\";\r\nfunction l(t) {\r\n  if (!t && process.env.NODE_ENV !== \"production\")\r\n    throw `Passed component - ${t} is invalid.`;\r\n  const o = t.context;\r\n  return o && o.intl ? o.intl : new n(\"en\");\r\n}\r\nfunction s(t) {\r\n  if (!t && process.env.NODE_ENV !== \"production\")\r\n    throw `Passed component - ${t} is invalid.`;\r\n  const o = t.context;\r\n  return o && o.localization ? o.localization : new e();\r\n}\r\nfunction p(t) {\r\n  t.contextType = i;\r\n}\r\nfunction v(t) {\r\n  t.contextType = i;\r\n}\r\nexport {\r\n  l as provideIntlService,\r\n  s as provideLocalizationService,\r\n  p as registerForIntl,\r\n  v as registerForLocalization\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\nimport o from \"react\";\r\nimport { localeInfo as g } from \"@progress/kendo-intl\";\r\nimport { IntlProvider as u } from \"../Intl/IntlProvider.mjs\";\r\nimport { IntlDataProvider as P } from \"../Intl/IntlDataProvider.mjs\";\r\nimport { locales as m } from \"../Intl/load.mjs\";\r\nimport { LocalizationProvider as z } from \"../Localization/LocalizationProvider.mjs\";\r\nimport { LocalizationDataProvider as D } from \"../Localization/LocalizationDataProvider.mjs\";\r\nimport { messages as E } from \"../Localization/messages.mjs\";\r\nimport { useCustomComponent as i } from \"@progress/kendo-react-common\";\r\nconst G = (l) => {\r\n  var r, a, n;\r\n  const { language: t = \"\", locale: e = \"en\", children: c } = l, s = g(e), f = (r = E[t]) != null ? r : [], p = ((a = m.version) != null ? a : []).concat((n = m[s.name]) != null ? n : []), [d] = i(e ? u : o.Fragment), [v] = i(t ? z : o.Fragment);\r\n  return /* @__PURE__ */ o.createElement(D, { data: f, language: t }, /* @__PURE__ */ o.createElement(P, { data: p, locale: e }, /* @__PURE__ */ o.createElement(v, { language: t }, /* @__PURE__ */ o.createElement(d, { locale: e }, c))));\r\n};\r\nexport {\r\n  G as ServerGlobalization\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\n\"use client\";\r\nimport * as e from \"react\";\r\nimport i from \"prop-types\";\r\nimport { IntlService as l } from \"./IntlService.mjs\";\r\nimport { GlobalizationContext as r } from \"../globalization/GlobalizationContext.mjs\";\r\nconst t = class t extends e.Component {\r\n  /**\r\n   * Returns an internationalization service. The method is suitable for overriding when you implement custom internationalization behavior.\r\n   */\r\n  getIntlService() {\r\n    return new l(this.props.locale);\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  render() {\r\n    return /* @__PURE__ */ e.createElement(r.Consumer, null, (n) => /* @__PURE__ */ e.createElement(r.Provider, { value: { ...n, intl: this.getIntlService() } }, this.props.children));\r\n  }\r\n};\r\nt.propTypes = {\r\n  locale: i.string\r\n};\r\nlet o = t;\r\nexport {\r\n  o as IntlProvider\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\nimport { load as c } from \"@progress/kendo-intl\";\r\nconst o = {}, l = (...i) => {\r\n  i.forEach((e) => {\r\n    const n = Object.keys(e)[0];\r\n    if ([\"main\", \"supplemental\"].includes(n)) {\r\n      const s = Object.keys(e[n])[0];\r\n      s in o ? o[s].includes(e) || (o[s] = [...o[s], e]) : o[s] = [e];\r\n    }\r\n  }), c(...i);\r\n};\r\nexport {\r\n  l as load,\r\n  o as locales\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\n\"use client\";\r\nimport { load as e } from \"./load.mjs\";\r\nconst n = (o) => {\r\n  const { locale: r, data: t, children: a } = o;\r\n  return r && e(t), a;\r\n};\r\nexport {\r\n  n as IntlDataProvider\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\n\"use client\";\r\nimport * as e from \"react\";\r\nimport n from \"prop-types\";\r\nimport { LocalizationService as a } from \"./LocalizationService.mjs\";\r\nimport { GlobalizationContext as r } from \"../globalization/GlobalizationContext.mjs\";\r\nconst t = class t extends e.Component {\r\n  /**\r\n   * Returns a localization service. The method is suitable for overriding when you implement custom localization behavior.\r\n   */\r\n  getLocalizationService() {\r\n    return new a(this.props.language);\r\n  }\r\n  /**\r\n   * @hidden\r\n   */\r\n  render() {\r\n    return /* @__PURE__ */ e.createElement(r.Consumer, null, (i) => /* @__PURE__ */ e.createElement(r.Provider, { value: { ...i, localization: this.getLocalizationService() } }, this.props.children));\r\n  }\r\n};\r\nt.propTypes = {\r\n  language: n.string\r\n};\r\nlet o = t;\r\nexport {\r\n  o as LocalizationProvider\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\nimport { messages as c } from \"./messages.mjs\";\r\nconst p = /* @__PURE__ */ Object.create({}), r = (s, o, t) => {\r\n  for (const e in s)\r\n    if (s.hasOwnProperty(e)) {\r\n      const n = [...t];\r\n      if (n.push(e), typeof s[e] != \"string\")\r\n        r(s[e], o, n);\r\n      else {\r\n        const f = s[e];\r\n        Object.defineProperty(o, n.join(\".\"), { value: f, enumerable: !0 });\r\n      }\r\n    }\r\n};\r\nfunction a(s, o) {\r\n  const t = c[o] = c[o] || {};\r\n  p.lang = o, r(s, t, []);\r\n}\r\nexport {\r\n  p as languages,\r\n  a as loadMessages\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\n\"use client\";\r\nimport { loadMessages as e } from \"./loadMessages.mjs\";\r\nconst n = (o) => {\r\n  const { data: r, language: a, children: t } = o;\r\n  return a && e(r, a), t;\r\n};\r\nexport {\r\n  n as LocalizationDataProvider\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\n\"use client\";\r\nimport * as t from \"react\";\r\nimport { GlobalizationContext as o } from \"../globalization/GlobalizationContext.mjs\";\r\nconst i = () => t.useContext(o).intl;\r\nexport {\r\n  i as useInternationalization\r\n};\r\n", "/**\r\n * @license\r\n *-------------------------------------------------------------------------------------------\r\n * Copyright © 2025 Progress Software Corporation. All rights reserved.\r\n * Licensed under commercial license. See LICENSE.md in the package root for more information\r\n *-------------------------------------------------------------------------------------------\r\n */\r\n\"use client\";\r\nimport * as o from \"react\";\r\nimport { GlobalizationContext as t } from \"../globalization/GlobalizationContext.mjs\";\r\nconst i = () => o.useContext(t).localization;\r\nexport {\r\n  i as useLocalization\r\n};\r\n"],
  "mappings": "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",
  "names": ["IntlError", "a", "errors", "localeInfo", "format", "localeInfo", "localeInfo", "formatNames", "a", "currencyDisplay", "firstDay", "NoWeekData", "formatOptions", "format", "formatOptions", "format", "format", "format", "format", "formatOptions", "formatRegExp", "format", "format", "localeInfo", "format", "PLACEHOLDER", "format", "i", "format", "formatRegExp", "format", "r", "t", "s", "t", "e", "o", "s", "t", "o", "s", "e", "t", "n", "i", "o", "o", "l", "i", "e", "n", "s", "o", "r", "t", "a", "l", "e", "import_prop_types", "t", "s", "i", "n", "o", "p", "r", "s", "o", "t", "e", "n", "n", "o", "r", "a", "t", "l", "r", "a", "n", "t", "e", "s", "p", "o", "v", "t", "i", "o", "i"]
}
