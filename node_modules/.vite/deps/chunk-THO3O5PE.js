import {
  F,
  G,
  I,
  M,
  P2 as P,
  a2 as a,
  a3 as a2,
  a4 as a3,
  a5 as a4,
  e,
  e2,
  e4 as e3,
  h,
  h2,
  i2 as i,
  l,
  l3 as l2,
  m,
  n,
  n3 as n2,
  n6 as n3,
  o6 as o,
  r,
  require_prop_types,
  s3 as s,
  s6 as s2,
  t,
  u,
  v,
  v2,
  x
} from "./chunk-SS2A4NRG.js";
import {
  require_react_dom
} from "./chunk-NXESFFTV.js";
import {
  require_react
} from "./chunk-DRWLMN53.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@progress/kendo-react-buttons/Button.mjs
var e4 = __toESM(require_react(), 1);
var import_prop_types = __toESM(require_prop_types(), 1);
function G2({ imageUrl: a12, name: d2, iconClass: o14, svgIcon: n14, imageAlt: u5, buttonClasses: s15 }) {
  return a12 ? e4.createElement(
    "img",
    {
      role: "presentation",
      className: n2(G.icon({ c: s15 })),
      alt: u5,
      src: a12
    }
  ) : d2 || n14 ? e4.createElement(v2, { className: n2(G.icon({ c: s15 })), name: d2, icon: n14 }) : o14 ? e4.createElement("span", { role: "presentation", className: n2(G.icon({ c: s15 }), o14) }) : null;
}
var M2 = e4.forwardRef((a12, d2) => {
  const {
    children: o14,
    togglable: n14,
    dir: u5,
    disabled: s15,
    selected: r10,
    icon: v4,
    iconClass: h4,
    svgIcon: y3,
    imageUrl: b3,
    imageAlt: z2,
    className: A,
    startIcon: C,
    endIcon: E2,
    onClick: N2,
    size: O = p.size,
    rounded: T2 = p.rounded,
    fillMode: w = p.fillMode,
    themeColor: x4 = p.themeColor,
    ...P2
  } = a12, S = () => {
    n14 && r10 === void 0 && (m5.current = !l6, R(!l6));
  }, U2 = (g6) => {
    S(), N2 && N2.call(void 0, g6);
  }, m5 = e4.useRef(void 0), I3 = e4.useRef(null), [l6, R] = e4.useState(n14 === true && r10 === true), H = y3 !== void 0 || v4 !== void 0 || h4 !== void 0 || b3 !== void 0, K = o14 !== void 0, W = n3(), k2 = a12.unstyled || W, f2 = k2 && k2.uButton;
  e4.useImperativeHandle(d2, () => ({
    element: I3.current,
    selected: m5.current !== void 0 ? m5.current : l6
  })), e4.useMemo(() => {
    n14 && r10 !== void 0 && r10 !== l6 && R(r10);
  }, [n14, r10]), e4.useEffect(() => {
    m5.current = void 0;
  }, [l6]);
  const j = G2({
    name: v4,
    svgIcon: y3,
    iconClass: h4,
    imageUrl: b3,
    imageAlt: z2,
    buttonClasses: f2
  }), B = (g6) => e4.cloneElement(g6, { className: n2(G.icon({ c: f2 })) });
  return e4.createElement(
    "button",
    {
      ref: I3,
      "aria-pressed": n14 ? l6 : void 0,
      ...P2,
      dir: u5,
      disabled: s15,
      onClick: U2,
      className: n2(
        G.wrapper({
          c: f2,
          isRtl: u5 === "rtl",
          selected: l6,
          disabled: s15,
          size: O,
          fillMode: w,
          rounded: T2,
          themeColor: x4,
          iconButton: !K && H
        }),
        A
      )
    },
    C && B(C),
    j,
    o14 && e4.createElement("span", { className: n2(G.text({ c: f2 })) }, o14),
    E2 && B(E2)
  );
});
var p = {
  togglable: false,
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
M2.displayName = "KendoReactButton";
M2.propTypes = {
  children: import_prop_types.default.node,
  selected: import_prop_types.default.bool,
  togglable: import_prop_types.default.bool,
  icon: import_prop_types.default.string,
  svgIcon: r,
  iconClass: import_prop_types.default.string,
  imageUrl: import_prop_types.default.string,
  imageAlt: import_prop_types.default.string,
  size: import_prop_types.default.oneOf([null, "small", "medium", "large"]),
  rounded: import_prop_types.default.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: import_prop_types.default.oneOf([null, "flat", "link", "outline", "solid", "clear"]),
  // eslint-disable-next-line max-len
  themeColor: import_prop_types.default.oneOf([
    null,
    "base",
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ])
};

// node_modules/@progress/kendo-react-buttons/ButtonGroup.mjs
var e5 = __toESM(require_react(), 1);
var import_prop_types2 = __toESM(require_prop_types(), 1);
var T = (i10) => {
  const { children: B, className: C, dir: c3, disabled: p9, width: r10 } = i10, w = n3(), d2 = i10.unstyled || w, m5 = d2 && d2.uButtonGroup, E2 = (t20) => {
    const l6 = e5.Children.count(t20), a12 = c3 !== void 0 ? c3 === "rtl" : u5.current && getComputedStyle(u5.current).direction === "rtl" || false;
    return e5.Children.map(t20, (o14, n14) => {
      if (e5.isValidElement(o14)) {
        const b3 = n14 === l6 - 1, f2 = a12, O = n2(
          o14.props.className,
          P.position({
            c: m5,
            start: f2 ? b3 : n14 === 0,
            end: f2 ? n14 === 0 : b3
          })
        );
        return G5(o14, O);
      }
      return o14;
    });
  }, G5 = (t20, l6) => {
    const a12 = { ...r10 ? { width: r10 } : {}, ...t20.props.style || {} }, o14 = p9 || t20.props.disabled, n14 = {
      ...t20.props,
      ...l6 ? { className: l6 } : {},
      ...Object.keys(a12).length ? { style: a12 } : {},
      ...o14 !== void 0 ? { disabled: o14 } : {}
    };
    return e5.Children.count(t20.props.children) > 0 ? e5.cloneElement(t20, n14, t20.props.children) : e5.cloneElement(t20, n14);
  }, u5 = e5.useRef(null), R = E2(B), y3 = n2(
    P.wrapper({
      c: m5,
      stretched: !!r10,
      disabled: p9
    }),
    C
  ), v4 = {
    className: y3,
    style: { width: `${r10}` },
    dir: c3,
    // Accessibility properties
    role: "group",
    "aria-disabled": p9
  };
  return e5.createElement("div", { ref: u5, ...v4, className: y3 }, R);
};
T.propTypes = {
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.element), import_prop_types2.default.element]),
  className: import_prop_types2.default.string,
  disabled: import_prop_types2.default.bool,
  width: import_prop_types2.default.string,
  dir: import_prop_types2.default.string
};

// node_modules/@progress/kendo-react-buttons/ListButton/SplitButton.mjs
var p3 = __toESM(require_react(), 1);
var import_prop_types5 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/ListButton/ButtonItem.mjs
var t3 = __toESM(require_react(), 1);
var k = (e18) => {
  const I3 = n3(), a12 = e18.unstyled || I3, n14 = a12 && a12.uDropDownButton, o14 = t3.useCallback(
    (s15) => {
      e18.onClick(s15, e18.index);
    },
    [e18]
  ), d2 = e18.dataItem.render || e18.item || (e18.item === void 0 ? e18.render : null), m5 = e18.dataItem.text !== void 0 ? e18.dataItem.text : e18.textField ? e18.dataItem[e18.textField] : e18.dataItem, l6 = t3.createElement(
    "li",
    {
      id: e18.id,
      className: n2(
        F.li({
          c: n14,
          focused: e18.focused
        }),
        e18.className
      ),
      tabIndex: -1,
      onClick: o14,
      onMouseDown: e18.onDown,
      onPointerDown: e18.onDown,
      role: "menuitem",
      "aria-disabled": e18.dataItem.disabled || void 0
    },
    t3.createElement(
      "span",
      {
        tabIndex: -1,
        className: n2(
          F.link({
            c: n14,
            selected: e18.dataItem.selected,
            disabled: e18.dataItem.disabled
          })
        ),
        key: "icon"
      },
      d2 ? t3.createElement(d2, { item: e18.dataItem, itemIndex: e18.index }) : t3.createElement(t3.Fragment, null, (e18.dataItem.icon || e18.dataItem.iconClass || e18.dataItem.svgIcon) && t3.createElement(
        v2,
        {
          className: e18.dataItem.iconClass,
          name: e18.dataItem.icon,
          icon: e18.dataItem.svgIcon
        }
      ), e18.dataItem.imageUrl && t3.createElement("img", { role: "presentation", alt: "", src: e18.dataItem.imageUrl, className: "k-icon" }), m5 && t3.createElement("span", { className: "k-menu-link-text" }, m5))
    )
  );
  return e18.item !== void 0 && e18.render !== void 0 ? e18.render.call(void 0, l6, e18) : l6;
};
k.displayName = "KendoReactButtonItem";

// node_modules/@progress/kendo-react-buttons/ListButton/SplitButtonItem.mjs
var n4 = __toESM(require_react(), 1);
var import_prop_types3 = __toESM(require_prop_types(), 1);
var s4 = class s5 extends n4.Component {
  /**
   * @hidden
   */
  render() {
    return null;
  }
};
s4.propTypes = {
  text: import_prop_types3.default.string,
  icon: import_prop_types3.default.string,
  iconClass: import_prop_types3.default.string,
  imageUrl: import_prop_types3.default.string,
  disabled: import_prop_types3.default.bool,
  render: import_prop_types3.default.any
};
var e6 = s4;

// node_modules/@progress/kendo-react-buttons/ListButton/utils/navigation.mjs
var i2 = (n14, s15, t20, r10) => {
  if (t20)
    return n14;
  const a12 = Math.min(r10 - 1, Math.max(0, n14));
  switch (s15) {
    case e2.enter:
    case e2.space:
    case e2.esc:
      return -1;
    case e2.up:
    case e2.left:
      return a12 - 1 < 0 ? r10 - 1 : a12 - 1;
    case e2.down:
    case e2.right:
      return a12 + 1 >= r10 ? 0 : a12 + 1;
    case e2.home:
      return 0;
    case e2.end:
      return r10 - 1;
    default:
      return n14;
  }
};

// node_modules/@progress/kendo-react-popup/Popup.mjs
var i3 = __toESM(require_react(), 1);
var we = __toESM(require_react_dom(), 1);
var import_prop_types4 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-popup/animation.mjs
var p2 = (i10, s15, t20) => {
  i10.style.transitionDuration = "", s15 && i10.classList.remove(...s15.split(" ")), t20 && i10.classList.remove(...t20.split(" "));
};
var y = typeof window != "undefined" && /Firefox/.test(window.navigator.userAgent);
var x2 = (i10, s15, t20, r10, d2, f2) => {
  if (t20 === 0)
    return d2();
  const o14 = n2(l2.slide({ direction: s15, type: r10, c: f2 })), a12 = n2(l2.slideActive({ direction: s15, type: r10, c: f2 })), c3 = (n14) => {
    n14.target === i10 && (i10.removeEventListener("transitionend", c3), p2(i10, o14, a12), r10 === "exit" ? i10.style.display = "none" : i10.style.display = "", d2());
  };
  i10.addEventListener("transitionend", c3);
  const u5 = i10.ownerDocument;
  if (!u5)
    return;
  const e18 = u5.defaultView;
  if (!e18)
    return;
  const l6 = () => {
    p2(i10, o14, a12), r10 === "enter" && (i10.style.display = ""), o14 && i10.classList.add(...o14.split(" ").filter((n14) => n14)), e18.requestAnimationFrame(() => {
      i10.style.transitionDuration = t20 + "ms", i10.classList.add(...a12.split(" ").filter((n14) => n14));
    });
  };
  y ? e18.requestAnimationFrame(l6) : l6();
};

// node_modules/@progress/kendo-popup-common/dist/es/align-point.js
var align_point_default = {
  "bottom": "bottom",
  "center": "center",
  "middle": "middle",
  "left": "left",
  "right": "right",
  "top": "top"
};

// node_modules/@progress/kendo-popup-common/dist/es/align.js
var align = function(options) {
  var anchorRect = options.anchorRect;
  var anchorAlign = options.anchorAlign;
  var elementRect = options.elementRect;
  var elementAlign = options.elementAlign;
  var margin = options.margin;
  if (margin === void 0) margin = {};
  var anchorHorizontal = anchorAlign.horizontal;
  var anchorVertical = anchorAlign.vertical;
  var elementHorizontal = elementAlign.horizontal;
  var elementVertical = elementAlign.vertical;
  var horizontalMargin = margin.horizontal || 0;
  var verticalMargin = margin.vertical || 0;
  var top = anchorRect.top;
  var left = anchorRect.left;
  if (anchorVertical === align_point_default.bottom) {
    top += anchorRect.height;
  }
  if (anchorVertical === align_point_default.center || anchorVertical === align_point_default.middle) {
    top += Math.round(anchorRect.height / 2);
  }
  if (elementVertical === align_point_default.bottom) {
    top -= elementRect.height;
    verticalMargin *= -1;
  }
  if (elementVertical === align_point_default.center || elementVertical === align_point_default.middle) {
    top -= Math.round(elementRect.height / 2);
    verticalMargin *= -1;
  }
  if (anchorHorizontal === align_point_default.right) {
    left += anchorRect.width;
  }
  if (anchorHorizontal === align_point_default.center || anchorHorizontal === align_point_default.middle) {
    left += Math.round(anchorRect.width / 2);
  }
  if (elementHorizontal === align_point_default.right) {
    left -= elementRect.width;
    horizontalMargin *= -1;
  }
  if (elementHorizontal === align_point_default.center || elementHorizontal === align_point_default.middle) {
    left -= Math.round(elementRect.width / 2);
    horizontalMargin *= -1;
  }
  return {
    top: top + verticalMargin,
    left: left + horizontalMargin
  };
};
var align_default = align;

// node_modules/@progress/kendo-popup-common/dist/es/add-scroll.js
function addScroll(rect, scroll) {
  return {
    top: rect.top + scroll.y,
    left: rect.left + scroll.x,
    height: rect.height,
    width: rect.width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/owner-document.js
function ownerDocument(element) {
  return element.ownerDocument || element.document || element;
}

// node_modules/@progress/kendo-popup-common/dist/es/window.js
var getWindow = function(element) {
  return ownerDocument(element).defaultView;
};
var window_default = getWindow;

// node_modules/@progress/kendo-popup-common/dist/es/document.js
var getDocument = function(element) {
  return ownerDocument(element).documentElement;
};
var document_default = getDocument;

// node_modules/@progress/kendo-popup-common/dist/es/scrollbar-width.js
var cachedWidth = 0;
function scrollbarWidth() {
  if (!cachedWidth && typeof document !== "undefined") {
    var div = document.createElement("div");
    div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
    div.innerHTML = "&nbsp;";
    document.body.appendChild(div);
    cachedWidth = div.offsetWidth - div.scrollWidth;
    document.body.removeChild(div);
  }
  return cachedWidth;
}

// node_modules/@progress/kendo-popup-common/dist/es/window-viewport.js
function windowViewport(element) {
  var win = window_default(element);
  var document2 = document_default(element);
  var result = {
    height: win.innerHeight,
    width: win.innerWidth
  };
  if (document2.scrollHeight - document2.clientHeight > 0) {
    result.width -= scrollbarWidth();
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/bounding-offset.js
var boundingOffset = function(element) {
  if (!element.getBoundingClientRect) {
    var viewport = windowViewport(element);
    return {
      bottom: viewport.height,
      left: 0,
      right: viewport.width,
      top: 0
    };
  }
  var ref = element.getBoundingClientRect();
  var bottom = ref.bottom;
  var left = ref.left;
  var right = ref.right;
  var top = ref.top;
  return {
    bottom,
    left,
    right,
    top
  };
};
var bounding_offset_default = boundingOffset;

// node_modules/@progress/kendo-popup-common/dist/es/offset-parent.js
var offsetParent = function(element) {
  var offsetParent2 = element.offsetParent;
  while (offsetParent2 && offsetParent2.style.position === "static") {
    offsetParent2 = offsetParent2.offsetParent;
  }
  return offsetParent2 || document_default(element);
};
var offset_parent_default = offsetParent;

// node_modules/@progress/kendo-popup-common/dist/es/offset.js
var rectOfHiddenElement = function(element) {
  var ref = element.style;
  var display = ref.display;
  var left = ref.left;
  var position3 = ref.position;
  element.style.display = "";
  element.style.left = "-10000px";
  element.style.position = "absolute";
  var rect = element.getBoundingClientRect();
  element.style.display = display;
  element.style.left = left;
  element.style.position = position3;
  return rect;
};
var offset = function(element) {
  var rect = element.getBoundingClientRect();
  var left = rect.left;
  var top = rect.top;
  if (!rect.height && !rect.width) {
    rect = rectOfHiddenElement(element);
  }
  return {
    top,
    left,
    height: rect.height,
    width: rect.width
  };
};
var offset_default = offset;

// node_modules/@progress/kendo-popup-common/dist/es/parents.js
function parents_default(element, until) {
  var result = [];
  var next = element.parentNode;
  while (next) {
    result.push(next);
    if (next === until) {
      break;
    }
    next = next.parentNode;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/scroll-position.js
function scrollPosition(element) {
  var documentElement = document_default(element);
  var win = window_default(element);
  return {
    x: win.pageXOffset || documentElement.scrollLeft || 0,
    y: win.pageYOffset || documentElement.scrollTop || 0
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/element-scroll-position.js
function element_scroll_position_default(element) {
  if (element === (element.ownerDocument || {}).body) {
    return scrollPosition(element);
  }
  return {
    x: element.scrollLeft,
    y: element.scrollTop
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/parent-scroll-position.js
function parentScrollPosition(element) {
  var parent = offset_parent_default(element);
  return parent ? element_scroll_position_default(parent) : { x: 0, y: 0 };
}

// node_modules/@progress/kendo-popup-common/dist/es/position.js
var position = function(element, parent) {
  var win = window_default(element);
  var elementStyles = win.getComputedStyle(element);
  var offset3 = offset_default(element);
  var parentElement = parent || offset_parent_default(element);
  var ownerDocument2 = element.ownerDocument;
  var useRelative = parentElement !== ownerDocument2.body && parentElement !== ownerDocument2.documentElement;
  var parentOffset = { top: 0, left: 0 };
  if (elementStyles.position !== "fixed" && useRelative) {
    var parentStyles = win.getComputedStyle(parentElement);
    parentOffset = offset_default(parentElement);
    parentOffset.top += parseInt(parentStyles.borderTopWidth, 10);
    parentOffset.left += parseInt(parentStyles.borderLeftWidth, 10);
  }
  return {
    top: offset3.top - parentOffset.top,
    left: offset3.left - parentOffset.left,
    height: offset3.height,
    width: offset3.width
  };
};
var position_default = position;

// node_modules/@progress/kendo-popup-common/dist/es/offset-parent-scroll-position.js
function offset_parent_scroll_position_default(offsetParentElement, element) {
  return (
    // eslint-disable-line no-arrow-condition
    offsetParentElement ? element_scroll_position_default(offsetParentElement) : parentScrollPosition(element)
  );
}

// node_modules/@progress/kendo-popup-common/dist/es/position-with-scroll.js
function position_with_scroll_default(element, parent, scale) {
  if (scale === void 0) scale = 1;
  var offsetParentElement = parent ? offset_parent_default(parent) : null;
  var ref = position_default(element, offsetParentElement);
  var top = ref.top;
  var left = ref.left;
  var height = ref.height;
  var width = ref.width;
  var ref$1 = offset_parent_scroll_position_default(offsetParentElement, element);
  var x4 = ref$1.x;
  var y3 = ref$1.y;
  var ownerDocument2 = element.ownerDocument;
  var positionScale = offsetParentElement === ownerDocument2.body || offsetParentElement === ownerDocument2.documentElement ? 1 : scale;
  return {
    top: top + y3 * positionScale,
    left: left + x4 * positionScale,
    height,
    width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/remove-scroll.js
function removeScroll(rect, scroll) {
  return {
    top: rect.top - scroll.y,
    left: rect.left - scroll.x,
    height: rect.height,
    width: rect.width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/collision.js
var collision_default = {
  "fit": "fit",
  "flip": "flip",
  "none": "none"
};

// node_modules/@progress/kendo-popup-common/dist/es/restrict-to-view.js
var fit = function(position3, size, viewPortSize) {
  var output = 0;
  if (position3 + size > viewPortSize) {
    output = viewPortSize - (position3 + size);
  }
  if (position3 < 0) {
    output = -position3;
  }
  return output;
};
var flip = function(ref) {
  var offset3 = ref.offset;
  var size = ref.size;
  var anchorSize = ref.anchorSize;
  var viewPortSize = ref.viewPortSize;
  var anchorAlignPoint = ref.anchorAlignPoint;
  var elementAlignPoint = ref.elementAlignPoint;
  var margin = ref.margin;
  var output = 0;
  var isPositionCentered = elementAlignPoint === align_point_default.center || elementAlignPoint === align_point_default.middle;
  var isOriginCentered = anchorAlignPoint === align_point_default.center || anchorAlignPoint === align_point_default.middle;
  var marginToAdd = 2 * margin;
  if (elementAlignPoint !== anchorAlignPoint && !isPositionCentered && !isOriginCentered) {
    var isBeforeAnchor = anchorAlignPoint === align_point_default.top || anchorAlignPoint === align_point_default.left;
    if (offset3 < 0 && isBeforeAnchor) {
      output = size + anchorSize + marginToAdd;
      if (offset3 + output + size > viewPortSize) {
        output = 0;
      }
    } else if (offset3 >= 0 && !isBeforeAnchor) {
      if (offset3 + size > viewPortSize) {
        output += -(anchorSize + size + marginToAdd);
      }
      if (offset3 + output < 0) {
        output = 0;
      }
    }
  }
  return output;
};
var restrictToView = function(options) {
  var anchorRect = options.anchorRect;
  var anchorAlign = options.anchorAlign;
  var elementRect = options.elementRect;
  var elementAlign = options.elementAlign;
  var collisions = options.collisions;
  var viewPort = options.viewPort;
  var margin = options.margin;
  if (margin === void 0) margin = {};
  var elementTop = elementRect.top;
  var elementLeft = elementRect.left;
  var elementHeight = elementRect.height;
  var elementWidth = elementRect.width;
  var viewPortHeight = viewPort.height;
  var viewPortWidth = viewPort.width;
  var horizontalMargin = margin.horizontal || 0;
  var verticalMargin = margin.vertical || 0;
  var left = 0;
  var top = 0;
  var isVerticalFit = collisions.vertical === collision_default.fit;
  var isHorizontalFit = collisions.horizontal === collision_default.fit;
  var isVerticalFlip = collisions.vertical === collision_default.flip;
  var isHorizontalFlip = collisions.horizontal === collision_default.flip;
  if (isVerticalFit) {
    top += fit(elementTop, elementHeight, viewPortHeight);
  }
  if (isHorizontalFit) {
    left += fit(elementLeft, elementWidth, viewPortWidth);
  }
  if (isVerticalFlip) {
    top += flip({
      margin: verticalMargin,
      offset: elementTop,
      size: elementHeight,
      anchorSize: anchorRect.height,
      viewPortSize: viewPortHeight,
      anchorAlignPoint: anchorAlign.vertical,
      elementAlignPoint: elementAlign.vertical
    });
  }
  if (isHorizontalFlip) {
    left += flip({
      margin: horizontalMargin,
      offset: elementLeft,
      size: elementWidth,
      anchorSize: anchorRect.width,
      viewPortSize: viewPortWidth,
      anchorAlignPoint: anchorAlign.horizontal,
      elementAlignPoint: elementAlign.horizontal
    });
  }
  var flippedVertical = isVerticalFlip && top !== 0;
  var flippedHorizontal = isHorizontalFlip && left !== 0;
  var fittedVertical = isVerticalFit && top !== 0;
  var fittedHorizontal = isHorizontalFit && left !== 0;
  return {
    flipped: flippedHorizontal || flippedVertical,
    fitted: fittedVertical || fittedHorizontal,
    flip: {
      horizontal: flippedHorizontal,
      vertical: flippedVertical
    },
    fit: {
      horizontal: fittedHorizontal,
      vertical: fittedVertical
    },
    offset: {
      left,
      top
    }
  };
};
var restrict_to_view_default = restrictToView;

// node_modules/@progress/kendo-popup-common/dist/es/siblings.js
function siblings_default(element) {
  var result = [];
  var sibling = element.parentNode.firstElementChild;
  while (sibling) {
    if (sibling !== element) {
      result.push(sibling);
    }
    sibling = sibling.nextElementSibling;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/sibling-container.js
function sibling_container_default(anchor, container) {
  var parentElements = parents_default(anchor);
  var containerElement = container;
  var siblingElements;
  var result;
  while (containerElement) {
    siblingElements = siblings_default(containerElement);
    result = parentElements.reduce(
      function(list, p9) {
        return list.concat(siblingElements.filter(function(s15) {
          return s15 === p9;
        }));
      },
      []
    )[0];
    if (result) {
      break;
    }
    containerElement = containerElement.parentElement;
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/utils.js
var eitherRect = function(rect, offset3) {
  if (!rect) {
    return { height: 0, left: offset3.left, top: offset3.top, width: 0 };
  }
  return rect;
};
var scaleRect = function(rect, scale) {
  if (!rect || scale === 1) {
    return rect;
  }
  return {
    height: rect.height / scale,
    left: rect.left / scale,
    top: rect.top / scale,
    width: rect.width / scale
  };
};
var removeStackingOffset = function(rect, stackingOffset) {
  if (!stackingOffset) {
    return rect;
  }
  var result = {
    height: rect.height,
    left: rect.left - stackingOffset.left,
    top: rect.top - stackingOffset.top,
    width: rect.width
  };
  return result;
};
function memoize(fun) {
  var result;
  var called = false;
  return function() {
    var args = [], len = arguments.length;
    while (len--) args[len] = arguments[len];
    if (called) {
      return result;
    }
    result = fun.apply(void 0, args);
    called = true;
    return result;
  };
}
var hasRelativeStackingContext = memoize(function(elementSource) {
  if (!canUseDOM()) {
    return false;
  }
  var currentDocument = elementSource ? elementSource.ownerDocument : document;
  if (!currentDocument || !currentDocument.body) {
    return false;
  }
  var top = 10;
  var parent = currentDocument.createElement("div");
  parent.style.transform = "matrix(10, 0, 0, 10, 0, 0)";
  parent.innerHTML = '<div style="position: fixed; top: ' + top + 'px;">child</div>';
  currentDocument.body.appendChild(parent);
  var isDifferent = parent.children[0].getBoundingClientRect().top !== top;
  currentDocument.body.removeChild(parent);
  return isDifferent;
});
var canUseDOM = function() {
  return Boolean(
    // from fbjs
    typeof window !== "undefined" && window.document && window.document.createElement
  );
};
var utils = {
  eitherRect,
  scaleRect,
  removeStackingOffset,
  hasRelativeStackingContext,
  canUseDOM
};
var utils_default = utils;

// node_modules/@progress/kendo-popup-common/dist/es/dom-utils.js
var STYLES = [
  "font-size",
  "font-family",
  "font-stretch",
  "font-style",
  "font-weight",
  "line-height"
];
var addOffset = function(current, addition) {
  return {
    left: current.left + addition.left,
    top: current.top + addition.top
  };
};
var getWindow2 = function() {
  return utils_default.canUseDOM() ? window : null;
};
var getFontStyles = function(el) {
  var window2 = getWindow2();
  if (!window2 || !el) {
    return [];
  }
  var computedStyles = window2.getComputedStyle(el);
  return STYLES.map(function(font) {
    return { key: font, value: computedStyles[font] };
  });
};
var hasOffsetParent = function(el) {
  if (!el) {
    return false;
  }
  return Boolean(el.offsetParent);
};
var offset2 = function(el) {
  if (!el) {
    return null;
  }
  return offset_default(el);
};
var offsetAtPoint = function(element, currentLocation) {
  if (!element) {
    return null;
  }
  var ref = element.style;
  var left = ref.left;
  var top = ref.top;
  var transition = ref.transition;
  element.style.transition = "none";
  element.style.left = currentLocation.left + "px";
  element.style.top = currentLocation.top + "px";
  var currentOffset = offset_default(element);
  element.style.left = left;
  element.style.top = top;
  element.offsetHeight;
  element.style.transition = transition;
  return currentOffset;
};
var position2 = function(element, popupElement, scale) {
  if (!element || !popupElement) {
    return null;
  }
  var currentScale = scale || 1;
  return position_with_scroll_default(element, popupElement, currentScale);
};
var OVERFLOW_REGEXP = /auto|scroll/;
var overflowElementStyle = function(element) {
  return "" + element.style.overflow + element.style.overflowX + element.style.overflowY;
};
var overflowComputedStyle = function(element) {
  var styles = window.getComputedStyle(element);
  return "" + styles.overflow + styles.overflowX + styles.overflowY;
};
var overflowStyle = function(element) {
  return overflowElementStyle(element) || overflowComputedStyle(element);
};
var scrollableParents = function(element) {
  var parentElements = [];
  if (!utils_default.canUseDOM()) {
    return parentElements;
  }
  var parent = element.parentElement;
  while (parent) {
    if (OVERFLOW_REGEXP.test(overflowStyle(parent)) || parent.hasAttribute("data-scrollable")) {
      parentElements.push(parent);
    }
    parent = parent.parentElement;
  }
  parentElements.push(window);
  return parentElements;
};
var getRelativeContextElement = function(el) {
  if (!el || !utils_default.hasRelativeStackingContext()) {
    return null;
  }
  var parent = el.parentElement;
  while (parent) {
    if (window.getComputedStyle(parent).transform !== "none") {
      return parent;
    }
    parent = parent.parentElement;
  }
  return null;
};
var stackingElementOffset = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return null;
  }
  return offset_default(relativeContextElement);
};
var stackingElementScroll = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return { x: 0, y: 0 };
  }
  return {
    x: relativeContextElement.scrollLeft,
    y: relativeContextElement.scrollTop
  };
};
var stackingElementViewPort = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return null;
  }
  return {
    height: relativeContextElement.scrollHeight,
    width: relativeContextElement.scrollWidth
  };
};
var useRelativePosition = function(el) {
  return Boolean(getRelativeContextElement(el));
};
var zoomLevel = function() {
  if (!utils_default.canUseDOM()) {
    return 1;
  }
  return parseFloat((document.documentElement.clientWidth / window.innerWidth).toFixed(2)) || 1;
};
var isZoomed = function() {
  return zoomLevel() > 1;
};
var zIndex = function(anchor, container) {
  if (!anchor || !utils_default.canUseDOM()) {
    return null;
  }
  var sibling = sibling_container_default(anchor, container);
  if (!sibling) {
    return null;
  }
  var result = [anchor].concat(parents_default(anchor, sibling)).reduce(
    function(index, p9) {
      var zIndexStyle = p9.style.zIndex || window.getComputedStyle(p9).zIndex;
      var current = parseInt(zIndexStyle, 10);
      return current > index ? current : index;
    },
    0
  );
  return result ? result + 1 : null;
};
var domUtils = {
  addOffset,
  addScroll,
  align: align_default,
  boundingOffset: bounding_offset_default,
  getFontStyles,
  getWindow: getWindow2,
  hasOffsetParent,
  offset: offset2,
  offsetAtPoint,
  position: position2,
  removeScroll,
  restrictToView: restrict_to_view_default,
  scrollPosition,
  scrollableParents,
  getRelativeContextElement,
  stackingElementOffset,
  stackingElementScroll,
  stackingElementViewPort,
  useRelativePosition,
  windowViewPort: windowViewport,
  zoomLevel,
  isZoomed,
  zIndex
};
var dom_utils_default = domUtils;

// node_modules/@progress/kendo-popup-common/dist/es/align-element.js
var absoluteRect = function(anchor, element, offset3, scale) {
  var scrollPos = elementScrollPosition(anchor, element);
  var rect = utils_default.eitherRect(dom_utils_default.offset(anchor), offset3);
  var stackScale = 2 * scale;
  var stackScroll = dom_utils_default.stackingElementScroll(element);
  if (scale !== 1 && stackScroll) {
    stackScroll.x /= stackScale;
    stackScroll.y /= stackScale;
  }
  var stackOffset = dom_utils_default.stackingElementOffset(element);
  if (scale !== 1 && stackOffset) {
    stackOffset.left /= stackScale;
    stackOffset.top /= stackScale;
  }
  return dom_utils_default.removeScroll(
    dom_utils_default.addScroll(
      utils_default.removeStackingOffset(
        utils_default.scaleRect(rect, scale),
        stackOffset
      ),
      stackScroll
    ),
    scrollPos
  );
};
var relativeRect = function(anchor, element, offset3, scale) {
  var rect = utils_default.eitherRect(dom_utils_default.position(anchor, element, scale), offset3);
  return utils_default.scaleRect(rect, scale);
};
var elementScrollPosition = function(anchor, element) {
  return anchor ? { x: 0, y: 0 } : dom_utils_default.scrollPosition(element);
};
var alignElement = function(settings) {
  var anchor = settings.anchor;
  var element = settings.element;
  var anchorAlign = settings.anchorAlign;
  var elementAlign = settings.elementAlign;
  var margin = settings.margin;
  var offset3 = settings.offset;
  var positionMode = settings.positionMode;
  var scale = settings.scale;
  var currentScale = scale || 1;
  var fixedMode = positionMode === "fixed" || !dom_utils_default.hasOffsetParent(element);
  var anchorRect = fixedMode ? absoluteRect(anchor, element, offset3, currentScale) : relativeRect(anchor, element, offset3, currentScale);
  var elementRect = utils_default.scaleRect(dom_utils_default.offset(element), currentScale);
  var result = dom_utils_default.align({
    anchorAlign,
    anchorRect,
    elementAlign,
    elementRect,
    margin
  });
  return result;
};
var align_element_default = alignElement;

// node_modules/@progress/kendo-popup-common/dist/es/position-element.js
var positionElement = function(settings) {
  var anchor = settings.anchor;
  var currentLocation = settings.currentLocation;
  var element = settings.element;
  var anchorAlign = settings.anchorAlign;
  var elementAlign = settings.elementAlign;
  var collisions = settings.collisions;
  var margin = settings.margin;
  var scale = settings.scale;
  var currentScale = scale || 1;
  var elementOffset = dom_utils_default.offsetAtPoint(element, currentLocation);
  var elementRect = utils_default.scaleRect(elementOffset, currentScale);
  var anchorOffset = utils_default.scaleRect(dom_utils_default.offset(anchor), currentScale);
  var anchorRect = utils_default.eitherRect(anchorOffset, currentLocation);
  var viewPort = settings.viewPort || dom_utils_default.windowViewPort(element);
  viewPort.width = viewPort.width / currentScale;
  viewPort.height = viewPort.height / currentScale;
  var result = dom_utils_default.restrictToView({
    anchorAlign,
    anchorRect,
    collisions,
    elementAlign,
    elementRect,
    margin,
    viewPort
  });
  var offset3 = dom_utils_default.addOffset(currentLocation, result.offset);
  return {
    flip: result.flip,
    flipped: result.flipped,
    fit: result.fit,
    fitted: result.fitted,
    offset: offset3
  };
};
var position_element_default = positionElement;

// node_modules/@progress/kendo-react-popup/util.mjs
var d = 16.666666666666668;
var g = function(u5, f2, t20 = {}) {
  let e18, n14, l6, r10, i10 = 0;
  t20 = t20 || {};
  const s15 = function() {
    i10 = t20.leading === false ? 0 : (/* @__PURE__ */ new Date()).getTime(), e18 = void 0, r10 = u5.apply(n14, l6), e18 || (n14 = l6 = null);
  };
  return function() {
    const o14 = (/* @__PURE__ */ new Date()).getTime();
    !i10 && t20.leading === false && (i10 = o14);
    const a12 = f2 - (o14 - i10);
    return n14 = void 0, l6 = arguments, a12 <= 0 || a12 > f2 ? (e18 && (clearTimeout(e18), e18 = void 0), i10 = o14, r10 = u5.apply(n14, l6), e18 || (n14 = l6 = null)) : !e18 && t20.trailing !== false && (e18 = window.setTimeout(s15, a12)), r10;
  };
};

// node_modules/@progress/kendo-react-popup/Popup.mjs
var Te = i3.createContext((c3) => c3);
var Re = 100;
var Ne = 1;
function b(c3, p9) {
  if (c3 === p9)
    return true;
  if (!!c3 != !!p9)
    return false;
  const T2 = Object.getOwnPropertyNames(c3), R = Object.getOwnPropertyNames(p9);
  if (T2.length !== R.length)
    return false;
  for (let m5 = 0; m5 < T2.length; m5++) {
    const h4 = T2[m5];
    if (c3[h4] !== p9[h4])
      return false;
  }
  return true;
}
var ze = {
  left: -1e3,
  top: 0
};
var te = i3.forwardRef((c3, p9) => {
  const R = i3.useContext(Te).call(void 0, c3), {
    collision: m5 = g2.collision,
    anchorAlign: h4 = g2.anchorAlign,
    popupAlign: v4 = g2.popupAlign,
    offset: N2 = g2.offset,
    animate: ne = g2.animate,
    show: y3 = g2.show,
    margin: _ = g2.margin,
    positionMode: F2 = g2.positionMode,
    appendTo: P2,
    contentKey: z2,
    anchor: f2,
    scale: oe2,
    role: re2,
    onKeyDown: ie2,
    onPosition: q,
    onOpen: V2,
    onMouseDownOutside: W,
    onClose: X,
    className: I3,
    popupClass: L,
    id: se,
    style: M3,
    children: ce
  } = R, le2 = n3(), S = R.unstyled || le2, C = S && S.uPopup, [n14, U2] = i3.useState({
    current: "hidden",
    previous: "hidden",
    props: {}
  }), B = (e18) => {
    window == null || window.addEventListener("mousedown", J2), k2(e18), G5(e18.firstChild, "enter", ae), U2({ ...o14, current: "shown", previous: o14.current });
  }, k2 = (e18) => {
    const { width: r10, height: d2 } = e18.style;
    if (e18.offsetWidth === 0 && e18.offsetHeight === 0)
      return;
    e18.style.width = e18.offsetWidth + "px", e18.style.height = e18.offsetHeight + "px";
    const a12 = align_element_default({
      anchor: f2,
      anchorAlign: h4,
      element: e18,
      elementAlign: v4,
      offset: N2,
      margin: _,
      positionMode: F2,
      scale: oe2
    }), u5 = position_element_default({
      anchor: f2,
      anchorAlign: h4,
      element: e18,
      elementAlign: v4,
      collisions: m5,
      currentLocation: a12,
      margin: _
    });
    if (e18.style.top = u5.offset.top + "px", e18.style.left = u5.offset.left + "px", e18.style.width = r10, e18.style.height = d2, K.current = {
      fit: u5.fit,
      fitted: u5.fitted,
      flip: u5.flip,
      flipped: u5.flipped
    }, q) {
      const x4 = {
        target: E2.current,
        flipped: u5.flipped,
        fitted: u5.fitted
      };
      q.call(void 0, x4);
    }
  }, ae = () => {
    const e18 = s15.current;
    e18 && (y3 && e18.classList.add(
      ...n2(l2.animationContainerShown({ c: C })).split(" ").filter((r10) => r10)
    ), fe(e18), V2 && V2.call(void 0, { target: E2.current }));
  }, G5 = (e18, r10, d2) => {
    if (!v4)
      return;
    let a12;
    const { horizontal: u5, vertical: x4 } = v4;
    typeof c3.animate == "object" && c3.animate.direction ? a12 = c3.animate.direction : u5 === "left" && x4 === "center" ? a12 = "right" : u5 === "right" && x4 === "center" ? a12 = "left" : x4 === "top" ? a12 = "down" : a12 = "up";
    const ge = {
      down: "up",
      up: "down",
      left: "right",
      right: "left"
    };
    K.current && K.current.flipped && (a12 = ge[a12]), x2(e18, a12, pe()[r10], r10, d2, C);
  }, J2 = (e18) => {
    var a12;
    const r10 = ((a12 = e18 == null ? void 0 : e18.target) == null ? void 0 : a12.closest(".k-animation-container")) === null, d2 = (f2 == null ? void 0 : f2.contains(e18 == null ? void 0 : e18.target)) || false;
    if (r10) {
      if (W) {
        const u5 = {
          target: E2.current,
          event: e18,
          state: n14,
          isAnchorClicked: d2
        };
        W.call(void 0, u5);
      }
      window == null || window.removeEventListener("mousedown", J2);
    }
  }, ue = (e18) => {
    if (!y3) {
      const r10 = S && S.uPopup;
      e18.classList.remove(
        ...n2(l2.animationContainerShown({ c: r10 })).split(" ").filter((d2) => d2)
      );
    }
    H();
  }, Q3 = () => {
    o14.current === "hiding" && (o14.previous === "shown" || o14.previous === "reposition") && U2({ ...o14, current: "hidden", previous: o14.current }), X && X.call(void 0, { target: E2.current });
  }, pe = () => {
    const e18 = ne;
    let r10 = 0, d2 = 0;
    return e18 && (e18 === true ? r10 = d2 = 300 : (r10 = e18.openDuration || 0, d2 = e18.closeDuration || 0)), { enter: r10, exit: d2 };
  }, fe = (e18) => {
    H(), O.current = dom_utils_default.scrollableParents(f2 || e18), O.current && O.current.map((r10) => r10.addEventListener("scroll", j)), window.addEventListener("resize", j);
  }, H = () => {
    O.current && (O.current.map((e18) => e18.removeEventListener("scroll", j)), O.current = void 0), window.removeEventListener("resize", j);
  }, j = g(() => {
    s15.current && o14.current !== "hidden" && o14.current !== "hiding" && U2({ ...n14, current: "reposition", previous: o14.current });
  }, d), de = () => Y2 ? Y2 + Ne : Re, Y2 = n() || 0, K = i3.useRef(void 0), O = i3.useRef(void 0), s15 = i3.useRef(null), E2 = i3.useRef(null), $ = i3.useRef({}), Z = i3.useRef(false);
  i3.useImperativeHandle(E2, () => ({
    element: s15.current,
    setPosition: k2,
    props: c3
  })), i3.useImperativeHandle(p9, () => E2.current);
  const o14 = i3.useMemo(() => {
    const e18 = {
      ...n14,
      props: {
        show: y3,
        anchor: f2,
        anchorAlign: h4,
        appendTo: P2,
        collision: m5,
        popupAlign: v4,
        className: I3,
        popupClass: L,
        style: M3,
        offset: N2,
        contentKey: z2
      }
    };
    return y3 ? n14.current === "hidden" || n14.current === "hiding" ? { ...e18, current: "showing", previous: n14.current } : n14.current === "showing" ? { ...e18, current: "shown", previous: n14.current } : n14.current === "shown" && (!b(N2, n14.props.offset) || !b(h4, n14.props.anchorAlign) || !b(P2, n14.props.appendTo) || !b(m5, n14.props.collision) || !b(v4, n14.props.popupAlign) || !b(M3, n14.props.style) || f2 !== n14.props.anchor || L !== n14.props.popupClass || I3 !== n14.props.className) ? { ...e18, current: "reposition", previous: n14.current } : e18 : n14.current === "hiding" || n14.current === "hidden" ? { ...e18, current: "hidden", previous: n14.current } : { ...e18, current: "hiding", previous: n14.current };
  }, [
    y3,
    f2,
    h4,
    P2,
    m5,
    v4,
    I3,
    L,
    M3,
    N2,
    z2,
    n14
  ]);
  i3.useEffect(() => {
    o14.current === "hiding" && !Z.current && s15.current ? (Z.current = true, ue(s15.current), G5(s15.current.firstChild, "exit", Q3)) : (Z.current = false, o14.current === "showing" && s15.current && !s15.current.classList.contains("k-animation-container-shown") ? B(s15.current) : o14.current === "hiding" && s15.current ? Q3() : o14.current === "reposition" && o14.previous === "shown" ? setTimeout(() => {
      U2({ ...o14, current: "shown", previous: o14.current });
    }, 0) : o14.current === "shown" && $.current.contentKey !== z2 && s15.current && k2(s15.current)), o14.current === "reposition" && (o14.previous === "shown" || o14.previous === "showing") && s15.current && k2(s15.current), $.current = { contentKey: z2 };
  }, [o14]), i3.useEffect(() => (o14.current === "showing" && s15.current && B(s15.current), () => {
    H();
  }), []);
  const ee = P2 || (e ? f2 && f2.ownerDocument ? f2.ownerDocument.body : document.body : void 0), me = Object.assign(
    {},
    { position: F2, top: 0, left: -1e4 },
    M3 || {}
  ), he = o14.current === "hiding";
  if ((y3 || he) && ee) {
    const e18 = de(), r10 = i3.createElement(t.Provider, { value: e18 }, i3.createElement(
      "div",
      {
        onKeyDown: ie2,
        className: n2(l2.animationContainer({ c: C }), I3),
        id: se,
        ref: s15,
        style: {
          zIndex: e18,
          ...me
        }
      },
      i3.createElement(
        "div",
        {
          className: n2(l2.animationChild({ c: C })),
          style: { transitionDelay: "0ms" }
        },
        i3.createElement("div", { role: re2, className: n2(l2.popup({ c: C }), L) }, ce)
      )
    ));
    return P2 !== null ? we.createPortal(r10, ee) : r10;
  }
  return null;
});
var g2 = {
  collision: {
    horizontal: collision_default.fit,
    vertical: collision_default.flip
  },
  anchorAlign: {
    horizontal: align_point_default.left,
    vertical: align_point_default.bottom
  },
  popupAlign: {
    horizontal: align_point_default.left,
    vertical: align_point_default.top
  },
  offset: ze,
  animate: true,
  show: false,
  margin: {
    horizontal: 0,
    vertical: 0
  },
  positionMode: "absolute"
};
te.displayName = "Popup";
te.propTypes = {
  anchor: function(c3) {
    const p9 = c3.anchor;
    return p9 && typeof p9.nodeType != "number" ? new Error("Invalid prop `anchor` supplied to `Kendo React Popup`. Validation failed.") : null;
  },
  appendTo: function(c3) {
    const p9 = c3.appendTo;
    return p9 && typeof p9.nodeType != "number" ? new Error("Invalid prop `appendTo` supplied to `Kendo React Popup`. Validation failed.") : null;
  },
  className: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.arrayOf(import_prop_types4.default.string.isRequired)]),
  id: import_prop_types4.default.string,
  popupClass: import_prop_types4.default.oneOfType([import_prop_types4.default.string, import_prop_types4.default.arrayOf(import_prop_types4.default.string), import_prop_types4.default.object]),
  collision: import_prop_types4.default.shape({
    horizontal: import_prop_types4.default.oneOf([collision_default.fit, collision_default.flip, collision_default.none]),
    vertical: import_prop_types4.default.oneOf([collision_default.fit, collision_default.flip, collision_default.none])
  }),
  anchorAlign: import_prop_types4.default.shape({
    horizontal: import_prop_types4.default.oneOf([align_point_default.left, align_point_default.center, align_point_default.right]),
    vertical: import_prop_types4.default.oneOf([align_point_default.top, align_point_default.center, align_point_default.bottom])
  }),
  popupAlign: import_prop_types4.default.shape({
    horizontal: import_prop_types4.default.oneOf([align_point_default.left, align_point_default.center, align_point_default.right]),
    vertical: import_prop_types4.default.oneOf([align_point_default.top, align_point_default.center, align_point_default.bottom])
  }),
  offset: import_prop_types4.default.shape({
    left: import_prop_types4.default.number,
    top: import_prop_types4.default.number
  }),
  children: import_prop_types4.default.oneOfType([import_prop_types4.default.element, import_prop_types4.default.node]),
  show: import_prop_types4.default.bool,
  animate: import_prop_types4.default.oneOfType([
    import_prop_types4.default.bool,
    import_prop_types4.default.shape({
      openDuration: import_prop_types4.default.number,
      closeDuration: import_prop_types4.default.number
    })
  ]),
  margin: import_prop_types4.default.shape({
    horizontal: import_prop_types4.default.number,
    vertical: import_prop_types4.default.number
  }),
  positionMode: import_prop_types4.default.oneOf(["fixed", "absolute"]),
  scale: import_prop_types4.default.number,
  style: import_prop_types4.default.object,
  onClose: import_prop_types4.default.func,
  onPosition: import_prop_types4.default.func,
  onOpen: import_prop_types4.default.func,
  onKeyDown: import_prop_types4.default.func,
  onMouseDownOutside: import_prop_types4.default.func
};

// node_modules/@progress/kendo-react-buttons/ListButton/utils/popup.mjs
function n5(o14) {
  const t20 = { horizontal: "left", vertical: "bottom" };
  return o14 && (t20.horizontal = "right"), t20;
}
function i4(o14) {
  const t20 = { horizontal: "left", vertical: "top" };
  return o14 && (t20.horizontal = "right"), t20;
}

// node_modules/@progress/kendo-react-buttons/package-metadata.mjs
var e7 = {
  name: "@progress/kendo-react-buttons",
  productName: "KendoReact",
  productCode: "KENDOUIREACT",
  productCodes: ["KENDOUIREACT"],
  publishDate: 1745410557,
  version: "10.2.0",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/components/my-license/"
};

// node_modules/@progress/kendo-svg-icons/dist/index.es.js
var caretAltUpIcon = {
  name: "caret-alt-up",
  content: '<path d="m256 160 128 192H128z" />',
  viewBox: "0 0 512 512"
};
var caretAltRightIcon = {
  name: "caret-alt-right",
  content: '<path d="M352 256 160 384V128z" />',
  viewBox: "0 0 512 512"
};
var caretAltDownIcon = {
  name: "caret-alt-down",
  content: '<path d="M256 352 128 160h256z" />',
  viewBox: "0 0 512 512"
};
var caretAltLeftIcon = {
  name: "caret-alt-left",
  content: '<path d="m160 256 192-128v256z" />',
  viewBox: "0 0 512 512"
};
var caretAltToTopIcon = {
  name: "caret-alt-to-top",
  content: '<path d="m128 352 128-192 128 192zm256-224H128v32h256z" />',
  viewBox: "0 0 512 512"
};
var caretAltToRightIcon = {
  name: "caret-alt-to-right",
  content: '<path d="m128 128 192 128-192 128zm224 256V128h-32v256z" />',
  viewBox: "0 0 512 512"
};
var caretAltToBottomIcon = {
  name: "caret-alt-to-bottom",
  content: '<path d="M384 128 256 320 128 128zM128 352h256v-32H128z" />',
  viewBox: "0 0 512 512"
};
var caretAltToLeftIcon = {
  name: "caret-alt-to-left",
  content: '<path d="M352 384 160 256l192-128zM128 128v256h32V128z" />',
  viewBox: "0 0 512 512"
};
var caretAltExpandIcon = {
  name: "caret-alt-expand",
  content: '<path d="M128 288h256L256 480zM256 32 128 224h256.001z" />',
  viewBox: "0 0 512 512"
};
var chevronUpIcon = {
  name: "chevron-up",
  content: '<path d="m129.941 353.941 126.06-126.06 126.061 126.06L416 320 256.001 160 96 320z" />',
  viewBox: "0 0 512 512"
};
var chevronRightIcon = {
  name: "chevron-right",
  content: '<path d="m158.059 129.941 126.06 126.06-126.06 126.061L192 416l160-159.999L192 96z" />',
  viewBox: "0 0 512 512"
};
var chevronDownIcon = {
  name: "chevron-down",
  content: '<path d="m382.059 158.059-126.06 126.06-126.061-126.06L96 192l159.999 160L416 192z" />',
  viewBox: "0 0 512 512"
};
var chevronLeftIcon = {
  name: "chevron-left",
  content: '<path d="m353.941 382.059-126.06-126.06 126.06-126.061L320 96 160 255.999 320 416z" />',
  viewBox: "0 0 512 512"
};
var arrowsSwapIcon = {
  name: "arrows-swap",
  content: '<path d="M256 160h-64v224h-32V160H96l80-128zm96 192V128h-32v224h-64l80 128 80-128z" />',
  viewBox: "0 0 512 512"
};
var gridIcon = {
  name: "grid",
  content: '<path d="M32 32h128v128H32zm160 448h128V352H192zm-160 0h128V352H32zm0-160h128V192H32zm160 0h128V192H192zM352 32v128h128V32zm0 288h128V192H352zM192 160h128V32H192zm160 320h128V352H352z" />',
  viewBox: "0 0 512 512"
};
var groupIcon = {
  name: "group",
  content: '<path d="M32 256h192v192H32zm0-32h192V32H32zm224 224h192V256H256zm0-416v192h192V32z" />',
  viewBox: "0 0 512 512"
};
var ungroupIcon = {
  name: "ungroup",
  content: '<path d="M32 256h192v192H32zm32-64h128V64H64zm224 224h128V288H288zM256 32v192h192V32z" />',
  viewBox: "0 0 512 512"
};
var reorderIcon = {
  name: "reorder",
  content: '<path d="M480 128v64H32v-64zM32 224v64h448v-64zm448 96H32v64h448z" />',
  viewBox: "0 0 512 512"
};
var moreVerticalIcon = {
  name: "more-vertical",
  content: '<path d="M240 128c26.4 0 48-21.6 48-48s-21.6-48-48-48-48 21.6-48 48 21.6 48 48 48m0 64c-26.4 0-48 21.6-48 48s21.6 48 48 48 48-21.6 48-48-21.6-48-48-48m0 160c-26.4 0-48 21.6-48 48s21.6 48 48 48 48-21.6 48-48-21.6-48-48-48" />',
  viewBox: "0 0 512 512"
};
var moreHorizontalIcon = {
  name: "more-horizontal",
  content: '<path d="M128 240c0-26.4-21.6-48-48-48s-48 21.6-48 48 21.6 48 48 48 48-21.6 48-48m64 0c0 26.4 21.6 48 48 48s48-21.6 48-48-21.6-48-48-48-48 21.6-48 48m160 0c0 26.4 21.6 48 48 48s48-21.6 48-48-21.6-48-48-48-48 21.6-48 48" />',
  viewBox: "0 0 512 512"
};
var dropletSliderIcon = {
  name: "droplet-slider",
  content: '<path d="M192 384v32c-53 0-96-43-96-96h32c0 35.3 28.7 64 64 64m160-72c0 92.8-71.6 168-160 168S32 404.8 32 312C32 181.3 192 32 192 32s160 149.3 160 280m-32 0c0-46.3-25.3-104.7-73-169-20-27-40.3-49.8-55-65.4-14.7 15.6-34.9 38.5-55 65.4-47.8 64.3-73 122.8-73 169 0 75 57.4 136 128 136s128-61 128-136m128-88h-32v256h32zm0-192h-32v64h32zm-64 96v64h96v-64z" />',
  viewBox: "0 0 512 512"
};
var clockIcon = {
  name: "clock",
  content: '<path d="M256 128h-32v160h160v-32H256zm0-96C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m0 416c-105.9 0-192-86.1-192-192S150.1 64 256 64s192 86.1 192 192-86.1 192-192 192" />',
  viewBox: "0 0 512 512"
};
var calendarIcon = {
  name: "calendar",
  content: '<path d="M416 416H288V288h128zm64-352v384c0 17.6-14.4 32-32 32H64c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h64V0h64v32h128V0h64v32h64c17.6 0 32 14.4 32 32m-32 128H64v255.9l.1.1 383.9-.1zm0-127.9q-.15-.15 0 0l-64-.1v32h-64V64H192v32h-64V64H64.1l-.1.1V160h384z" />',
  viewBox: "0 0 512 512"
};
var pencilIcon = {
  name: "pencil",
  content: '<path d="m334.9 86.6 45.3-45.3c12.4-12.4 32.8-12.4 45.3 0l45.3 45.3c12.4 12.4 12.4 32.8 0 45.3l-45.3 45.3zm-22.6 22.6L32 389.5V480h90.5l280.3-280.3zM99.9 412.1l-22.6-22.6 235-235 22.6 22.6z" />',
  viewBox: "0 0 512 512"
};
var trashIcon = {
  name: "trash",
  content: '<path d="M416 96h-96V64c0-17.6-14.4-32-32-32h-96c-17.6 0-32 14.4-32 32v32H64v64h32v288c0 17.6 14.4 32 32 32h224c17.6 0 32-14.4 32-32V160h32zM192 64h95.9l.1.1V96h-96c.1-.1.1-32.1 0-32m160 384H128.1l-.1-.1V160h32v256h32V160h32v256h32V160h32v256h32V160h32z" />',
  viewBox: "0 0 512 512"
};
var cancelIcon = {
  name: "cancel",
  content: '<path d="M256 32c-50.3 0-96.8 16.6-134.1 44.6-17.2 12.8-32.4 28.1-45.3 45.3C48.6 159.2 32 205.7 32 256c0 123.7 100.3 224 224 224 50.3 0 96.8-16.6 134.1-44.6 17.2-12.8 32.4-28.1 45.3-45.3 28-37.4 44.6-83.8 44.6-134.1 0-123.7-100.3-224-224-224m0 384c-88.2 0-160-71.8-160-160 0-32.6 9.8-62.9 26.6-88.2l221.6 221.6C318.9 406.2 288.6 416 256 416m133.4-71.8L167.8 122.6C193.1 105.8 223.4 96 256 96c88.2 0 160 71.8 160 160 0 32.6-9.8 62.9-26.6 88.2" />',
  viewBox: "0 0 512 512"
};
var checkIcon = {
  name: "check",
  content: '<path d="M434.7 82.7 480 128 192 416 32 256l45.3-45.3L192 325.5z" />',
  viewBox: "0 0 512 512"
};
var checkOutlineIcon = {
  name: "check-outline",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192m-32-154-83-83-45 45 128 128 176-176-45-45z" />',
  viewBox: "0 0 512 512"
};
var xIcon = {
  name: "x",
  content: '<path d="M416 141.3 301.3 256 416 370.7 370.7 416 256 301.3 141.3 416 96 370.7 210.7 256 96 141.3 141.3 96 256 210.7 370.7 96z" />',
  viewBox: "0 0 512 512"
};
var xCircleIcon = {
  name: "x-circle",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32m128 306.7L338.7 384 256 301.3 173.3 384 128 338.7l82.7-82.7-82.7-82.7 45.3-45.3 82.7 82.7 82.7-82.7 45.3 45.3-82.7 82.7z" />',
  viewBox: "0 0 512 512"
};
var plusIcon = {
  name: "plus",
  content: '<path d="M288 224V96h-64v128H96v64h128v128h64V288h128v-64z" />',
  viewBox: "0 0 512 512"
};
var minusIcon = {
  name: "minus",
  content: '<path d="M96 224v64h320v-64z" />',
  viewBox: "0 0 512 512"
};
var sortAscSmallIcon = {
  name: "sort-asc-small",
  content: '<path d="M256 192v224h-32V192h-96L240 64l112 128z" />',
  viewBox: "0 0 512 512"
};
var sortDescSmallIcon = {
  name: "sort-desc-small",
  content: '<path d="M352 288 240 416 128 288h96V64h32v224z" />',
  viewBox: "0 0 512 512"
};
var filterIcon = {
  name: "filter",
  content: '<path d="M64 64v32l160 160v224l64-64V256L448 96V64z" />',
  viewBox: "0 0 512 512"
};
var filterClearIcon = {
  name: "filter-clear",
  content: '<path d="m143.5 64 168.2 168.2L288 256v160l-64 64V256L64 96V64zm236.1 100.4L448 96V64H279.3l-64-64L192 22l298 298 22-23.3z" />',
  viewBox: "0 0 512 512"
};
var filterAddExpressionIcon = {
  name: "filter-add-expression",
  content: '<path d="M480 64v32H32V64zm-192 96h192v-32H288zm0 128h192v-64H288zm0 96h192v-32H288zm0 64h192v-32H288zM96 352h64v-64h64v-64h-64v-64H96v64H32v64h64z" />',
  viewBox: "0 0 512 512"
};
var filterAddGroupIcon = {
  name: "filter-add-group",
  content: '<path d="M352 352v32h-32v64h32v32h-64V352zm64 0v32h32v64h-32v32h64V352zM160 160H96v64H32v64h64v64h64v-64h64v-64h-64zm128 0h192v-32H288zM32 64v32h448V64zm256 224h192v-64H288z" />',
  viewBox: "0 0 512 512"
};
var hyperlinkOpenIcon = {
  name: "hyperlink-open",
  content: '<path d="M32 480h448V256h-32v192H64V64h192V32H32zM320 32l56.9 56.9.5.5L224 242.7l45.3 45.3 153.3-153.4L480 192V32z" />',
  viewBox: "0 0 512 512"
};
var windowIcon = {
  name: "window",
  content: '<path d="M96 96v320h320V96zm288 288H128V192h256z" />',
  viewBox: "0 0 512 512"
};
var windowRestoreIcon = {
  name: "window-restore",
  content: '<path d="M448 32v288h-32V128H160V32zM64 192h288v288H64zm32 256h224V288H96z" />',
  viewBox: "0 0 512 512"
};
var windowMinimizeIcon = {
  name: "window-minimize",
  content: '<path d="M416 288v64H96v-64z" />',
  viewBox: "0 0 512 512"
};
var searchIcon = {
  name: "search",
  content: '<path d="M365.3 320h-22.7l-26.7-26.7C338.5 265.7 352 230.4 352 192c0-88.4-71.6-160-160-160S32 103.6 32 192s71.6 160 160 160c38.4 0 73.7-13.5 101.3-36.1l26.7 26.7v22.7L434.7 480l45.3-45.3zM64 192c0-70.7 57.3-128 128-128s128 57.3 128 128-57.3 128-128 128S64 262.7 64 192" />',
  viewBox: "0 0 512 512"
};
var starOutlineIcon = {
  name: "star-outline",
  content: '<path d="M480 202.4 319.1 188 256 32l-63.1 156L32 202.4l122 111.7L117.2 480 256 391.5 394.8 480 358 314.1zM256 353.6l-90.8 57.9 24-108.5-82.1-75.2 108.1-9.7L256 117.3l40.8 100.8 108.1 9.7-82.1 75.2 24.1 108.5z" />',
  viewBox: "0 0 512 512"
};
var starIcon = {
  name: "star",
  content: '<path d="M256 391.5 117.2 480 154 314.1 32 202.4 192.9 188 256 32l63.1 156L480 202.4 358 314.1 394.8 480z" />',
  viewBox: "0 0 512 512"
};
var exclamationCircleIcon = {
  name: "exclamation-circle",
  content: '<path d="M224 128h64v160h-64zm0 256h64v-64h-64zm256-128c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224m-32 0c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192" />',
  viewBox: "0 0 512 512"
};
var paletteIcon = {
  name: "palette",
  content: '<path d="m206 256.6 160-160c-2.2-5.7-4.8-11.1-7.9-16.3-24.2-40.8-60.1-66-107.8-75.9-2.3-.5-4.7-1-7.1-1.4C192-5.8 143.1 4.8 96.5 34.6 49.3 64.7 19.2 107.2 6.1 162c-13 54.8-5.2 106.4 23.4 154.6 14.2 23.8 31.3 43.2 51.4 58.4 3.8-25.2 13.4-52 36.4-75 31.3-31.4 64-41.3 88.7-43.4M288 64c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32m-96-32c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32M64 256c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32m0-128c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32m438.7 12.9L480 118.3c-12.4-12.4-32.8-12.4-45.3 0L281.1 271.9c11.5 5.8 20.8 12.2 27.7 17.6 5.3 4.2 9.2 7.7 11.3 9.8l11.3 12.7c5.4 6.8 11.8 16.2 17.6 27.6l153.5-153.5c12.6-12.4 12.6-32.8.2-45.2M354.3 289.3c-4.8-5.8-8.6-9.9-10.6-11.9-2.3-2.3-6.3-6.1-12-10.7L457.4 141h.1l22.5 22.5zm-78.7 169c-23.8 23.7-48.4 33-70.7 37.7-49.6 10.4-96 16-96 16s34.7-17.3 33.9-77c-.4-32.7-3.7-66.4 19.7-89.8 56.6-56.7 113.3.2 113.3.2s56.7 56-.2 112.9" />',
  viewBox: "0 0 512 512"
};
var dropletSlashIcon = {
  name: "droplet-slash",
  content: '<path d="m317.9 431 23.2 23.2C316.5 470.6 287.3 480 256 480c-88.4 0-160-75.2-160-168 0-27.8 7.2-56.4 18.6-84.2l24.8 24.8C131.9 274 128 293.9 128 312c0 75 57.4 136 128 136 22.4 0 43.5-6.2 61.9-17M256 416v-32c-35.3 0-64-28.7-64-64h-32c0 53 43 96 96 96m224 41.4L457.4 480 32 54.6 54.6 32l108.7 108.7C207 77.7 256 32 256 32s160 149.3 160 280c0 24.1-4.9 47.1-13.6 67.8zM384 312c0-46.3-25.3-104.7-73-169-20-27-40.3-49.8-55-65.4-14.7 15.6-34.9 38.5-55 65.4-1.4 1.9-2.7 3.7-4.1 5.6-.8 1.1-1.5 2.1-2.3 3.2l-1.5 2.1-3 4.2c-.2.3-.4.5-.6.8-1 1.5-2.1 3-3.1 4.5-.1.1-.1.2-.2.3l191.2 191.2c.5-1.6 1-3.3 1.4-4.9 0-.2.1-.4.1-.5.4-1.5.8-2.9 1.1-4.4.1-.3.1-.6.2-.9.3-1.4.6-2.7.9-4.1.1-.4.2-.8.2-1.2.2-1.3.5-2.6.7-3.9.1-.5.2-1 .2-1.5.2-1.2.3-2.5.5-3.7.1-.5.1-1.1.2-1.6l.3-3.6c0-.6.1-1.1.1-1.7.1-1.3.2-2.5.2-3.8 0-.5.1-1 .1-1.6.4-1.9.4-3.7.4-5.5" />',
  viewBox: "0 0 512 512"
};
var insertTopIcon = {
  name: "insert-top",
  content: '<path d="M192 320h192v32H192zm0-128h288v-32H192zm192 64H192v32h192zM32 64v224l96-112z" />',
  viewBox: "0 0 512 512"
};
var insertMiddleIcon = {
  name: "insert-middle",
  content: '<path d="M192 128h192v32H192zm0 128h288v-32H192zm192 64H192v32h192zM32 128v224l96-112z" />',
  viewBox: "0 0 512 512"
};
var insertBottomIcon = {
  name: "insert-bottom",
  content: '<path d="M192 224h192v32H192zm0 128h288v-32H192zm192-192H192v32h192zM32 224v224l96-112z" />',
  viewBox: "0 0 512 512"
};
var clipboardIcon = {
  name: "clipboard",
  content: '<path d="M416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32m-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32m160 416H96V64h64v64h192V64h64z" />',
  viewBox: "0 0 512 512"
};
var tableUnmergeIcon = {
  name: "table-unmerge",
  content: '<path d="M32 32v416h416V32zm160 32h96v96h-96zm96 128v96h-96v-96zM64 64h96v96H64zm0 128h96v96H64zm96 224H64v-96h96zm128 0h-96v-96h96zm128 0h-96v-96h96zm0-128h-96v-96h96zm0-128h-96V64h96z" />',
  viewBox: "0 0 512 512"
};
var tableBodyIcon = {
  name: "table-body",
  content: '<path d="M32 32v416h416V32zm256 32v96h-96V64zm128 256v64L224 192h64zM64 64h96v96H64zm0 128h96v96H64zm0 224v-96h96v96zm128 0v-64l64 64zm128 0L192 288v-64l192 192zm96-160-64-64h64zm0-96h-96V64h96z" />',
  viewBox: "0 0 512 512"
};
var tableRowGroupsIcon = {
  name: "table-row-groups",
  content: '<path d="M32 32v416h416V32zm256 32v96h-96V64zm-64 128h64l96 96h-64zm32 96h-64l-96-96h64zM64 64h96v96H64zm0 160 64 64H64zm0 192v-96h96v96zm128 0v-96h96v96zm224 0h-96v-96h96zm0-160-64-64h64zm0-96h-96V64h96z" />',
  viewBox: "0 0 512 512"
};
var fileTxtIcon = {
  name: "file-txt",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zm-32-96v32H128v-32zM256 160v32H128v-32m256 64v32H128v-32zm-256 96v-32h224v32z" />',
  viewBox: "0 0 512 512"
};
var fileExcelIcon = {
  name: "file-excel",
  content: '<path d="m288 304 64 112h-48l-48-84.5-31.5 52.5H256v32h-96l64-112-64-112h48l48 84 48-84h48zm64-272H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z" />',
  viewBox: "0 0 512 512"
};
var filePdfIcon = {
  name: "file-pdf",
  content: '<path d="M240.9 160c-7.6 0-13.8 4-15.4 9.9-4.9 18.6.2 46.3 9.4 82.3l-2.4 5.9c-6.6 16.4-14.8 33-22.1 47.6l-1 1.9c-7.7 15.3-14.6 28.4-21 39.4l-6.5 3.5c-.5.3-11.6 6.3-14.3 7.9-22.2 13.6-36.9 28.9-39.4 41.2-.8 3.9-.2 8.9 3.7 11.2l6.3 3.2c2.7 1.4 5.6 2.1 8.6 2.1 15.8 0 34.2-20.2 59.5-65.3 29.2-9.7 62.5-17.8 91.6-22.3 22.2 12.8 49.5 21.7 66.8 21.7q4.65 0 7.8-.9c3.3-.9 6.1-2.8 7.8-5.4 3.4-5.2 4-12.2 3.1-19.5-.3-2.1-2-4.8-3.8-6.6-5.1-5.2-16.5-7.9-33.7-8.1-11.7-.1-25.8.9-40.6 3-6.6-3.9-13.5-8.2-18.8-13.3-14.4-13.8-26.5-32.9-34-53.9.5-2 .9-3.7 1.3-5.4 0 0 8.1-47.1 6-63.1-.3-2.2-.5-2.8-1.1-4.5l-.7-1.9c-2.2-5.2-6.5-10.7-13.3-10.4zm2.7 8.4c5.1 0 8 13.1 8.2 25.4.3 12.3-2.6 20.9-6 27.3-2.9-9.4-4.3-24.3-4.3-34-.1-.1-.3-18.7 2.1-18.7m.4 104.1c8.6 16 19.3 29.5 31.9 40.4 1.6 1.3 3.2 2.7 5 4.1-25.6 5.2-47.7 11.5-67.1 19.1 3.6-6.5 7.2-13.3 11-20.6 9.1-17.7 14.9-31.6 19.2-43m102.2 51.6c9.3 0 12 0 21.1 2.3 9.1 2.4 9.2 7.2 7.6 8.2s-6 1.6-8.9 1.6c-9.2 0-20.7-4.3-36.8-11.4 6.3-.4 11.9-.7 17-.7m-165.4 35.8c-17.7 28.8-29.5 40.3-37.3 43.8 2.9-8.1 14.3-24 31.2-38.1 1.1-.9 3.7-3.4 6.1-5.7M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96z" />',
  viewBox: "0 0 512 512"
};
var pageHeaderSectionIcon = {
  name: "page-header-section",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128zm64 416H96V64h224v96h96zm-32-160H128v-96h256zm0 96H128v32h256zm0-64H128v32h256z" />',
  viewBox: "0 0 512 512"
};

// node_modules/@progress/kendo-react-buttons/ListButton/SplitButton.mjs
var u2 = class u3 extends p3.Component {
  constructor(i10) {
    super(i10), this.state = {
      focused: false,
      focusedIndex: -1,
      opened: false
    }, this.wrapper = null, this.mainButton = null, this.list = null, this.skipFocus = false, this.buttonsData = [], this.showLicenseWatermark = false, this.onKeyDown = (t20) => {
      const { focusedIndex: e18 } = this.state;
      if (t20.altKey) {
        !this.opened && t20.keyCode === e2.down ? (t20.preventDefault(), this.setState({ focusedIndex: 0 }), this.setOpen(true, t20)) : this.opened && t20.keyCode === e2.up && (t20.preventDefault(), this.setState({ focusedIndex: -1 }), this.setOpen(false, t20));
        return;
      }
      let o14;
      if (t20.keyCode === e2.enter || t20.keyCode === e2.space) {
        if (t20.preventDefault(), this.dispatchClickEvent(t20, e18), e18 >= 0) {
          o14 = {
            focusedIndex: this.opened ? -1 : 0
          };
          const n14 = !this.opened;
          this.setOpen(n14, t20);
        }
      } else if (this.opened && t20.keyCode === e2.esc) {
        this.setState({ focusedIndex: -1 }), this.setOpen(false, t20);
        return;
      }
      if (this.opened) {
        const n14 = i2(e18, t20.keyCode, t20.altKey, this.buttonsData.length);
        n14 !== e18 && (o14 = o14 || {}, o14.focusedIndex = n14);
        const h4 = t20.keyCode === e2.up || t20.keyCode === e2.down || t20.keyCode === e2.left || t20.keyCode === e2.right;
        !t20.altKey && (h4 || t20.keyCode === e2.home || t20.keyCode === e2.end) && t20.preventDefault();
      }
      o14 && this.setState(o14);
    }, this.switchFocus = (t20) => {
      this.skipFocus = true, t20(), window.setTimeout(() => this.skipFocus = false, 0);
    }, this.onFocus = (t20) => {
      this.skipFocus || (v(this.props.onFocus, t20, this, void 0), this.setState({ focused: true }));
    }, this.setOpen = (t20, e18) => {
      this.opened !== t20 && (this.openedDuringOnChange = t20, this.setState({ opened: t20 }), e18 ? this.dispatchPopupEvent(e18, t20) : this.openedDuringOnChange = void 0);
    }, this.onItemClick = (t20, e18) => {
      this.opened && this.setState({ focusedIndex: 0 }), this.dispatchClickEvent(t20, e18), this.setOpen(false, t20);
    }, this.onBlur = (t20) => {
      this.skipFocus || (this.setState({
        focused: false,
        focusedIndex: -1
      }), v(this.props.onBlur, t20, this, void 0), setTimeout(() => {
        this.setOpen(false, t20);
      }, 0));
    }, this.onPopupClose = (t20) => {
      var o14;
      const e18 = o(document);
      this.element && this.element.removeAttribute("tabindex"), (e18 === this.list || (o14 = this.list) != null && o14.contains(e18)) && this.switchFocus(() => {
        this.element && this.element.focus({ preventScroll: true });
      }), this.props.popupSettings && this.props.popupSettings.onClose && this.props.popupSettings.onClose.call(void 0, t20);
    }, this.listRef = (t20) => {
      this.list = t20, t20 && this.state.focused && this.switchFocus(() => {
        t20.focus({ preventScroll: true }), this.element && (this.element.tabIndex = -1);
      });
    }, this.onSplitPartClick = (t20) => {
      if (this.buttonsData.length) {
        const e18 = !this.opened;
        this.setState({
          focusedIndex: e18 ? 0 : -1,
          focused: true
        }), this.setOpen(e18, t20);
      }
    }, this.onDownSplitPart = (t20) => {
      t20.preventDefault();
      const e18 = o(document);
      this.element && e18 !== this.element && e18 !== this.list && this.element.focus();
    }, this.onItemDown = (t20) => {
      o(document) === this.list && t20.preventDefault();
    }, this.dispatchPopupEvent = (t20, e18) => {
      v(e18 ? this.props.onOpen : this.props.onClose, t20, this, void 0), this.openedDuringOnChange = void 0;
    }, this.showLicenseWatermark = !h(e7, { component: "SplitButton" });
  }
  get guid() {
    return this.props.id ? this.props.id + "-accessibility-id" : this.props.id;
  }
  get opened() {
    return this.openedDuringOnChange !== void 0 ? this.openedDuringOnChange : this.props.opened === void 0 ? this.state.opened : this.props.opened;
  }
  /**
   * @hidden
   */
  render() {
    this.buttonsData = this.props.items || p3.Children.toArray(this.props.children).filter((r10) => r10 && r10.type === e6).map((r10) => r10.props);
    const i10 = this.isRtl(), t20 = i10 ? "rtl" : void 0, { id: e18, style: o14, tabIndex: n14, disabled: h4 } = this.props;
    return p3.createElement(p3.Fragment, null, p3.createElement(
      "div",
      {
        id: e18,
        style: o14,
        className: n2(
          "k-split-button",
          "k-button-group",
          {
            "k-focus": this.state.focused
          },
          `k-rounded-${a4.roundedMap[this.props.rounded || "medium"]}`,
          this.props.className
        ),
        onKeyDown: this.onKeyDown,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        dir: t20,
        ref: (r10) => {
          this.wrapper = r10;
        }
      },
      p3.createElement(
        M2,
        {
          ref: (r10) => {
            this.mainButton = r10 && r10.element;
          },
          type: "button",
          size: this.props.size,
          rounded: this.props.rounded,
          fillMode: this.props.fillMode,
          themeColor: this.props.themeColor,
          onClick: (r10) => this.onItemClick(r10, -1),
          disabled: h4 || void 0,
          tabIndex: n14,
          accessKey: this.props.accessKey,
          className: this.props.buttonClass,
          icon: this.props.icon,
          svgIcon: this.props.svgIcon,
          iconClass: this.props.iconClass,
          startIcon: this.props.startIcon,
          endIcon: this.props.endIcon,
          imageUrl: this.props.imageUrl,
          dir: t20,
          "aria-disabled": h4,
          "aria-haspopup": true,
          "aria-expanded": this.opened || void 0,
          "aria-label": this.props.ariaLabel,
          "aria-controls": this.opened ? this.guid : void 0,
          id: "button-" + this.guid,
          title: this.props.title
        },
        this.props.text
      ),
      p3.createElement(
        M2,
        {
          type: "button",
          size: this.props.size,
          rounded: this.props.rounded,
          fillMode: this.props.fillMode,
          themeColor: this.props.themeColor,
          icon: "caret-alt-down",
          svgIcon: caretAltDownIcon,
          className: "k-split-button-arrow",
          disabled: h4 || void 0,
          tabIndex: -1,
          onClick: this.onSplitPartClick,
          onMouseDown: this.onDownSplitPart,
          onPointerDown: this.onDownSplitPart,
          dir: t20,
          "aria-label": "menu toggling button"
        }
      ),
      this.renderPopup(i10)
    ), this.showLicenseWatermark && p3.createElement(l, null));
  }
  /**
   * @hidden
   */
  componentDidMount() {
    (this.props.dir === void 0 && this.isRtl() || this.opened) && this.forceUpdate();
  }
  /**
   * The DOM element of main button.
   */
  get element() {
    return this.mainButton;
  }
  dispatchClickEvent(i10, t20) {
    this.isItemDisabled(t20) || (t20 === -1 ? v(this.props.onButtonClick, i10, this, void 0) : v(this.props.onItemClick, i10, this, {
      item: this.buttonsData[t20],
      itemIndex: t20
    }));
  }
  renderPopup(i10) {
    const { popupSettings: t20 = {} } = this.props, { focusedIndex: e18 } = this.state;
    return p3.createElement(
      te,
      {
        anchor: this.wrapper,
        show: this.opened,
        animate: t20.animate,
        popupClass: n2("k-menu-popup", t20.popupClass),
        anchorAlign: t20.anchorAlign || n5(i10),
        popupAlign: t20.popupAlign || i4(i10),
        style: i10 ? { direction: "rtl" } : void 0,
        onClose: this.onPopupClose
      },
      p3.createElement(
        "ul",
        {
          role: "menu",
          id: this.guid,
          "aria-labelledby": "button-" + this.guid,
          tabIndex: -1,
          ref: this.listRef,
          "aria-activedescendant": e18 >= 0 ? `${this.guid}-${e18}` : void 0,
          className: n2("k-menu-group", {
            [`k-menu-group-${a4.sizeMap[this.props.size] || this.props.size}`]: this.props.size
          })
        },
        this.renderChildItems()
      )
    );
  }
  renderChildItems() {
    const { item: i10, itemRender: t20, textField: e18 } = this.props;
    return this.buttonsData.length > 0 ? this.buttonsData.map((o14, n14) => p3.createElement(
      k,
      {
        className: n2(
          "k-menu-item",
          { "k-first": n14 === 0 },
          { "k-last": n14 === this.buttonsData.length - 1 }
        ),
        dataItem: o14,
        textField: e18,
        focused: this.state.focusedIndex === n14,
        onClick: this.onItemClick,
        onDown: this.onItemDown,
        render: t20,
        item: i10,
        key: n14,
        index: n14,
        id: `${this.guid}-${n14}`
      }
    )) : null;
  }
  isItemDisabled(i10) {
    return this.buttonsData[i10] ? this.buttonsData[i10].disabled : this.props.disabled;
  }
  isRtl() {
    return this.props.dir !== void 0 ? this.props.dir === "rtl" : !!this.wrapper && getComputedStyle(this.wrapper).direction === "rtl";
  }
};
u2.propTypes = {
  accessKey: import_prop_types5.default.string,
  ariaLabel: import_prop_types5.default.string,
  title: import_prop_types5.default.string,
  onButtonClick: import_prop_types5.default.func,
  onFocus: import_prop_types5.default.func,
  onBlur: import_prop_types5.default.func,
  onItemClick: import_prop_types5.default.func,
  onOpen: import_prop_types5.default.func,
  onClose: import_prop_types5.default.func,
  text: import_prop_types5.default.string,
  items: import_prop_types5.default.arrayOf(import_prop_types5.default.any),
  textField: import_prop_types5.default.string,
  tabIndex: import_prop_types5.default.number,
  disabled: import_prop_types5.default.bool,
  icon: import_prop_types5.default.string,
  svgIcon: r,
  iconClass: import_prop_types5.default.string,
  imageUrl: import_prop_types5.default.string,
  popupSettings: import_prop_types5.default.object,
  itemRender: import_prop_types5.default.any,
  item: import_prop_types5.default.func,
  className: import_prop_types5.default.string,
  buttonClass: import_prop_types5.default.string,
  dir: import_prop_types5.default.string
}, u2.defaultProps = {
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
var g3 = u2;

// node_modules/@progress/kendo-react-buttons/ListButton/DropDownButton.mjs
var p4 = __toESM(require_react(), 1);
var import_prop_types7 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/ListButton/DropDownButtonItem.mjs
var i5 = __toESM(require_react(), 1);
var import_prop_types6 = __toESM(require_prop_types(), 1);
var r3 = class r4 extends i5.Component {
  /**
   * @hidden
   */
  render() {
    return null;
  }
};
r3.propTypes = {
  text: import_prop_types6.default.string,
  icon: import_prop_types6.default.string,
  iconClass: import_prop_types6.default.string,
  imageUrl: import_prop_types6.default.string,
  selected: import_prop_types6.default.bool,
  disabled: import_prop_types6.default.bool,
  render: import_prop_types6.default.any
};
var s7 = r3;

// node_modules/@progress/kendo-react-buttons/ListButton/DropDownButton.mjs
var G3 = 12e3;
var J = 2e3;
var m2 = class m3 extends p4.Component {
  constructor(i10) {
    super(i10), this.state = {
      opened: false,
      focused: false,
      focusedIndex: -1
    }, this.mainButton = null, this.list = null, this.skipFocus = false, this.showLicenseWatermark = false, this.buttonsData = [], this.onKeyDown = (t20) => {
      const { focusedIndex: e18 } = this.state;
      if (t20.altKey) {
        !this.opened && t20.keyCode === e2.down ? (t20.preventDefault(), this.setOpen(true, t20), this.setState({ focusedIndex: 0 })) : this.opened && t20.keyCode === e2.up && (t20.preventDefault(), this.setState({ focusedIndex: -1 }), this.setOpen(false, t20));
        return;
      }
      const o14 = { ...this.state };
      if (t20.keyCode === e2.enter || t20.keyCode === e2.space) {
        t20.preventDefault(), e18 >= 0 && this.dispatchClickEvent(t20, e18);
        const a12 = !this.opened;
        this.setState({
          focused: true,
          focusedIndex: a12 ? 0 : -1
        }), this.setOpen(a12, t20);
        return;
      }
      if (this.opened && t20.keyCode === e2.esc) {
        this.setState({ focusedIndex: -1 }), this.setOpen(false, t20);
        return;
      }
      if (this.opened) {
        const a12 = i2(e18, t20.keyCode, t20.altKey, this.buttonsData.length);
        o14.focusedIndex = a12;
        const h4 = t20.keyCode === e2.up || t20.keyCode === e2.down || t20.keyCode === e2.left || t20.keyCode === e2.right;
        !t20.altKey && (h4 || t20.keyCode === e2.home || t20.keyCode === e2.end) && t20.preventDefault();
      }
      this.setState(o14);
    }, this.switchFocus = (t20) => {
      this.skipFocus = true, t20(), window.setTimeout(() => this.skipFocus = false, 0);
    }, this.handleFocus = (t20) => {
      this.skipFocus || (this.setState({ focused: true, focusedIndex: this.opened ? 0 : -1 }), v(this.props.onFocus, t20, this, void 0));
    }, this.handleButtonBlur = (t20) => {
      this.opened || (this.setState({ focused: false }), v(this.props.onBlur, t20, this, void 0));
    }, this.handleMenuBlur = (t20) => {
      this.skipFocus || (this.setState({ focused: false, focusedIndex: -1 }), v(this.props.onBlur, t20, this, void 0), setTimeout(() => {
        this.setOpen(false, t20);
      }, 0));
    }, this.setOpen = (t20, e18) => {
      this.opened !== t20 && (this.openedDuringOnChange = t20, this.setState({ opened: t20 }), e18 ? this.dispatchPopupEvent(e18, t20) : this.openedDuringOnChange = void 0);
    }, this.onItemClick = (t20, e18) => {
      this.setState({ focusedIndex: -1 }), this.dispatchClickEvent(t20, e18), this.setOpen(false, t20);
    }, this.onItemDown = (t20) => {
      o(document) === this.list && t20.preventDefault();
    }, this.mouseDown = (t20) => {
      t20.preventDefault();
      const e18 = o(document);
      this.element && e18 !== this.element && e18 !== this.list && this.element.focus();
    }, this.onPopupClose = (t20) => {
      var o14;
      const e18 = o(document);
      this.element && this.element.removeAttribute("tabindex"), (e18 === this.list || (o14 = this.list) != null && o14.contains(e18)) && this.switchFocus(() => {
        this.element && this.element.focus({ preventScroll: true });
      }), this.props.popupSettings && this.props.popupSettings.onClose && this.props.popupSettings.onClose.call(void 0, t20);
    }, this.listRef = (t20) => {
      this.list = t20, t20 && this.state.focused && this.switchFocus(() => {
        t20.focus({ preventScroll: true }), this.element && (this.element.tabIndex = -1);
      });
    }, this.onClickMainButton = (t20) => {
      if (!this.buttonsData.length)
        return;
      const e18 = !this.opened;
      this.setState({
        focused: true,
        focusedIndex: e18 ? 0 : -1
      }), this.setOpen(e18, t20);
    }, this.dispatchPopupEvent = (t20, e18) => {
      v(e18 ? this.props.onOpen : this.props.onClose, t20, this, void 0), this.openedDuringOnChange = void 0;
    }, this.showLicenseWatermark = !h(e7, { component: "DropDownButton" });
  }
  get guid() {
    return this.props.id + "-accessibility-id";
  }
  get opened() {
    return this.openedDuringOnChange !== void 0 ? this.openedDuringOnChange : this.props.opened === void 0 ? this.state.opened : this.props.opened;
  }
  /**
   * @hidden
   */
  render() {
    const i10 = this.isRtl(), t20 = this.props.unstyled && this.props.unstyled.uDropDownButton, e18 = i10 ? "rtl" : void 0, {
      id: o14,
      style: a12,
      tabIndex: h4,
      disabled: n14,
      size: C,
      rounded: D,
      fillMode: y3,
      themeColor: I3,
      ariaLabel: k2,
      title: b3,
      accessKey: w,
      icon: B,
      svgIcon: O,
      iconClass: x4,
      buttonClass: E2,
      className: S,
      imageUrl: P2,
      startIcon: F2,
      endIcon: v4
    } = this.props;
    return this.buttonsData = this.props.items || p4.Children.toArray(this.props.children).filter((d2) => d2 && d2.type === s7).map((d2) => d2.props), p4.createElement(p4.Fragment, null, p4.createElement(
      M2,
      {
        id: o14,
        size: C,
        style: a12,
        rounded: D,
        fillMode: y3,
        themeColor: I3,
        onClick: this.onClickMainButton,
        onMouseDown: this.mouseDown,
        onKeyDown: this.onKeyDown,
        onFocus: this.handleFocus,
        onBlur: this.handleButtonBlur,
        "aria-disabled": n14 ? "true" : void 0,
        tabIndex: h4,
        accessKey: w,
        icon: B,
        svgIcon: O,
        iconClass: x4,
        className: n2(
          E2,
          S,
          F.wrapper({
            c: t20,
            focused: this.state.focused,
            disabled: n14
          })
        ),
        imageUrl: P2,
        dir: e18,
        ref: (d2) => {
          this.mainButton = d2 && d2.element;
        },
        type: "button",
        "aria-expanded": this.opened ? "true" : "false",
        "aria-label": k2,
        "aria-controls": this.opened ? this.guid : void 0,
        title: b3,
        startIcon: F2,
        endIcon: v4
      },
      this.props.text
    ), this.showLicenseWatermark && p4.createElement(l, null), this.renderPopup(i10));
  }
  /**
   * @hidden
   */
  componentDidMount() {
    (this.props.dir === void 0 && this.isRtl() || this.opened) && this.forceUpdate();
  }
  /**
   * The DOM element of main button.
   */
  get element() {
    return this.mainButton;
  }
  dispatchClickEvent(i10, t20) {
    this.isItemDisabled(t20) || v(this.props.onItemClick, i10, this, {
      item: this.buttonsData[t20],
      itemIndex: t20
    });
  }
  renderPopup(i10) {
    const { popupSettings: t20 = {}, _zIndex: e18, unstyled: o14 } = this.props, a12 = e18 ? e18 + J : G3, h4 = o14 && o14.uDropDownButton, { focusedIndex: n14 } = this.state;
    return p4.createElement(t.Provider, { value: a12 }, p4.createElement(
      te,
      {
        anchor: this.mainButton,
        show: this.opened,
        animate: t20.animate,
        popupClass: n2(F.popup({ c: h4 }), t20.popupClass),
        anchorAlign: t20.anchorAlign || n5(i10),
        popupAlign: t20.popupAlign || i4(i10),
        style: i10 ? { direction: "rtl" } : void 0,
        onClose: this.onPopupClose
      },
      p4.createElement(
        "ul",
        {
          role: "list",
          id: this.guid,
          tabIndex: -1,
          "aria-activedescendant": n14 >= 0 ? `${this.guid}-${n14}` : void 0,
          ref: this.listRef,
          onKeyDown: this.onKeyDown,
          onBlur: this.handleMenuBlur,
          className: n2(
            F.ul({
              c: h4,
              size: this.props.size
            })
          )
        },
        this.renderChildItems()
      )
    ));
  }
  renderChildItems() {
    const { item: i10, itemRender: t20, textField: e18, unstyled: o14 } = this.props, a12 = o14 && o14.uDropDownButton;
    return this.buttonsData.length > 0 ? this.buttonsData.map((h4, n14) => p4.createElement(
      k,
      {
        className: n2(
          F.item({
            c: a12
          }),
          h4.className,
          { "k-first": n14 === 0 },
          { "k-last": n14 === this.buttonsData.length - 1 }
        ),
        dataItem: h4,
        textField: e18,
        focused: this.state.focusedIndex === n14,
        onClick: this.onItemClick,
        onDown: this.onItemDown,
        render: t20,
        item: i10,
        index: n14,
        key: n14,
        id: `${this.guid}-${n14}`
      }
    )) : null;
  }
  isItemDisabled(i10) {
    return this.buttonsData[i10] ? this.buttonsData[i10].disabled : this.props.disabled;
  }
  isRtl() {
    return this.props.dir !== void 0 ? this.props.dir === "rtl" : !!this.mainButton && getComputedStyle(this.mainButton).direction === "rtl";
  }
};
m2.propTypes = {
  accessKey: import_prop_types7.default.string,
  ariaLabel: import_prop_types7.default.string,
  title: import_prop_types7.default.string,
  onFocus: import_prop_types7.default.func,
  onBlur: import_prop_types7.default.func,
  onItemClick: import_prop_types7.default.func,
  onOpen: import_prop_types7.default.func,
  onClose: import_prop_types7.default.func,
  items: import_prop_types7.default.arrayOf(import_prop_types7.default.any),
  textField: import_prop_types7.default.string,
  tabIndex: import_prop_types7.default.number,
  disabled: import_prop_types7.default.bool,
  icon: import_prop_types7.default.string,
  svgIcon: r,
  iconClass: import_prop_types7.default.string,
  imageUrl: import_prop_types7.default.string,
  popupSettings: import_prop_types7.default.object,
  itemRender: import_prop_types7.default.func,
  item: import_prop_types7.default.func,
  className: import_prop_types7.default.string,
  buttonClass: import_prop_types7.default.string,
  dir: import_prop_types7.default.string
}, m2.defaultProps = {
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
var g4 = m2;
var Q = a();
var V = a2(
  x(
    Q,
    a3(m(g4))
  )
);
V.displayName = "KendoReactDropDownButton";

// node_modules/@progress/kendo-react-buttons/toolbar/Toolbar.mjs
var t14 = __toESM(require_react(), 1);
var import_prop_types10 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/util.mjs
var t5 = ":not(.k-dropdownlist button):not(.k-colorpicker button):not(.k-split-button .k-split-button-arrow)";
var o2 = [
  "button" + t5,
  ".k-button-group > button" + t5,
  ".k-colorpicker",
  ".k-dropdownlist"
];

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollable.mjs
var t13 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarSeparator.mjs
var r5 = __toESM(require_react(), 1);
var t6 = (a12) => r5.createElement("div", { ref: a12._ref, className: n2("k-toolbar-separator k-separator", a12.className) });

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollButton.mjs
var a6 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-intl/globalization/GlobalizationContext.mjs
var o4 = __toESM(require_react(), 1);

// node_modules/@progress/kendo-intl/dist/es/cldr/default-data.js
var defaultData = {
  en: {
    name: "en",
    identity: {
      version: {
        _unicodeVersion: "14.0.0",
        _cldrVersion: "41"
      },
      language: "en"
    },
    territory: "US",
    numbers: {
      symbols: {
        decimal: ".",
        group: ",",
        list: ";",
        percentSign: "%",
        plusSign: "+",
        minusSign: "-",
        exponential: "E",
        superscriptingExponent: "×",
        perMille: "‰",
        infinity: "∞",
        nan: "NaN",
        timeSeparator: ":",
        approximatelySign: "~"
      },
      decimal: {
        patterns: [
          "n"
        ],
        groupSize: [
          3
        ]
      },
      scientific: {
        patterns: [
          "nEn"
        ],
        groupSize: []
      },
      percent: {
        patterns: [
          "n%"
        ],
        groupSize: [
          3
        ]
      },
      currency: {
        patterns: [
          "$n"
        ],
        groupSize: [
          3
        ],
        "unitPattern-count-one": "n $",
        "unitPattern-count-other": "n $"
      },
      currencies: {
        BGN: {
          displayName: "Bulgarian Lev",
          "displayName-count-one": "Bulgarian lev",
          "displayName-count-other": "Bulgarian leva",
          symbol: "BGN"
        },
        EUR: {
          displayName: "Euro",
          "displayName-count-one": "euro",
          "displayName-count-other": "euros",
          symbol: "€",
          "symbol-alt-narrow": "€"
        },
        USD: {
          displayName: "US Dollar",
          "displayName-count-one": "US dollar",
          "displayName-count-other": "US dollars",
          symbol: "$",
          "symbol-alt-narrow": "$"
        }
      },
      localeCurrency: "USD",
      accounting: {
        patterns: [
          "$n",
          "($n)"
        ],
        groupSize: [
          3
        ]
      }
    },
    calendar: {
      gmtFormat: "GMT{0}",
      gmtZeroFormat: "GMT",
      patterns: {
        d: "M/d/y",
        D: "EEEE, MMMM d, y",
        m: "MMM d",
        M: "MMMM d",
        y: "MMM y",
        Y: "MMMM y",
        F: "EEEE, MMMM d, y h:mm:ss a",
        g: "M/d/y h:mm a",
        G: "M/d/y h:mm:ss a",
        t: "h:mm a",
        T: "h:mm:ss a",
        s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
        u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
      },
      dateTimeFormats: {
        full: "{1} 'at' {0}",
        long: "{1} 'at' {0}",
        medium: "{1}, {0}",
        short: "{1}, {0}",
        availableFormats: {
          Bh: "h B",
          Bhm: "h:mm B",
          Bhms: "h:mm:ss B",
          d: "d",
          E: "ccc",
          EBhm: "E h:mm B",
          EBhms: "E h:mm:ss B",
          Ed: "d E",
          Ehm: "E h:mm a",
          EHm: "E HH:mm",
          Ehms: "E h:mm:ss a",
          EHms: "E HH:mm:ss",
          Gy: "y G",
          GyMd: "M/d/y GGGGG",
          GyMMM: "MMM y G",
          GyMMMd: "MMM d, y G",
          GyMMMEd: "E, MMM d, y G",
          h: "h a",
          H: "HH",
          hm: "h:mm a",
          Hm: "HH:mm",
          hms: "h:mm:ss a",
          Hms: "HH:mm:ss",
          hmsv: "h:mm:ss a v",
          Hmsv: "HH:mm:ss v",
          hmv: "h:mm a v",
          Hmv: "HH:mm v",
          M: "L",
          Md: "M/d",
          MEd: "E, M/d",
          MMM: "LLL",
          MMMd: "MMM d",
          MMMEd: "E, MMM d",
          MMMMd: "MMMM d",
          "MMMMW-count-one": "'week' W 'of' MMMM",
          "MMMMW-count-other": "'week' W 'of' MMMM",
          ms: "mm:ss",
          y: "y",
          yM: "M/y",
          yMd: "M/d/y",
          yMEd: "E, M/d/y",
          yMMM: "MMM y",
          yMMMd: "MMM d, y",
          yMMMEd: "E, MMM d, y",
          yMMMM: "MMMM y",
          yQQQ: "QQQ y",
          yQQQQ: "QQQQ y",
          "yw-count-one": "'week' w 'of' Y",
          "yw-count-other": "'week' w 'of' Y"
        }
      },
      timeFormats: {
        full: "h:mm:ss a zzzz",
        long: "h:mm:ss a z",
        medium: "h:mm:ss a",
        short: "h:mm a"
      },
      dateFormats: {
        full: "EEEE, MMMM d, y",
        long: "MMMM d, y",
        medium: "MMM d, y",
        short: "M/d/yy"
      },
      days: {
        format: {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        }
      },
      months: {
        format: {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        }
      },
      quarters: {
        format: {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        }
      },
      dayPeriods: {
        format: {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          narrow: {
            midnight: "mi",
            am: "a",
            "am-alt-variant": "am",
            noon: "n",
            pm: "p",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          }
        },
        "stand-alone": {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          narrow: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          }
        }
      },
      eras: {
        format: {
          wide: {
            "0": "Before Christ",
            "1": "Anno Domini",
            "0-alt-variant": "Before Common Era",
            "1-alt-variant": "Common Era"
          },
          abbreviated: {
            "0": "BC",
            "1": "AD",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          },
          narrow: {
            "0": "B",
            "1": "A",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          }
        }
      },
      dateFields: {
        era: {
          wide: "era",
          short: "era",
          narrow: "era"
        },
        year: {
          wide: "year",
          short: "yr.",
          narrow: "yr."
        },
        quarter: {
          wide: "quarter",
          short: "qtr.",
          narrow: "qtr."
        },
        month: {
          wide: "month",
          short: "mo.",
          narrow: "mo."
        },
        week: {
          wide: "week",
          short: "wk.",
          narrow: "wk."
        },
        weekOfMonth: {
          wide: "week of month",
          short: "wk. of mo.",
          narrow: "wk. of mo."
        },
        day: {
          wide: "day",
          short: "day",
          narrow: "day"
        },
        dayOfYear: {
          wide: "day of year",
          short: "day of yr.",
          narrow: "day of yr."
        },
        weekday: {
          wide: "day of the week",
          short: "day of wk.",
          narrow: "day of wk."
        },
        weekdayOfMonth: {
          wide: "weekday of the month",
          short: "wkday. of mo.",
          narrow: "wkday. of mo."
        },
        dayperiod: {
          short: "AM/PM",
          wide: "AM/PM",
          narrow: "AM/PM"
        },
        hour: {
          wide: "hour",
          short: "hr.",
          narrow: "hr."
        },
        minute: {
          wide: "minute",
          short: "min.",
          narrow: "min."
        },
        second: {
          wide: "second",
          short: "sec.",
          narrow: "sec."
        },
        zone: {
          wide: "time zone",
          short: "zone",
          narrow: "zone"
        },
        millisecond: {
          narrow: "ms",
          short: "ms",
          wide: "millisecond"
        }
      }
    }
  },
  supplemental: {
    likelySubtags: {
      en: "en-Latn-US"
    },
    currencyData: {
      region: {
        US: [
          {
            USD: {
              _from: "1792-01-01"
            }
          }
        ]
      }
    },
    weekData: {
      firstDay: {
        US: "sun"
      },
      weekendStart: {
        "001": "sat"
      },
      weekendEnd: {
        "001": "sun"
      }
    }
  }
};
var default_data_default = defaultData;

// node_modules/@progress/kendo-intl/dist/es/common/is-string.js
function isString(value) {
  return typeof value === "string";
}

// node_modules/@progress/kendo-intl/dist/es/error-details.js
var error_details_default = {
  "NoLocale": "Missing locale info for '{0}'",
  "NoCurrency": "Cannot determine currency information. Please load the locale currencies data.",
  "NoSupplementalCurrency": "Cannot determine currency. Please load the supplemental currencyData.",
  "NoCurrencyRegion": "No currency data for region '{0}'",
  "NoCurrencyDisplay": "Cannot determine currency display information. Please load the locale currencies data. The default culture does not include the all currencies data.",
  "NoGMTInfo": "Cannot determine locale GMT format. Please load the locale timeZoneNames data.",
  "NoWeekData": "Cannot determine locale first day of week. Please load the supplemental weekData.",
  "NoFirstDay": "Cannot determine locale first day of week. Please load the supplemental weekData. The default culture includes only the 'en-US' first day info.",
  "NoValidCurrency": "Cannot determine a default currency for the {0} locale. Please specify explicitly the currency with the format options.",
  "NoDateFieldNames": "Cannot determine the locale date field names. Please load the locale dateFields data."
};

// node_modules/@progress/kendo-intl/dist/es/errors.js
var formatRegExp = /\{(\d+)}?\}/g;
var IntlError = function IntlError2(ref) {
  var name = ref.name;
  var message = ref.message;
  if (!name || !message) {
    throw new Error("{ name: string, message: string } object is required!");
  }
  this.name = name;
  this.message = message;
};
IntlError.prototype.formatMessage = function formatMessage() {
  var values = [], len = arguments.length;
  while (len--) values[len] = arguments[len];
  var flattenValues = flatten(values);
  var formattedMessage = this.message.replace(formatRegExp, function(match, index) {
    return flattenValues[parseInt(index, 10)];
  });
  return this.name + ": " + formattedMessage;
};
IntlError.prototype.error = function error() {
  var values = [], len = arguments.length;
  while (len--) values[len] = arguments[len];
  return new Error(this.formatMessage(values));
};
var flatten = function(arr) {
  return arr.reduce(function(a12, b3) {
    return a12.concat(b3);
  }, []);
};
var toIntlErrors = function(errors2) {
  var predicate = function(prev, name) {
    prev[name] = new IntlError({ name, message: errors2[name] });
    return prev;
  };
  return Object.keys(errors2).reduce(predicate, {});
};
var errors = toIntlErrors(error_details_default);

// node_modules/@progress/kendo-intl/dist/es/cldr/info.js
function availableLocaleInfo(fullName, suffixes) {
  var parts = fullName.split("-");
  var language = parts[0];
  var script = parts[1];
  var territory = parts[2];
  return cldr[fullName] || suffixes.indexOf(territory) !== -1 && cldr[language + "-" + territory] || suffixes.indexOf(script) !== -1 && cldr[language + "-" + script] || cldr[language];
}
function localeFullName(language, suffixes) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  for (var idx = 0; idx < suffixes.length; idx++) {
    var name = likelySubtags[language + "-" + suffixes[idx]];
    if (name) {
      return name;
    }
  }
  if (likelySubtags[language]) {
    return likelySubtags[language];
  }
}
var cldr = default_data_default;
function getLocaleInfo(locale) {
  var info;
  if (isString(locale)) {
    info = localeInfo(locale);
  } else {
    info = locale;
  }
  return info;
}
function localeInfo(locale) {
  if (cldr[locale]) {
    return cldr[locale];
  }
  var likelySubtags = cldr.supplemental.likelySubtags;
  if (likelySubtags) {
    var parts = locale.split("-");
    var language = parts[0];
    var suffixes = parts.slice(1);
    var fullName = localeFullName(language, suffixes);
    var info = fullName ? availableLocaleInfo(fullName, suffixes) : null;
    if (info) {
      return info;
    }
  }
  throw errors.NoLocale.error(locale);
}

// node_modules/@progress/kendo-intl/dist/es/common/constants.js
var DECIMAL = "decimal";
var CURRENCY = "currency";
var ACCOUNTING = "accounting";
var PERCENT = "percent";
var SCIENTIFIC = "scientific";
var CURRENCY_PLACEHOLDER = "$";
var PERCENT_PLACEHOLDER = "%";
var NUMBER_PLACEHOLDER = "n";
var LIST_SEPARATOR = ";";
var GROUP_SEPARATOR = ",";
var POINT = ".";
var EMPTY = "";
var DEFAULT_LOCALE = "en";

// node_modules/@progress/kendo-intl/dist/es/cldr/load-numbers.js
var LATIN_NUMBER_FORMATS = "Formats-numberSystem-latn";
var LATIN_NUMBER_SYMBOLS = "symbols-numberSystem-latn";
var patternRegExp = /([#,0.]+)/g;
var cldrCurrencyRegExp = /¤/g;
function getPatterns(pattern) {
  patternRegExp.lastIndex = 0;
  return pattern.replace(cldrCurrencyRegExp, CURRENCY_PLACEHOLDER).replace(patternRegExp, NUMBER_PLACEHOLDER).split(LIST_SEPARATOR);
}
function getGroupSize(pattern) {
  patternRegExp.lastIndex = 0;
  var numberPatterns = patternRegExp.exec(pattern.split(LIST_SEPARATOR)[0])[0].split(POINT);
  var integer = numberPatterns[0];
  var groupSize = integer.split(GROUP_SEPARATOR).slice(1).map(function(group) {
    return group.length;
  }).reverse();
  return groupSize;
}
function loadCurrencyUnitPatterns(currencyInfo, currencyFormats) {
  for (var field in currencyFormats) {
    if (field.startsWith("unitPattern")) {
      currencyInfo[field] = currencyFormats[field].replace("{0}", NUMBER_PLACEHOLDER).replace("{1}", CURRENCY_PLACEHOLDER);
    }
  }
}
function loadNumbersInfo(locale, info) {
  var localeInfo2 = cldr[locale];
  var numbers = localeInfo2.numbers = localeInfo2.numbers || {};
  numbers.symbols = numbers.symbols || {};
  for (var field in info) {
    if (field === LATIN_NUMBER_SYMBOLS) {
      Object.assign(numbers.symbols, info[field]);
    } else if (field.includes(LATIN_NUMBER_FORMATS)) {
      var style = field.substr(0, field.indexOf(LATIN_NUMBER_FORMATS));
      var pattern = info[field].standard;
      numbers[style] = {
        patterns: getPatterns(pattern)
      };
      if (style === CURRENCY) {
        numbers[style].groupSize = getGroupSize((info[DECIMAL + LATIN_NUMBER_FORMATS] || info[field]).standard);
        loadCurrencyUnitPatterns(numbers[style], info[field]);
        numbers[ACCOUNTING] = {
          patterns: getPatterns(info[field][ACCOUNTING]),
          groupSize: numbers[style].groupSize
        };
      } else {
        numbers[style].groupSize = getGroupSize(pattern);
      }
    } else if (field === "currencies") {
      numbers.currencies = info[field];
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load-dates.js
var predefinedDatePatterns = {
  s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
  u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
};
var YEAR_REGEX = /y+/g;
var SHORT_DATE = [["dateFormats", "short"]];
var datePatterns = {
  D: [["dateFormats", "full"]],
  m: [["dateTimeFormats", "availableFormats", "MMMd"]],
  M: [["dateTimeFormats", "availableFormats", "MMMMd"]],
  y: [["dateTimeFormats", "availableFormats", "yMMM"]],
  Y: [["dateTimeFormats", "availableFormats", "yMMMM"]],
  F: [["dateFormats", "full"], ["timeFormats", "medium"]],
  g: [["dateTimeFormats", "availableFormats", "yMd"], ["timeFormats", "short"]],
  G: [["dateTimeFormats", "availableFormats", "yMd"], ["timeFormats", "medium"]],
  t: [["timeFormats", "short"]],
  T: [["timeFormats", "medium"]]
};
function toArray(obj) {
  var result = [];
  var names = Object.getOwnPropertyNames(obj);
  for (var idx = 0; idx < names.length; idx++) {
    var value = obj[names[idx]];
    result.push(value);
  }
  return result;
}
function getCalendarNames(info, isObj) {
  var result = {};
  for (var formatType in info) {
    var names = result[formatType] = {};
    for (var format2 in info[formatType]) {
      var formats = info[formatType][format2];
      names[format2] = isObj ? formats : toArray(formats);
    }
  }
  return result;
}
function getEraNames(eras) {
  var result = {};
  var format2 = result.format = {};
  var eraNameMap = {
    eraAbbr: "abbreviated",
    eraNames: "wide",
    eraNarrow: "narrow"
  };
  for (var eraFormatName in eras) {
    var formatName = eraNameMap[eraFormatName];
    format2[formatName] = eras[eraFormatName];
  }
  return result;
}
function loadCalendarNames(locale, calendar) {
  var localeCalendar = cldr[locale].calendar;
  localeCalendar.days = getCalendarNames(calendar.days);
  localeCalendar.months = getCalendarNames(calendar.months);
  localeCalendar.quarters = getCalendarNames(calendar.quarters);
  localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);
  localeCalendar.eras = getEraNames(calendar.eras);
}
function loadCalendarDateFields(locale, fields) {
  var localeCalendar = cldr[locale].calendar;
  var dateFields = {};
  for (var field in fields) {
    var ref = field.split("-");
    var fieldName = ref[0];
    var formatType = ref[1];
    if (formatType === void 0) formatType = "wide";
    var fieldInfo = dateFields[fieldName] || {};
    var displayName = fields[field].displayName;
    if (!displayName) {
      continue;
    }
    fieldInfo[formatType] = displayName;
    dateFields[fieldName] = fieldInfo;
  }
  localeCalendar.dateFields = dateFields;
}
function getPredefinedFormat(paths, calendar) {
  var result = [];
  for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {
    var fields = paths[pathIdx];
    var pattern = calendar;
    for (var idx = 0; idx < fields.length; idx++) {
      pattern = pattern[fields[idx]];
    }
    result.push(pattern);
  }
  return result.join(" ");
}
function loadCalendarPatterns(locale, calendar) {
  var cldrCalendar = cldr[locale].calendar;
  var patterns = cldrCalendar.patterns = {};
  patterns.d = getPredefinedFormat(SHORT_DATE, calendar).replace(YEAR_REGEX, "y");
  for (var pattern in datePatterns) {
    patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);
  }
  for (var pattern$1 in predefinedDatePatterns) {
    patterns[pattern$1] = predefinedDatePatterns[pattern$1];
  }
  var dateTimeFormats = calendar.dateTimeFormats;
  cldrCalendar.dateTimeFormats = {
    full: dateTimeFormats.full,
    long: dateTimeFormats.long,
    medium: dateTimeFormats.medium,
    short: dateTimeFormats.short,
    availableFormats: dateTimeFormats.availableFormats
  };
  cldrCalendar.timeFormats = calendar.timeFormats;
  cldrCalendar.dateFormats = calendar.dateFormats;
}
function loadCalendarInfo(locale, info) {
  var calendar = cldr[locale].calendar = cldr[locale].calendar || {};
  for (var field in info) {
    if (field === "timeZoneNames") {
      calendar.gmtFormat = info[field].gmtFormat;
      calendar.gmtZeroFormat = info[field].gmtZeroFormat;
    } else if (field === "calendars" && info[field].gregorian) {
      loadCalendarPatterns(locale, info[field].gregorian);
      loadCalendarNames(locale, info[field].gregorian);
    } else if (field === "fields") {
      loadCalendarDateFields(locale, info.fields);
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/territory.js
function territoryFromName(name, identity) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  var parts = name.split("-");
  if (likelySubtags) {
    var likelyName = likelySubtags[name] || likelySubtags[parts[0]];
    if (likelyName) {
      parts = likelyName.split("-");
    }
  }
  if (identity) {
    for (var idx = parts.length - 1; idx >= 1; idx--) {
      var part = parts[idx];
      if (part === identity.variant || part === identity.script) {
        parts.splice(idx, 1);
      }
    }
  }
  var length = parts.length;
  if (length > 1) {
    var territory = parts[length - 1];
    return territory.toUpperCase();
  }
}
function localeTerritory(info) {
  if (info.territory) {
    return info.territory;
  }
  var name = info.name;
  var identity = info.identity;
  var territory;
  if (identity && identity.territory) {
    territory = identity.territory;
  } else {
    territory = territoryFromName(name, identity);
  }
  info.territory = territory;
  return territory;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load-units.js
var MILLISECOND = "duration-millisecond";
var UNIT_PATTERN_ONE = "unitPattern-count-one";
var UNIT_PATTERN_OTHER = "unitPattern-count-other";
var placeholderPattern = /\{0\}\s?/;
function extractUnit(unit) {
  var value = unit[UNIT_PATTERN_ONE] || unit[UNIT_PATTERN_OTHER];
  return value.replace(placeholderPattern, "");
}
function loadUnits(localeInfo2, units) {
  localeInfo2.calendar.dateFields.millisecond = {
    narrow: extractUnit(units.narrow[MILLISECOND]),
    short: extractUnit(units.short[MILLISECOND]),
    wide: extractUnit(units.long[MILLISECOND])
  };
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load.js
function loadLocale(locale, info) {
  for (var field in info) {
    if (field === "numbers") {
      loadNumbersInfo(locale, info[field]);
    } else if (field === "dates") {
      loadCalendarInfo(locale, info[field]);
    }
  }
}
function load() {
  var arguments$1 = arguments;
  var length = arguments.length;
  for (var idx = 0; idx < length; idx++) {
    var entry = arguments$1[idx];
    if (entry.main) {
      var locale = Object.keys(entry.main)[0];
      var info = entry.main[locale];
      var localeInfo2 = cldr[locale] = cldr[locale] || {};
      if (info.units) {
        loadUnits(localeInfo2, info.units);
      } else {
        localeInfo2.name = localeInfo2.name || locale;
        localeInfo2.identity = localeInfo2.identity || info.identity;
        localeTerritory(localeInfo2);
        loadLocale(locale, info);
      }
    } else if (entry.supplemental) {
      if (entry.supplemental.weekData) {
        cldr.supplemental.weekData = {
          firstDay: entry.supplemental.weekData.firstDay,
          weekendStart: entry.supplemental.weekData.weekendStart,
          weekendEnd: entry.supplemental.weekData.weekendEnd
        };
      } else if (entry.supplemental.likelySubtags) {
        cldr.supplemental.likelySubtags = Object.assign(cldr.supplemental.likelySubtags, entry.supplemental.likelySubtags);
      } else if (entry.supplemental.currencyData) {
        var currencyData = cldr.supplemental.currencyData;
        currencyData.region = Object.assign(currencyData.region || {}, entry.supplemental.currencyData.region);
        currencyData.fractions = Object.assign(currencyData.fractions || {}, entry.supplemental.currencyData.fractions);
      }
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-field-name.js
function dateFieldName(options, locale) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  var info = localeInfo(locale);
  var dateFields = info.calendar.dateFields;
  if (!dateFields) {
    throw errors.NoDateFieldNames.error();
  }
  var fieldNameInfo = dateFields[options.type] || {};
  return fieldNameInfo[options.nameType] || fieldNameInfo["wide"];
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-format-names.js
function lowerArray(arr) {
  var result = [];
  for (var idx = 0; idx < arr.length; idx++) {
    result.push(arr[idx].toLowerCase());
  }
  return result;
}
function lowerObject(obj) {
  var result = {};
  for (var field in obj) {
    result[field] = obj[field].toLowerCase();
  }
  return result;
}
function cloneLower(obj) {
  var result = Array.isArray(obj) ? lowerArray(obj) : lowerObject(obj);
  return result;
}
function dateFormatNames(locale, options) {
  var type = options.type;
  var nameType = options.nameType;
  var standAlone = options.standAlone;
  var lower = options.lower;
  var info = getLocaleInfo(locale);
  var formatType = standAlone ? "stand-alone" : "format";
  var lowerNameType = (lower ? "lower-" : EMPTY) + nameType;
  var formatNames2 = info.calendar[type][formatType];
  var result = formatNames2[lowerNameType];
  if (!result && lower) {
    result = formatNames2[lowerNameType] = cloneLower(formatNames2[nameType]);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/parse-range-date.js
function parseRangeDate(value) {
  var parts = value.split("-");
  var year = parseInt(parts[0], 10);
  var month = parseInt(parts[1], 10) - 1;
  var day = parseInt(parts[2], 10);
  return new Date(year, month, day);
}

// node_modules/@progress/kendo-intl/dist/es/cldr/currency.js
var NoCurrency = errors.NoCurrency;
var NoCurrencyDisplay = errors.NoCurrencyDisplay;
var NoSupplementalCurrency = errors.NoSupplementalCurrency;
var NoCurrencyRegion = errors.NoCurrencyRegion;
var NoValidCurrency = errors.NoValidCurrency;
var DEFAULT_CURRENCY_FRACTIONS = 2;
var SYMBOL = "symbol";
var INVALID_CURRENCY_CODE = "XXX";
var GLOBAL_CURRENCIES = {
  "001": "USD",
  // 001 refers to world. not sure if it is correct to assume USD but seems better than throw an error
  "150": "EUR"
  // 150 territory for Europe
};
function getCurrencyInfo(locale, currency, throwIfNoValid) {
  var info = getLocaleInfo(locale);
  var currencies = info.numbers.currencies;
  if (!currencies) {
    if (throwIfNoValid) {
      throw NoCurrency.error();
    }
    return;
  }
  var currencyDisplayInfo = currencies[currency];
  if (!currencyDisplayInfo) {
    if (throwIfNoValid) {
      throw NoCurrencyDisplay.error();
    }
    return;
  }
  return currencyDisplayInfo;
}
function lengthComparer(a12, b3) {
  return b3.length - a12.length;
}
function regionCurrency(regionCurrencies) {
  var latestValidUntil, latestValidUntilRange;
  var latestStillValid, latestStillValidDate;
  for (var idx = 0; idx < regionCurrencies.length; idx++) {
    var currency = regionCurrencies[idx];
    var code = Object.keys(currency)[0];
    var info = currency[code];
    if (code !== INVALID_CURRENCY_CODE && info._tender !== "false" && info._from) {
      if (!info._to) {
        var stillValidDate = parseRangeDate(info._from);
        if (!latestStillValidDate || latestStillValidDate < stillValidDate) {
          latestStillValid = code;
          latestStillValidDate = stillValidDate;
        }
      } else if (!latestStillValid) {
        var validFrom = parseRangeDate(info._from);
        var validTo = parseRangeDate(info._to);
        if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {
          latestValidUntil = code;
          latestValidUntilRange = {
            from: validFrom,
            to: validTo
          };
        }
      }
    }
  }
  return latestStillValid || latestValidUntil;
}
function currencyDisplays(locale, currency, throwIfNoValid) {
  if (throwIfNoValid === void 0) throwIfNoValid = true;
  var currencyInfo = getCurrencyInfo(locale, currency, throwIfNoValid);
  if (!currencyInfo) {
    return;
  }
  if (!currencyInfo.displays) {
    var displays = [currency];
    for (var field in currencyInfo) {
      displays.push(currencyInfo[field]);
    }
    displays.sort(lengthComparer);
    currencyInfo.displays = displays;
  }
  return currencyInfo.displays;
}
function currencyDisplay(locale, options) {
  var value = options.value;
  var currency = options.currency;
  var currencyDisplay2 = options.currencyDisplay;
  if (currencyDisplay2 === void 0) currencyDisplay2 = SYMBOL;
  if (currencyDisplay2 === "code") {
    return currency;
  }
  var currencyInfo = getCurrencyInfo(locale, currency, true);
  var result;
  if (currencyDisplay2 === SYMBOL) {
    result = currencyInfo["symbol-alt-narrow"] || currencyInfo[SYMBOL] || currency;
  } else {
    if (typeof value === "undefined" || value !== 1) {
      result = currencyInfo["displayName-count-other"];
    } else {
      result = currencyInfo["displayName-count-one"];
    }
  }
  return result;
}
function currencyFractionOptions(code) {
  var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];
  if (fractions && fractions._digits) {
    maximumFractionDigits = minimumFractionDigits = parseInt(fractions._digits, 10);
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function territoryCurrencyCode(territory, throwIfNoValid) {
  if (throwIfNoValid === void 0) throwIfNoValid = true;
  if (GLOBAL_CURRENCIES[territory]) {
    return GLOBAL_CURRENCIES[territory];
  }
  var currencyData = cldr.supplemental.currencyData;
  if (!currencyData) {
    if (throwIfNoValid) {
      throw NoSupplementalCurrency.error();
    }
    return;
  }
  var regionCurrencies = currencyData.region[territory];
  if (!regionCurrencies) {
    if (throwIfNoValid) {
      throw NoCurrencyRegion.error(territory);
    }
    return;
  }
  var currencyCode = regionCurrency(regionCurrencies);
  return currencyCode;
}
function localeCurrency(locale, throwIfNoValid) {
  var info = getLocaleInfo(locale);
  var numbers = info.numbers;
  if (!numbers.localeCurrency) {
    var currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);
    if (!currency && throwIfNoValid) {
      throw NoValidCurrency.error(info.name);
    }
    numbers.localeCurrency = currency;
  }
  return numbers.localeCurrency;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/constants.js
var DAYS_OF_WEEK = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
var DEFAULT_TERRITORY = "001";

// node_modules/@progress/kendo-intl/dist/es/cldr/first-day.js
var NoWeekData = errors.NoWeekData;
var NoFirstDay = errors.NoFirstDay;
function firstDay(locale) {
  var info = getLocaleInfo(locale);
  if (!isNaN(info.firstDay)) {
    return info.firstDay;
  }
  var weekData = cldr.supplemental.weekData;
  if (!weekData) {
    throw NoWeekData.error();
  }
  var firstDay2 = weekData.firstDay[localeTerritory(info)] || weekData.firstDay[DEFAULT_TERRITORY];
  if (!firstDay2) {
    throw NoFirstDay.error();
  }
  info.firstDay = DAYS_OF_WEEK.indexOf(firstDay2);
  return info.firstDay;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/weekend-range.js
var NoWeekData2 = errors.NoWeekData;

// node_modules/@progress/kendo-intl/dist/es/cldr/number-symbols.js
function numberSymbols(locale) {
  var info = getLocaleInfo(locale);
  return info.numbers.symbols;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-negative-zero.js
function isNegativeZero(value) {
  return 1 / value === -Infinity;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-currency-symbol.js
function formatCurrencySymbol(info, options) {
  if (options === void 0) options = {};
  if (!options.currency) {
    options.currency = localeCurrency(info, true);
  }
  var display = currencyDisplay(info, options);
  return display;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/group-integer.js
function groupInteger(number, start, end, options, info) {
  var symbols = info.numbers.symbols;
  var decimalIndex = number.indexOf(symbols.decimal);
  var groupSizes = options.groupSize.slice();
  var groupSize = groupSizes.shift();
  var integerEnd = decimalIndex !== -1 ? decimalIndex : end + 1;
  var integer = number.substring(start, integerEnd);
  var result = number;
  var integerLength = integer.length;
  if (integerLength >= groupSize) {
    var idx = integerLength;
    var parts = [];
    while (idx > -1) {
      var value = integer.substring(idx - groupSize, idx);
      if (value) {
        parts.push(value);
      }
      idx -= groupSize;
      var newGroupSize = groupSizes.shift();
      groupSize = newGroupSize !== void 0 ? newGroupSize : groupSize;
      if (groupSize === 0) {
        value = integer.substring(0, idx);
        if (value) {
          parts.push(value);
        }
        break;
      }
    }
    integer = parts.reverse().join(symbols.group);
    result = number.substring(0, start) + integer + number.substring(integerEnd);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/is-currency-style.js
function isCurrencyStyle(style) {
  return style === CURRENCY || style === ACCOUNTING;
}

// node_modules/@progress/kendo-intl/dist/es/common/pad.js
function pad(number, digits, right) {
  if (digits === void 0) digits = 2;
  if (right === void 0) right = false;
  var count = digits - String(number).length;
  var result = number;
  if (count > 0) {
    var padString = new Array(count + 1).join("0");
    result = right ? number + padString : padString + number;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/round.js
var MAX_PRECISION = 20;
function round(value, precision) {
  var result = value;
  var decimals = precision || 0;
  result = result.toString().split("e");
  result = Math.round(Number(result[0] + "e" + (result[1] ? Number(result[1]) + decimals : decimals)));
  result = result.toString().split("e");
  result = Number(result[0] + "e" + (result[1] ? Number(result[1]) - decimals : -decimals));
  return result.toFixed(Math.min(decimals, MAX_PRECISION));
}

// node_modules/@progress/kendo-intl/dist/es/numbers/standard-number-format.js
var DEFAULT_DECIMAL_ROUNDING = 3;
var DEFAULT_PERCENT_ROUNDING = 0;
var trailingZeroRegex = /0+$/;
function fractionOptions(options) {
  var minimumFractionDigits = options.minimumFractionDigits;
  var maximumFractionDigits = options.maximumFractionDigits;
  var style = options.style;
  var isCurrency = isCurrencyStyle(style);
  var currencyFractions;
  if (isCurrency) {
    currencyFractions = currencyFractionOptions(options.currency);
  }
  if (minimumFractionDigits === void 0) {
    minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;
  }
  if (maximumFractionDigits === void 0) {
    if (style === PERCENT) {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING);
    } else if (isCurrency) {
      maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);
    } else {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING);
    }
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function applyPattern(value, pattern, symbol) {
  var result = EMPTY;
  for (var idx = 0, length = pattern.length; idx < length; idx++) {
    var ch = pattern.charAt(idx);
    if (ch === NUMBER_PLACEHOLDER) {
      result += value;
    } else if (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) {
      result += symbol;
    } else {
      result += ch;
    }
  }
  return result;
}
function currencyUnitPattern(info, value) {
  var currencyInfo = info.numbers.currency;
  var pattern = value !== 1 ? currencyInfo["unitPattern-count-other"] : currencyInfo["unitPattern-count-one"];
  if (value < 0) {
    pattern = pattern.replace(NUMBER_PLACEHOLDER, "-" + NUMBER_PLACEHOLDER);
  }
  return pattern;
}
function standardNumberFormat(number, options, info) {
  var symbols = info.numbers.symbols;
  var style = options.style;
  var isCurrency = isCurrencyStyle(style);
  if (style === SCIENTIFIC) {
    var exponential = options.minimumFractionDigits !== void 0 ? number.toExponential(options.minimumFractionDigits) : number.toExponential();
    return exponential.replace(POINT, symbols.decimal);
  }
  var value = number;
  var symbol;
  if (isCurrency) {
    options.value = value;
    symbol = formatCurrencySymbol(info, options);
  }
  if (style === PERCENT) {
    value *= 100;
    symbol = symbols.percentSign;
  }
  var ref = fractionOptions(options);
  var minimumFractionDigits = ref.minimumFractionDigits;
  var maximumFractionDigits = ref.maximumFractionDigits;
  value = round(value, maximumFractionDigits);
  var negative = value < 0;
  var negativeZero = isNegativeZero(number);
  var parts = value.split(POINT);
  var integer = parts[0];
  var fraction = pad(parts[1] ? parts[1].replace(trailingZeroRegex, EMPTY) : EMPTY, minimumFractionDigits, true);
  if (negative) {
    integer = integer.substring(1);
  }
  if (options.minimumIntegerDigits) {
    integer = pad(integer, options.minimumIntegerDigits);
  }
  var formattedValue = options.useGrouping !== false ? groupInteger(integer, 0, integer.length, options, info) : integer;
  if (fraction) {
    formattedValue += symbols.decimal + fraction;
  }
  var pattern;
  if (isCurrency && options.currencyDisplay === "name") {
    pattern = currencyUnitPattern(info, number);
  } else {
    var patterns = options.patterns;
    pattern = negative || negativeZero ? patterns[1] || "-" + patterns[0] : patterns[0];
  }
  if (pattern === NUMBER_PLACEHOLDER && !negative) {
    return formattedValue;
  }
  var result = applyPattern(formattedValue, pattern, symbol);
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/utils.js
var literalRegExp = /(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g;
var PLACEHOLDER = "__??__";
function setStyleOptions(formatOptions2, info) {
  var format2 = formatOptions2.format;
  if (format2.indexOf(PERCENT_PLACEHOLDER) !== -1) {
    formatOptions2.style = PERCENT;
    formatOptions2.symbol = info.numbers.symbols.percentSign;
    formatOptions2.number *= 100;
  }
  if (format2.indexOf(CURRENCY_PLACEHOLDER) !== -1) {
    formatOptions2.style = CURRENCY;
    formatOptions2.symbol = formatCurrencySymbol(info);
  }
}
function setFormatLiterals(formatOptions2) {
  var format2 = formatOptions2.format;
  if (format2.indexOf("'") > -1 || format2.indexOf('"') > -1 || format2.indexOf("\\") > -1) {
    var literals = formatOptions2.literals = [];
    formatOptions2.format = format2.replace(literalRegExp, function(match) {
      var quoteChar = match.charAt(0).replace("\\", EMPTY);
      var literal = match.slice(1).replace(quoteChar, EMPTY);
      literals.push(literal);
      return PLACEHOLDER;
    });
  }
}
function replaceLiterals(number, literals) {
  var result = number;
  if (literals) {
    var length = literals.length;
    for (var idx = 0; idx < length; idx++) {
      result = result.replace(PLACEHOLDER, literals[idx]);
    }
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/custom-number-format.js
var SHARP = "#";
var ZERO = "0";
var trailingZerosRegExp = /(\.(?:[0-9]*[1-9])?)0+$/g;
var trailingPointRegExp = /\.$/;
var commaRegExp = /,/g;
function trimTrailingZeros(value, lastZero) {
  var trimRegex;
  if (lastZero === 0) {
    trimRegex = trailingZerosRegExp;
  } else {
    trimRegex = new RegExp("(\\.[0-9]{" + lastZero + "}[1-9]*)0+$", "g");
  }
  return value.replace(trimRegex, "$1").replace(trailingPointRegExp, EMPTY);
}
function roundNumber(formatOptions2) {
  var number = formatOptions2.number;
  var format2 = formatOptions2.format;
  var decimalIndex = format2.indexOf(POINT);
  if (decimalIndex !== -1) {
    var zeroIndex = format2.lastIndexOf(ZERO) - decimalIndex;
    var sharpIndex = format2.lastIndexOf(SHARP) - decimalIndex;
    var hasZero = zeroIndex > -1;
    var hasSharp = sharpIndex > -1;
    var fraction = number.toString().split("e");
    if (fraction[1]) {
      fraction = round(number, Math.abs(fraction[1]));
    } else {
      fraction = fraction[0];
    }
    fraction = fraction.split(POINT)[1] || EMPTY;
    var precision = fraction.length;
    var trailingZeros = -1;
    if (!hasZero && !hasSharp) {
      formatOptions2.format = format2.substring(0, decimalIndex) + format2.substring(decimalIndex + 1);
      decimalIndex = -1;
      precision = 0;
    } else if (hasZero && zeroIndex > sharpIndex) {
      precision = zeroIndex;
    } else if (sharpIndex > zeroIndex) {
      if (hasSharp && precision > sharpIndex) {
        precision = sharpIndex;
      } else if (hasZero && precision < zeroIndex) {
        precision = zeroIndex;
      }
      trailingZeros = hasZero ? zeroIndex : 0;
    }
    if (precision > -1) {
      number = round(number, precision);
      if (trailingZeros > -1) {
        number = trimTrailingZeros(number, trailingZeros);
      }
    }
  } else {
    number = round(number);
  }
  if (formatOptions2.negative && number * -1 >= 0 && !formatOptions2.negativeZero) {
    formatOptions2.negative = false;
  }
  formatOptions2.number = number;
  formatOptions2.decimalIndex = decimalIndex;
}
function isConstantFormat(format2) {
  return format2.indexOf(SHARP) === -1 && format2.indexOf(ZERO) === -1;
}
function setValueSpecificFormat(formatOptions2) {
  var number = formatOptions2.number;
  var format2 = formatOptions2.format;
  format2 = format2.split(LIST_SEPARATOR);
  if ((formatOptions2.negative || formatOptions2.negativeZero) && format2[1]) {
    format2 = format2[1];
    formatOptions2.hasNegativeFormat = true;
  } else if (number === 0) {
    var zeroFormat = format2[2];
    format2 = zeroFormat || format2[0];
    if (zeroFormat && isConstantFormat(zeroFormat)) {
      formatOptions2.constant = zeroFormat;
    }
  } else {
    format2 = format2[0];
  }
  formatOptions2.format = format2;
}
function setGroupOptions(formatOptions2) {
  formatOptions2.hasGroup = formatOptions2.format.indexOf(GROUP_SEPARATOR) > -1;
  if (formatOptions2.hasGroup) {
    formatOptions2.format = formatOptions2.format.replace(commaRegExp, EMPTY);
  }
}
function placeholderIndex(index1, index2, start) {
  var index;
  if (index1 === -1 && index2 !== -1) {
    index = index2;
  } else if (index1 !== -1 && index2 === -1) {
    index = index1;
  } else {
    index = start ? Math.min(index1, index2) : Math.max(index1, index2);
  }
  return index;
}
function setPlaceholderIndices(formatOptions2) {
  var format2 = formatOptions2.format;
  var sharpIndex = format2.indexOf(SHARP);
  var zeroIndex = format2.indexOf(ZERO);
  var start = placeholderIndex(sharpIndex, zeroIndex, true);
  sharpIndex = format2.lastIndexOf(SHARP);
  zeroIndex = format2.lastIndexOf(ZERO);
  var end = placeholderIndex(sharpIndex, zeroIndex);
  if (start === format2.length) {
    end = start;
  }
  formatOptions2.start = start;
  formatOptions2.end = end;
  formatOptions2.lastZeroIndex = zeroIndex;
}
function replaceStyleSymbols(number, style, symbol) {
  var result = number;
  if (style === CURRENCY || style === PERCENT) {
    result = EMPTY;
    for (var idx = 0, length = number.length; idx < length; idx++) {
      var ch = number.charAt(idx);
      result += ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER ? symbol : ch;
    }
  }
  return result;
}
function replacePlaceHolders(formatOptions2, info) {
  var start = formatOptions2.start;
  var end = formatOptions2.end;
  var negative = formatOptions2.negative;
  var negativeZero = formatOptions2.negativeZero;
  var format2 = formatOptions2.format;
  var decimalIndex = formatOptions2.decimalIndex;
  var lastZeroIndex = formatOptions2.lastZeroIndex;
  var hasNegativeFormat = formatOptions2.hasNegativeFormat;
  var hasGroup = formatOptions2.hasGroup;
  var number = formatOptions2.number;
  var value = number.toString().split(POINT);
  var length = format2.length;
  var integer = value[0];
  var fraction = value[1] || EMPTY;
  var integerLength = integer.length;
  var replacement = EMPTY;
  number = format2.substring(0, start);
  if ((negative || negativeZero) && !hasNegativeFormat) {
    number += "-";
  }
  for (var idx = start; idx < length; idx++) {
    var ch = format2.charAt(idx);
    if (decimalIndex === -1) {
      if (end - idx < integerLength) {
        number += integer;
        break;
      }
    } else {
      if (lastZeroIndex !== -1 && lastZeroIndex < idx) {
        replacement = EMPTY;
      }
      if (decimalIndex - idx <= integerLength && decimalIndex - idx > -1) {
        number += integer;
        idx = decimalIndex;
      }
      if (decimalIndex === idx) {
        number += (fraction ? info.numbers.symbols.decimal : EMPTY) + fraction;
        idx += end - decimalIndex + 1;
        continue;
      }
    }
    if (ch === ZERO) {
      number += ch;
      replacement = ch;
    } else if (ch === SHARP) {
      number += replacement;
    }
  }
  if (hasGroup) {
    number = groupInteger(number, start + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end, integerLength + start), info.numbers.decimal, info);
  }
  if (end >= start) {
    number += format2.substring(end + 1);
  }
  return number;
}
function applyCustomFormat(formatOptions2, info) {
  var number = formatOptions2.number;
  if (formatOptions2.start !== -1) {
    number = replacePlaceHolders(formatOptions2, info);
    number = replaceStyleSymbols(number, formatOptions2.style, formatOptions2.symbol);
    number = replaceLiterals(number, formatOptions2.literals);
  }
  return number;
}
function customNumberFormat(number, format2, info) {
  var formatOptions2 = {
    negative: number < 0,
    number: Math.abs(number),
    negativeZero: isNegativeZero(number),
    format: format2
  };
  setValueSpecificFormat(formatOptions2);
  if (formatOptions2.constant) {
    return formatOptions2.constant;
  }
  setFormatLiterals(formatOptions2);
  setStyleOptions(formatOptions2, info);
  setGroupOptions(formatOptions2);
  roundNumber(formatOptions2);
  setPlaceholderIndices(formatOptions2);
  return applyCustomFormat(formatOptions2, info);
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-options.js
var standardFormatRegExp = /^(n|c|p|e|a)(\d*)$/i;
function standardFormatOptions(format2) {
  var formatAndPrecision = standardFormatRegExp.exec(format2);
  if (formatAndPrecision) {
    var options = {
      style: DECIMAL
    };
    var style = formatAndPrecision[1].toLowerCase();
    if (style === "c") {
      options.style = CURRENCY;
    } else if (style === "a") {
      options.style = ACCOUNTING;
    } else if (style === "p") {
      options.style = PERCENT;
    } else if (style === "e") {
      options.style = SCIENTIFIC;
    }
    if (formatAndPrecision[2]) {
      options.minimumFractionDigits = options.maximumFractionDigits = parseInt(formatAndPrecision[2], 10);
    }
    return options;
  }
}
function formatOptions(format2) {
  var options;
  if (isString(format2)) {
    options = standardFormatOptions(format2);
  } else {
    options = format2;
  }
  return options;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-number.js
function formatNumber(number, format2, locale) {
  if (format2 === void 0) format2 = NUMBER_PLACEHOLDER;
  if (locale === void 0) locale = DEFAULT_LOCALE;
  if (number === void 0 || number === null) {
    return EMPTY;
  }
  if (!isFinite(number)) {
    return String(number);
  }
  var info = localeInfo(locale);
  var options = formatOptions(format2);
  var result;
  if (options) {
    var style = options.style || DECIMAL;
    result = standardNumberFormat(number, Object.assign({}, info.numbers[style], options), info);
  } else {
    result = customNumberFormat(number, format2, info);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-number.js
function isNumber(value) {
  return typeof value === "number";
}

// node_modules/@progress/kendo-intl/dist/es/numbers/parse-number.js
var exponentRegExp = /[eE][-+]?[0-9]+/;
var nonBreakingSpaceRegExp = /\u00A0/g;
function cleanNegativePattern(number, patterns) {
  if (patterns.length > 1) {
    var parts = (patterns[1] || EMPTY).replace(CURRENCY_PLACEHOLDER, EMPTY).split(NUMBER_PLACEHOLDER);
    if (number.indexOf(parts[0]) > -1 && number.indexOf(parts[1]) > -1) {
      return number.replace(parts[0], EMPTY).replace(parts[1], EMPTY);
    }
  }
}
function cleanCurrencyNumber(value, info, format2) {
  var options = formatOptions(format2) || {};
  var isCurrency = isCurrencyStyle(options.style);
  var number = value;
  var negative;
  var currency = options.currency || localeCurrency(info, isCurrency);
  if (currency) {
    var displays = currencyDisplays(info, currency, isCurrency);
    if (displays) {
      for (var idx = 0; idx < displays.length; idx++) {
        var display = displays[idx];
        if (number.includes(display)) {
          number = number.replace(display, EMPTY);
          isCurrency = true;
          break;
        }
      }
    }
    if (isCurrency) {
      var cleanNumber = cleanNegativePattern(number, info.numbers.currency.patterns) || cleanNegativePattern(number, info.numbers.accounting.patterns);
      if (cleanNumber) {
        negative = true;
        number = cleanNumber;
      }
    }
  }
  return {
    number,
    negative
  };
}
function cleanLiterals(number, formatOptions2) {
  var literals = formatOptions2.literals;
  var result = number;
  if (literals) {
    for (var idx = 0; idx < literals.length; idx++) {
      result = result.replace(literals[idx], EMPTY);
    }
  }
  return result;
}
function divideBy100(number) {
  var strNumber = String(number);
  var pointIndex = strNumber.indexOf(POINT);
  var zeroesCount = 2;
  var result = number / Math.pow(10, zeroesCount);
  if (pointIndex === -1 || String(result).length <= strNumber.length + zeroesCount) {
    return result;
  }
  var fractionDigits = strNumber.length - pointIndex + 1 + zeroesCount;
  return parseFloat(result.toFixed(fractionDigits));
}
function parseNumber(value, locale, format2) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  if (format2 === void 0) format2 = {};
  if (!value && value !== 0) {
    return null;
  }
  if (isNumber(value)) {
    return value;
  }
  var info = localeInfo(locale);
  var symbols = info.numbers.symbols;
  var number = value.toString();
  var formatOptions2 = format2 || {};
  var isPercent;
  if (isString(format2)) {
    formatOptions2 = { format: format2 };
    setFormatLiterals(formatOptions2);
    number = cleanLiterals(number, formatOptions2);
    setStyleOptions(formatOptions2, info);
  }
  if (formatOptions2.style === PERCENT || number.indexOf(symbols.percentSign) > -1) {
    number = number.replace(symbols.percentSign, EMPTY);
    isPercent = true;
  }
  if (exponentRegExp.test(number)) {
    number = parseFloat(number.replace(symbols.decimal, POINT));
    return isNaN(number) ? null : number;
  }
  var ref = cleanCurrencyNumber(number, info, formatOptions2);
  var negativeCurrency = ref.negative;
  var currencyNumber = ref.number;
  number = String(currencyNumber).trim();
  var negativeSignIndex = number.indexOf("-");
  if (negativeSignIndex > 0) {
    return null;
  }
  var isNegative = negativeSignIndex > -1;
  isNegative = negativeCurrency !== void 0 ? negativeCurrency : isNegative;
  number = number.replace("-", EMPTY).replace(nonBreakingSpaceRegExp, " ").split(symbols.group.replace(nonBreakingSpaceRegExp, " ")).join(EMPTY).replace(symbols.decimal, POINT);
  number = parseFloat(number);
  if (isNaN(number)) {
    number = null;
  } else if (isNegative) {
    number *= -1;
  }
  if (number && isPercent) {
    number = divideBy100(number);
  }
  return number;
}

// node_modules/@progress/kendo-intl/dist/es/common/format-string.js
var formatRegExp2 = /\{(\d+)}/g;
function formatString(format2) {
  var values = arguments;
  return format2.replace(formatRegExp2, function(match, index) {
    var value = values[parseInt(index, 10) + 1];
    return value;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-pattern.js
var REMOVAL_PENALTY = 120;
var ADDITION_PENALTY = 20;
var LENGHT_DELTA = [2, 1, 5, 3, 4];
var LONG_LESS_PENALTY_DELTA = -2;
var SHORT_LESS_PENALTY_DELTA = -1;
var SHORT_MORE_PENALTY_DELTA = 1;
var LONG_MORE_PENALTY_DELTA = 2;
var PENALTIES = {};
PENALTIES[LONG_LESS_PENALTY_DELTA.toString()] = 8;
PENALTIES[SHORT_LESS_PENALTY_DELTA.toString()] = 6;
PENALTIES[LONG_MORE_PENALTY_DELTA.toString()] = 6;
PENALTIES[SHORT_MORE_PENALTY_DELTA.toString()] = 3;
var VALUE_FORMAT_LENGTH = {
  numeric: 1,
  "2-digit": 2,
  short: 3,
  long: 4,
  narrow: 5
};
var TIME_SPECIFIERS_REGEX = /[hHmsSzZoOvVxX]/;
function getHourSpecifier(options) {
  return options.hour12 ? "h" : "H";
}
var DATE_OPTIONS_MAP = [{
  key: "era",
  specifier: "G"
}, {
  key: "year",
  specifier: "y"
}, {
  key: "month",
  specifier: "M"
}, {
  key: "day",
  specifier: "d"
}, {
  key: "weekday",
  specifier: "E"
}, {
  key: "hour",
  getSpecifier: getHourSpecifier
}, {
  key: "minute",
  specifier: "m"
}, {
  key: "second",
  specifier: "s"
}, {
  key: "timeZoneName",
  specifier: "z"
}];
var STAND_ALONE_SPECIFIERS = {
  e: "c",
  E: "c",
  M: "L",
  Q: "q"
};
var specifiersRegex = {};
var resolvedFormats = {};
function getSpecifierRegex(specifier) {
  if (!specifiersRegex[specifier]) {
    specifiersRegex[specifier] = new RegExp(specifier + "+");
  }
  return specifiersRegex[specifier];
}
function skeletonSpecifiers(skeleton) {
  var result = [];
  var current = skeleton.charAt(0);
  var specifier = current;
  for (var idx = 1; idx < skeleton.length; idx++) {
    var character = skeleton.charAt(idx);
    if (character === specifier) {
      current += character;
    } else {
      result.push(current);
      current = specifier = character;
    }
  }
  result.push(current);
  return result;
}
function findBestMatch(specifiers, availableFormats) {
  var specifiersLength = specifiers.length;
  var maxScore = -Number.MAX_VALUE;
  var bestMatches, result;
  for (var format2 in availableFormats) {
    var matches = [];
    var currentFormat = format2.replace("v", "z");
    var score = 0;
    for (var idx = 0; idx < specifiersLength; idx++) {
      var specifier = specifiers[idx];
      var specifierRegex = getSpecifierRegex(specifier[0]);
      var match = (specifierRegex.exec(currentFormat) || [])[0];
      if (!match) {
        score -= REMOVAL_PENALTY;
      } else {
        currentFormat = currentFormat.replace(match, EMPTY);
        if (match.length !== specifier.length) {
          var delta = Math.max(Math.min(LENGHT_DELTA[match.length] - LENGHT_DELTA[specifier.length], 2), -2);
          score -= PENALTIES[delta];
        }
      }
      matches.push(match);
      if (score < maxScore) {
        break;
      }
    }
    if (currentFormat.length) {
      score -= skeletonSpecifiers(currentFormat).length * ADDITION_PENALTY;
    }
    if (score > maxScore) {
      maxScore = score;
      bestMatches = matches;
      result = availableFormats[format2];
    }
  }
  result = result.replace("v", "z");
  for (var idx$1 = 0; idx$1 < specifiersLength; idx$1++) {
    var bestMatch = bestMatches[idx$1];
    if (bestMatch && bestMatch !== specifiers[idx$1]) {
      var matchSpecifier = bestMatches[idx$1][0];
      result = result.replace(getSpecifierRegex(matchSpecifier), specifiers[idx$1]);
      if (STAND_ALONE_SPECIFIERS[matchSpecifier]) {
        result = result.replace(getSpecifierRegex(STAND_ALONE_SPECIFIERS[matchSpecifier]), specifiers[idx$1]);
      }
    }
  }
  return result;
}
function cacheFormat(skeleton, format2, locale) {
  if (!resolvedFormats[locale]) {
    resolvedFormats[locale] = {};
  }
  resolvedFormats[locale][skeleton] = format2;
}
function skeletonFormat(skeleton, info) {
  var availableFormats = info.calendar.dateTimeFormats.availableFormats;
  if (availableFormats[skeleton]) {
    return availableFormats[skeleton];
  }
  if (resolvedFormats[info.name] && resolvedFormats[info.name][skeleton]) {
    return resolvedFormats[info.name][skeleton];
  }
  var timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX);
  var result;
  if (timeStartIndex > 0) {
    var dateSkeleton = skeleton.substr(0, timeStartIndex);
    var timeSkeleton = skeleton.substr(timeStartIndex);
    result = formatString(
      info.calendar.dateTimeFormats.short,
      //should be deterimed based on specifiers
      availableFormats[timeSkeleton] || findBestMatch(skeletonSpecifiers(timeSkeleton), availableFormats),
      availableFormats[dateSkeleton] || findBestMatch(skeletonSpecifiers(dateSkeleton), availableFormats)
    );
  } else {
    result = findBestMatch(skeletonSpecifiers(skeleton), availableFormats);
  }
  cacheFormat(skeleton, result, info.name);
  return result;
}
function skeletonFromOptions(options) {
  var result = [];
  for (var idx = 0; idx < DATE_OPTIONS_MAP.length; idx++) {
    var option = DATE_OPTIONS_MAP[idx];
    var field = option.key;
    var value = options[field];
    if (value) {
      var spcifier = option.specifier || option.getSpecifier(options);
      result.push(spcifier.repeat(VALUE_FORMAT_LENGTH[value]));
    }
  }
  return result.join(EMPTY);
}
function datePattern(format2, info) {
  var calendar = info.calendar;
  var result;
  if (isString(format2)) {
    if (calendar.patterns[format2]) {
      result = calendar.patterns[format2];
    } else {
      result = format2;
    }
  } else if (format2) {
    if (format2.pattern) {
      return format2.pattern;
    }
    var skeleton = format2.skeleton;
    if (!skeleton) {
      if (format2.datetime) {
        result = formatString(calendar.dateTimeFormats[format2.datetime], calendar.timeFormats[format2.datetime], calendar.dateFormats[format2.datetime]);
      } else if (format2.date) {
        result = calendar.dateFormats[format2.date];
      } else if (format2.time) {
        result = calendar.timeFormats[format2.time];
      } else {
        skeleton = skeletonFromOptions(format2);
      }
    }
    if (skeleton) {
      result = skeletonFormat(skeleton, info);
    }
  }
  if (!result) {
    result = calendar.patterns.d;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-name-type.js
function dateNameType(formatLength) {
  var nameType;
  if (formatLength <= 3) {
    nameType = "abbreviated";
  } else if (formatLength === 4) {
    nameType = "wide";
  } else if (formatLength === 5) {
    nameType = "narrow";
  } else if (formatLength === 6) {
    nameType = "short";
  }
  return nameType;
}

// node_modules/@progress/kendo-intl/dist/es/dates/format-names.js
function formatNames(locale, type, formatLength, standAlone, lower) {
  return dateFormatNames(locale, {
    type,
    nameType: dateNameType(formatLength),
    standAlone,
    lower
  });
}

// node_modules/@progress/kendo-intl/dist/es/common/is-date.js
function isFunction(fun) {
  return typeof fun === "function";
}
function isDate(value) {
  return Boolean(value) && isFunction(value.getTime) && isFunction(value.getMonth);
}

// node_modules/@progress/kendo-intl/dist/es/dates/constants.js
var MONTH = "month";
var HOUR = "hour";
var ZONE = "zone";
var WEEKDAY = "weekday";
var QUARTER = "quarter";
var DATE_FIELD_MAP = {
  "G": "era",
  "y": "year",
  "q": QUARTER,
  "Q": QUARTER,
  "M": MONTH,
  "L": MONTH,
  "d": "day",
  "E": WEEKDAY,
  "c": WEEKDAY,
  "e": WEEKDAY,
  "h": HOUR,
  "H": HOUR,
  "k": HOUR,
  "K": HOUR,
  "m": "minute",
  "s": "second",
  "S": "millisecond",
  "a": "dayperiod",
  "x": ZONE,
  "X": ZONE,
  "z": ZONE,
  "Z": ZONE
};
var dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|"[^"]*"|'[^']*'/g;

// node_modules/@progress/kendo-intl/dist/es/dates/format-date.js
function formatDayOfWeekIndex(day, formatLength, localeInfo2) {
  var firstDayIndex = firstDay(localeInfo2);
  var dayIndex;
  if (day < firstDayIndex) {
    dayIndex = 7 - firstDayIndex + day;
  } else {
    dayIndex = day - firstDayIndex;
  }
  return dayIndex + 1;
}
function formatMonth(month, formatLength, info, standAlone) {
  if (formatLength <= 2) {
    return pad(month + 1, formatLength);
  }
  return formatNames(info, "months", formatLength, standAlone)[month];
}
function formatQuarter(date, formatLength, info, standAlone) {
  var quarter = Math.floor(date.getMonth() / 3);
  if (formatLength < 3) {
    return quarter + 1;
  }
  return formatNames(info, "quarters", formatLength, standAlone)[quarter];
}
function formatTimeZone(date, info, options) {
  var shortHours = options.shortHours;
  var optionalMinutes = options.optionalMinutes;
  var separator = options.separator;
  var localizedName = options.localizedName;
  var zZeroOffset = options.zZeroOffset;
  var offset3 = date.getTimezoneOffset() / 60;
  if (offset3 === 0 && zZeroOffset) {
    return "Z";
  }
  var sign = offset3 <= 0 ? "+" : "-";
  var hoursMinutes = Math.abs(offset3).toString().split(".");
  var minutes = hoursMinutes[1] || 0;
  var result = sign + (shortHours ? hoursMinutes[0] : pad(hoursMinutes[0], 2));
  if (minutes || !optionalMinutes) {
    result += (separator ? ":" : EMPTY) + pad(minutes, 2);
  }
  if (localizedName) {
    var localizedFormat = offset3 === 0 ? info.calendar.gmtZeroFormat : info.calendar.gmtFormat;
    result = formatString(localizedFormat, result);
  }
  return result;
}
function formatDayOfWeek(date, formatLength, info, standAlone) {
  var result;
  if (formatLength < 3) {
    result = formatDayOfWeekIndex(date.getDay(), formatLength, info);
  } else {
    result = formatNames(info, "days", formatLength, standAlone)[date.getDay()];
  }
  return result;
}
var formatters = {};
formatters.d = function(date, formatLength) {
  return pad(date.getDate(), formatLength);
};
formatters.E = function(date, formatLength, info) {
  return formatNames(info, "days", formatLength)[date.getDay()];
};
formatters.M = function(date, formatLength, info) {
  return formatMonth(date.getMonth(), formatLength, info, false);
};
formatters.L = function(date, formatLength, info) {
  return formatMonth(date.getMonth(), formatLength, info, true);
};
formatters.y = function(date, formatLength) {
  var year = date.getFullYear();
  if (formatLength === 2) {
    year = year % 100;
  }
  return pad(year, formatLength);
};
formatters.h = function(date, formatLength) {
  var hours = date.getHours() % 12 || 12;
  return pad(hours, formatLength);
};
formatters.H = function(date, formatLength) {
  return pad(date.getHours(), formatLength);
};
formatters.k = function(date, formatLength) {
  return pad(date.getHours() || 24, formatLength);
};
formatters.K = function(date, formatLength) {
  return pad(date.getHours() % 12, formatLength);
};
formatters.m = function(date, formatLength) {
  return pad(date.getMinutes(), formatLength);
};
formatters.s = function(date, formatLength) {
  return pad(date.getSeconds(), formatLength);
};
formatters.S = function(date, formatLength) {
  var milliseconds = date.getMilliseconds();
  var result;
  if (milliseconds !== 0) {
    result = pad(String(milliseconds / 1e3).split(".")[1].substr(0, formatLength), formatLength, true);
  } else {
    result = pad(EMPTY, formatLength);
  }
  return result;
};
formatters.a = function(date, formatLength, info) {
  return formatNames(info, "dayPeriods", formatLength)[date.getHours() < 12 ? "am" : "pm"];
};
formatters.z = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    shortHours: formatLength < 4,
    optionalMinutes: formatLength < 4,
    separator: true,
    localizedName: true
  });
};
formatters.Z = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    separator: formatLength > 3,
    localizedName: formatLength === 4,
    zZeroOffset: formatLength === 5
  });
};
formatters.x = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5
  });
};
formatters.X = function(date, formatLength, info) {
  return formatTimeZone(date, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5,
    zZeroOffset: true
  });
};
formatters.G = function(date, formatLength, info) {
  var era = date.getFullYear() >= 0 ? 1 : 0;
  return formatNames(info, "eras", formatLength)[era];
};
formatters.e = formatDayOfWeek;
formatters.c = function(date, formatLength, info) {
  return formatDayOfWeek(date, formatLength, info, true);
};
formatters.q = function(date, formatLength, info) {
  return formatQuarter(date, formatLength, info, true);
};
formatters.Q = formatQuarter;
function formatDate(date, format2, locale) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  if (!isDate(date)) {
    if (date === void 0 || date === null) {
      return EMPTY;
    }
    return date;
  }
  var info = localeInfo(locale);
  var pattern = datePattern(format2, info);
  return pattern.replace(dateFormatRegExp, function(match) {
    var formatLength = match.length;
    var result;
    if (match.includes("'") || match.includes('"')) {
      result = match.slice(1, formatLength - 1);
    } else {
      result = formatters[match[0]](date, formatLength, info);
    }
    return result;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/time-utils.js
function convertTimeZone(date, fromOffset, toOffset) {
  var fromLocalOffset = date.getTimezoneOffset();
  var offsetDate = new Date(date.getTime() + (fromOffset - toOffset) * 6e4);
  var toLocalOffset = offsetDate.getTimezoneOffset();
  return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 6e4);
}
function adjustDST(date, hours) {
  if (!hours && date.getHours() === 23) {
    date.setHours(date.getHours() + 2);
  }
}

// node_modules/@progress/kendo-intl/dist/es/dates/parse-date.js
var timeZoneOffsetRegExp = /([+|-]\d{1,2})(:?)(\d{2})?/;
var dateRegExp = /^\/Date\((.*?)\)\/$/;
var offsetRegExp = /[+-]\d*/;
var numberRegExp = {
  2: /^\d{1,2}/,
  3: /^\d{1,3}/,
  4: /^\d{4}/
};
var numberRegex = /\d+/;
var PLACEHOLDER2 = "{0}";
var leadingSpacesRegex = /^ */;
var trailingSpacesRegex = / *$/;
var standardDateFormats = [
  "yyyy/MM/dd HH:mm:ss",
  "yyyy/MM/dd HH:mm",
  "yyyy/MM/dd",
  "E MMM dd yyyy HH:mm:ss",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSXXX",
  "yyyy-MM-ddTHH:mm:ssXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSS",
  "yyyy-MM-ddTHH:mm:ss.SSS",
  "yyyy-MM-ddTHH:mmXXX",
  "yyyy-MM-ddTHH:mmX",
  "yyyy-MM-ddTHH:mm:ss",
  "yyyy-MM-ddTHH:mm",
  "yyyy-MM-dd HH:mm:ss",
  "yyyy-MM-dd HH:mm",
  "yyyy-MM-dd",
  "HH:mm:ss",
  "HH:mm"
];
var FORMATS_SEQUENCE = ["G", "g", "F", "Y", "y", "M", "m", "D", "d", "y", "T", "t"];
var TWO_DIGIT_YEAR_MAX = 2029;
function outOfRange(value, start, end) {
  return !(value >= start && value <= end);
}
function lookAhead(match, state) {
  var format2 = state.format;
  var idx = state.idx;
  var i10 = 0;
  while (format2[idx] === match) {
    i10++;
    idx++;
  }
  if (i10 > 0) {
    idx -= 1;
  }
  state.idx = idx;
  return i10;
}
function getNumber(size, state) {
  var regex = size ? numberRegExp[size] || new RegExp("^\\d{1," + size + "}") : numberRegex, match = state.value.substr(state.valueIdx, size).match(regex);
  if (match) {
    match = match[0];
    state.valueIdx += match.length;
    return parseInt(match, 10);
  }
  return null;
}
function getIndexByName(names, state, lower) {
  var i10 = 0, length = names.length, name, nameLength, matchLength = 0, matchIdx = 0, subValue;
  for (; i10 < length; i10++) {
    name = names[i10];
    nameLength = name.length;
    subValue = state.value.substr(state.valueIdx, nameLength);
    if (lower) {
      subValue = subValue.toLowerCase();
    }
    if (subValue === name && nameLength > matchLength) {
      matchLength = nameLength;
      matchIdx = i10;
    }
  }
  if (matchLength) {
    state.valueIdx += matchLength;
    return matchIdx + 1;
  }
  return null;
}
function checkLiteral(state) {
  var result = false;
  if (state.value.charAt(state.valueIdx) === state.format[state.idx]) {
    state.valueIdx++;
    result = true;
  }
  return result;
}
function calendarGmtFormats(calendar) {
  var gmtFormat = calendar.gmtFormat;
  var gmtZeroFormat = calendar.gmtZeroFormat;
  if (!gmtFormat) {
    throw errors.NoGMTInfo.error();
  }
  return [gmtFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase(), gmtZeroFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase()];
}
function parseTimeZoneOffset(state, info, options) {
  var shortHours = options.shortHours;
  var noSeparator = options.noSeparator;
  var optionalMinutes = options.optionalMinutes;
  var localizedName = options.localizedName;
  var zLiteral = options.zLiteral;
  state.UTC = true;
  if (zLiteral && state.value.charAt(state.valueIdx) === "Z") {
    state.valueIdx++;
    return false;
  }
  if (localizedName && !getIndexByName(calendarGmtFormats(info.calendar), state, true)) {
    return true;
  }
  var matches = timeZoneOffsetRegExp.exec(state.value.substr(state.valueIdx, 6));
  if (!matches) {
    return !localizedName;
  }
  var hoursMatch = matches[1];
  var minutesMatch = matches[3];
  var hoursOffset = parseInt(hoursMatch, 10);
  var separator = matches[2];
  var minutesOffset = parseInt(minutesMatch, 10);
  if (isNaN(hoursOffset) || !shortHours && hoursMatch.length !== 3 || !optionalMinutes && isNaN(minutesOffset) || noSeparator && separator) {
    return true;
  }
  if (isNaN(minutesOffset)) {
    minutesOffset = null;
  }
  if (outOfRange(hoursOffset, -12, 13) || minutesOffset && outOfRange(minutesOffset, 0, 59)) {
    return true;
  }
  state.valueIdx += matches[0].length;
  state.hoursOffset = hoursOffset;
  state.minutesOffset = minutesOffset;
}
function parseMonth(ch, state, info) {
  var count = lookAhead(ch, state);
  var names = formatNames(info, "months", count, ch === "L", true);
  var month = count < 3 ? getNumber(2, state) : getIndexByName(names, state, true);
  if (month === null || outOfRange(month, 1, 12)) {
    return true;
  }
  state.month = month - 1;
}
function parseDayOfWeek(ch, state, info) {
  var count = lookAhead(ch, state);
  var names = formatNames(info, "days", count, ch === "c", true);
  var dayOfWeek = count < 3 ? getNumber(1, state) : getIndexByName(names, state, true);
  if (!dayOfWeek && dayOfWeek !== 0 || outOfRange(dayOfWeek, 1, 7)) {
    return true;
  }
}
var parsers = {};
parsers.d = function(state) {
  lookAhead("d", state);
  var day = getNumber(2, state);
  if (day === null || outOfRange(day, 1, 31)) {
    return true;
  }
  if (state.day === null) {
    state.day = day;
  }
};
parsers.E = function(state, info) {
  var count = lookAhead("E", state);
  var dayOfWeek = getIndexByName(formatNames(info, "days", count, false, true), state, true);
  if (dayOfWeek === null) {
    return true;
  }
};
parsers.M = function(state, info) {
  return parseMonth("M", state, info);
};
parsers.L = function(state, info) {
  return parseMonth("L", state, info);
};
parsers.y = function(state) {
  var count = lookAhead("y", state);
  var year = getNumber(count === 1 ? void 0 : count, state);
  if (year === null) {
    return true;
  }
  if (count === 2) {
    var currentYear = (/* @__PURE__ */ new Date()).getFullYear();
    year = currentYear - currentYear % 100 + year;
    if (year > TWO_DIGIT_YEAR_MAX) {
      year -= 100;
    }
  }
  state.year = year;
};
parsers.h = function(state) {
  lookAhead("h", state);
  var hours = getNumber(2, state);
  if (hours === 12) {
    hours = 0;
  }
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.K = function(state) {
  lookAhead("K", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.a = function(state, info) {
  var count = lookAhead("a", state);
  var periodFormats = formatNames(info, "dayPeriods", count, false, true);
  var pmHour = getIndexByName([periodFormats.pm], state, true);
  if (!pmHour && !getIndexByName([periodFormats.am], state, true)) {
    return true;
  }
  state.pmHour = pmHour;
};
parsers.H = function(state) {
  lookAhead("H", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 23)) {
    return true;
  }
  state.hours = hours;
};
parsers.k = function(state) {
  lookAhead("k", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 1, 24)) {
    return true;
  }
  state.hours = hours === 24 ? 0 : hours;
};
parsers.m = function(state) {
  lookAhead("m", state);
  var minutes = getNumber(2, state);
  if (minutes === null || outOfRange(minutes, 0, 59)) {
    return true;
  }
  state.minutes = minutes;
};
parsers.s = function(state) {
  lookAhead("s", state);
  var seconds = getNumber(2, state);
  if (seconds === null || outOfRange(seconds, 0, 59)) {
    return true;
  }
  state.seconds = seconds;
};
parsers.S = function(state) {
  var count = lookAhead("S", state);
  var match = state.value.substr(state.valueIdx, count);
  var milliseconds = null;
  if (!isNaN(parseInt(match, 10))) {
    milliseconds = parseFloat("0." + match, 10);
    milliseconds = round(milliseconds, 3);
    milliseconds *= 1e3;
    state.valueIdx += count;
  }
  if (milliseconds === null || outOfRange(milliseconds, 0, 999)) {
    return true;
  }
  state.milliseconds = milliseconds;
};
parsers.z = function(state, info) {
  var count = lookAhead("z", state);
  var shortFormat = count < 4;
  var invalid = parseTimeZoneOffset(state, info, {
    shortHours: shortFormat,
    optionalMinutes: shortFormat,
    localizedName: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.Z = function(state, info) {
  var count = lookAhead("Z", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count < 4,
    zLiteral: count === 5,
    localizedName: count === 4
  });
  if (invalid) {
    return invalid;
  }
};
parsers.x = function(state, info) {
  var count = lookAhead("x", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count !== 3 && count !== 5,
    optionalMinutes: count === 1
  });
  if (invalid) {
    return invalid;
  }
};
parsers.X = function(state, info) {
  var count = lookAhead("X", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count !== 3 && count !== 5,
    optionalMinutes: count === 1,
    zLiteral: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.G = function(state, info) {
  var count = lookAhead("G", state);
  var eras = formatNames(info, "eras", count, false, true);
  var era = getIndexByName([eras[0], eras[1]], state, true);
  if (era === null) {
    return true;
  }
};
parsers.e = function(state, info) {
  return parseDayOfWeek("e", state, info);
};
parsers.c = function(state, info) {
  return parseDayOfWeek("c", state, info);
};
function createDate(state) {
  var year = state.year;
  var month = state.month;
  var day = state.day;
  var hours = state.hours;
  var minutes = state.minutes;
  var seconds = state.seconds;
  var milliseconds = state.milliseconds;
  var pmHour = state.pmHour;
  var UTC = state.UTC;
  var hoursOffset = state.hoursOffset;
  var minutesOffset = state.minutesOffset;
  var hasTime = hours !== null || minutes !== null || seconds || null;
  var date = /* @__PURE__ */ new Date();
  var result;
  if (year === null && month === null && day === null && hasTime) {
    year = date.getFullYear();
    month = date.getMonth();
    day = date.getDate();
  } else {
    if (year === null) {
      year = date.getFullYear();
    }
    if (day === null) {
      day = 1;
    }
  }
  if (pmHour && hours < 12) {
    hours += 12;
  }
  if (UTC) {
    if (hoursOffset) {
      hours += -hoursOffset;
    }
    if (minutesOffset) {
      minutes += -minutesOffset * (hoursOffset < 0 ? -1 : 1);
    }
    result = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));
  } else {
    result = new Date(year, month, day, hours, minutes, seconds, milliseconds);
    adjustDST(result, hours);
  }
  if (year < 100) {
    result.setFullYear(year);
  }
  if (result.getDate() !== day && UTC === void 0) {
    return null;
  }
  return result;
}
function addFormatSpaces(value, format2) {
  var leadingSpaces = leadingSpacesRegex.exec(format2)[0];
  var trailingSpaces = trailingSpacesRegex.exec(format2)[0];
  return "" + leadingSpaces + value + trailingSpaces;
}
function parseExact(value, format2, info) {
  var pattern = datePattern(format2, info).split(EMPTY);
  var state = {
    format: pattern,
    idx: 0,
    value: addFormatSpaces(value, format2),
    valueIdx: 0,
    year: null,
    month: null,
    day: null,
    hours: null,
    minutes: null,
    seconds: null,
    milliseconds: null
  };
  var length = pattern.length;
  var literal = false;
  for (; state.idx < length; state.idx++) {
    var ch = pattern[state.idx];
    if (literal) {
      if (ch === "'") {
        literal = false;
      }
      checkLiteral(state);
    } else {
      if (parsers[ch]) {
        var invalid = parsers[ch](state, info);
        if (invalid) {
          return null;
        }
      } else if (ch === "'") {
        literal = true;
        checkLiteral(state);
      } else if (!checkLiteral(state)) {
        return null;
      }
    }
  }
  if (state.valueIdx < value.length) {
    return null;
  }
  return createDate(state) || null;
}
function parseMicrosoftDateOffset(offset3) {
  var sign = offset3.substr(0, 1) === "-" ? -1 : 1;
  var result = offset3.substring(1);
  result = parseInt(result.substr(0, 2), 10) * 60 + parseInt(result.substring(2), 10);
  return sign * result;
}
function parseMicrosoftDateFormat(value) {
  if (value && value.indexOf("/D") === 0) {
    var date = dateRegExp.exec(value);
    if (date) {
      date = date[1];
      var tzoffset = offsetRegExp.exec(date.substring(1));
      date = new Date(parseInt(date, 10));
      if (tzoffset) {
        tzoffset = parseMicrosoftDateOffset(tzoffset[0]);
        date = convertTimeZone(date, date.getTimezoneOffset(), 0);
        date = convertTimeZone(date, 0, -1 * tzoffset);
      }
      return date;
    }
  }
}
function defaultFormats(calendar) {
  var formats = [];
  var patterns = calendar.patterns;
  var length = FORMATS_SEQUENCE.length;
  for (var idx = 0; idx < length; idx++) {
    formats.push(patterns[FORMATS_SEQUENCE[idx]]);
  }
  return formats.concat(standardDateFormats);
}
function parseDate(value, formats, locale) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  if (!value) {
    return null;
  }
  if (isDate(value)) {
    return value;
  }
  var parseValue = String(value).trim();
  var date = parseMicrosoftDateFormat(parseValue);
  if (date) {
    return date;
  }
  var info = localeInfo(locale);
  var parseFormats = formats || defaultFormats(info.calendar);
  parseFormats = Array.isArray(parseFormats) ? parseFormats : [parseFormats];
  var length = parseFormats.length;
  for (var idx = 0; idx < length; idx++) {
    date = parseExact(parseValue, parseFormats[idx], info);
    if (date) {
      return date;
    }
  }
  return date;
}

// node_modules/@progress/kendo-intl/dist/es/dates/split-date-format.js
var NAME_TYPES = {
  month: {
    type: "months",
    minLength: 3,
    standAlone: "L"
  },
  quarter: {
    type: "quarters",
    minLength: 3,
    standAlone: "q"
  },
  weekday: {
    type: "days",
    minLength: {
      E: 0,
      c: 3,
      e: 3
    },
    standAlone: "c"
  },
  dayperiod: {
    type: "dayPeriods",
    minLength: 0
  },
  era: {
    type: "eras",
    minLength: 0
  }
};
var LITERAL = "literal";
function addLiteral(parts, value) {
  var lastPart = parts[parts.length - 1];
  if (lastPart && lastPart.type === LITERAL) {
    lastPart.pattern += value;
  } else {
    parts.push({
      type: LITERAL,
      pattern: value
    });
  }
}
function isHour12(pattern) {
  return pattern === "h" || pattern === "K";
}
function splitDateFormat(format2, locale) {
  if (locale === void 0) locale = DEFAULT_LOCALE;
  var info = localeInfo(locale);
  var pattern = datePattern(format2, info);
  var parts = [];
  var lastIndex = dateFormatRegExp.lastIndex = 0;
  var match = dateFormatRegExp.exec(pattern);
  while (match) {
    var value = match[0];
    if (lastIndex < match.index) {
      addLiteral(parts, pattern.substring(lastIndex, match.index));
    }
    if (value.startsWith('"') || value.startsWith("'")) {
      addLiteral(parts, value);
    } else {
      var specifier = value[0];
      var type = DATE_FIELD_MAP[specifier];
      var part = {
        type,
        pattern: value
      };
      if (type === "hour") {
        part.hour12 = isHour12(value);
      }
      var names = NAME_TYPES[type];
      if (names) {
        var minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];
        var patternLength = value.length;
        if (patternLength >= minLength) {
          part.names = {
            type: names.type,
            nameType: dateNameType(patternLength),
            standAlone: names.standAlone === specifier
          };
        }
      }
      parts.push(part);
    }
    lastIndex = dateFormatRegExp.lastIndex;
    match = dateFormatRegExp.exec(pattern);
  }
  if (lastIndex < pattern.length) {
    addLiteral(parts, pattern.substring(lastIndex));
  }
  return parts;
}

// node_modules/@progress/kendo-intl/dist/es/format.js
var formatRegExp3 = /\{(\d+)(:[^}]+)?\}/g;
function toString(value, format2, locale) {
  if (format2) {
    if (isDate(value)) {
      return formatDate(value, format2, locale);
    } else if (isNumber(value)) {
      return formatNumber(value, format2, locale);
    }
  }
  return value !== void 0 && value !== null ? value : EMPTY;
}
function format(format2, values, locale) {
  return format2.replace(formatRegExp3, function(match, index, placeholderFormat) {
    var value = values[parseInt(index, 10)];
    return toString(value, placeholderFormat ? placeholderFormat.substring(1) : EMPTY, locale);
  });
}

// node_modules/@progress/kendo-react-intl/Intl/IntlService.mjs
var o3 = class {
  /**
   * Creates a new instance of the internationalization service.
   *
   * @param locale - The locale that will be used by the internationalization methods.
   */
  constructor(r10) {
    if (this.locale = r10, r10 === "" && true)
      throw "Locale should not be empty string";
  }
  /**
   * Formats a string with placeholders such as `Total amount {0:c}`.
   *
   * @param format - The format string.
   * @param values - One or more values to output in the format string placeholders.
   * @return - The formatted string.
   */
  format(r10, ...t20) {
    return t20.length === 1 && Array.isArray(t20[0]) ? format(r10, t20[0], this.locale) : format(r10, t20, this.locale);
  }
  /**
   * Converts a `Date` object to a string based on the specified format. If no format is provided, the default short date format is used.
   *
   * @param value - The date which will be formatted.
   * @param format - The format string or options.
   * @return - The formatted date.
   */
  formatDate(r10, t20) {
    return formatDate(r10, t20, this.locale);
  }
  /**
   * Converts an object to a string based on the specified format.
   *
   * @param value - The value which will be formatted.
   * @param format - The format to use.
   * @return - The formatted object.
   */
  toString(r10, t20) {
    return toString(r10, t20, this.locale);
  }
  /**
   * Converts a string to a `Number`.
   *
   * @param value - The string which will be parsed.
   * @param format - The format string or options.
   * @return - The parsed number.
   */
  parseNumber(r10, t20) {
    return parseNumber(r10, this.locale, t20);
  }
  /**
   * Converts a string to a `Date` object based on the specified format.
   *
   * @param value - The string which will be converted.
   * @param format - The format strings or options.
   * @return - The parsed date.
   */
  parseDate(r10, t20) {
    return parseDate(r10, t20, this.locale);
  }
  /**
   * Converts a `Number` to a string based on the specified format.
   *
   * @param value - The number which will be formatted.
   * @param format - The format string or options.
   * @return - The formatted number.
   */
  formatNumber(r10, t20) {
    return formatNumber(r10, t20, this.locale);
  }
  /**
   * Returns a localized date field name based on specific `dateFieldName` options.
   *
   * @param options - The detailed configuration for the desired date field name.
   * @returns - The localized date field name from the current locale based on the option.
   */
  dateFieldName(r10) {
    return dateFieldName(r10, this.locale);
  }
  /**
   * Returns the day names from the current locale based on the option.
   *
   * @param options - The detailed configuration for the desired date format.
   * @return - The day names from the current locale based on the option.
   */
  dateFormatNames(r10) {
    return dateFormatNames(this.locale, r10);
  }
  /**
   * Splits the date format into objects which contain information about each part of the pattern.
   *
   * @param format - The format string or options.
   * @returns - The date format parts.
   */
  splitDateFormat(r10) {
    return splitDateFormat(r10, this.locale);
  }
  /**
   * Returns the number symbols from the current locale.
   *
   * @return - The number symbols from the current locale.
   */
  numberSymbols() {
    return numberSymbols(this.locale);
  }
  /**
   * Returns the first day index, starting from Sunday.
   *
   * @return - The index of the first day of the week (0 == Sunday).
   */
  firstDay() {
    return firstDay(this.locale);
  }
  /**
   * @hidden
   */
  localeInfo() {
    return localeInfo(this.locale);
  }
  /**
   * @hidden
   */
  localeCurrency() {
    return localeCurrency(this.locale);
  }
};

// node_modules/@progress/kendo-react-intl/Localization/messages.mjs
var e9 = /* @__PURE__ */ Object.create({});

// node_modules/@progress/kendo-react-intl/Localization/LocalizationService.mjs
var s9 = class {
  constructor(t20) {
    if (this.language = t20, t20 === "" && true)
      throw "Language should not be an empty string";
  }
  /* eslint-disable max-len */
  /**
   * Provides a string based on a key for the current language. When no string for the current language is available under this key, the `defaultValue` is returned.
   *
   * @param key - The key which identifies the string for the current language.
   * @param defaultValue - The default value which will be returned when no string
   * for the current language is available under the key.
   * @return - The string for the current language.
   */
  // tslint:enable:max-line-length
  toLanguageString(t20, e18) {
    return this.language && e9[this.language] && e9[this.language].hasOwnProperty(t20) ? e9[this.language][t20] : e18;
  }
};

// node_modules/@progress/kendo-react-intl/globalization/GlobalizationContext.mjs
var r6 = o4.createContext({
  intl: new o3("en"),
  localization: new s9()
});

// node_modules/@progress/kendo-react-intl/intlUtils.mjs
function l3(t20) {
  if (!t20 && true)
    throw `Passed component - ${t20} is invalid.`;
  const o14 = t20.context;
  return o14 && o14.intl ? o14.intl : new o3("en");
}
function s10(t20) {
  if (!t20 && true)
    throw `Passed component - ${t20} is invalid.`;
  const o14 = t20.context;
  return o14 && o14.localization ? o14.localization : new s9();
}
function p5(t20) {
  t20.contextType = r6;
}
function v3(t20) {
  t20.contextType = r6;
}

// node_modules/@progress/kendo-react-intl/server/ServerGlobalization.mjs
var import_react = __toESM(require_react(), 1);

// node_modules/@progress/kendo-react-intl/Intl/IntlProvider.mjs
var e10 = __toESM(require_react(), 1);
var import_prop_types8 = __toESM(require_prop_types(), 1);
var t7 = class t8 extends e10.Component {
  /**
   * Returns an internationalization service. The method is suitable for overriding when you implement custom internationalization behavior.
   */
  getIntlService() {
    return new o3(this.props.locale);
  }
  /**
   * @hidden
   */
  render() {
    return e10.createElement(r6.Consumer, null, (n14) => e10.createElement(r6.Provider, { value: { ...n14, intl: this.getIntlService() } }, this.props.children));
  }
};
t7.propTypes = {
  locale: import_prop_types8.default.string
};
var o5 = t7;

// node_modules/@progress/kendo-react-intl/Intl/load.mjs
var o6 = {};
var l4 = (...i10) => {
  i10.forEach((e18) => {
    const n14 = Object.keys(e18)[0];
    if (["main", "supplemental"].includes(n14)) {
      const s15 = Object.keys(e18[n14])[0];
      s15 in o6 ? o6[s15].includes(e18) || (o6[s15] = [...o6[s15], e18]) : o6[s15] = [e18];
    }
  }), load(...i10);
};

// node_modules/@progress/kendo-react-intl/Intl/IntlDataProvider.mjs
var n6 = (o14) => {
  const { locale: r10, data: t20, children: a12 } = o14;
  return r10 && l4(t20), a12;
};

// node_modules/@progress/kendo-react-intl/Localization/LocalizationProvider.mjs
var e11 = __toESM(require_react(), 1);
var import_prop_types9 = __toESM(require_prop_types(), 1);
var t9 = class t10 extends e11.Component {
  /**
   * Returns a localization service. The method is suitable for overriding when you implement custom localization behavior.
   */
  getLocalizationService() {
    return new s9(this.props.language);
  }
  /**
   * @hidden
   */
  render() {
    return e11.createElement(r6.Consumer, null, (i10) => e11.createElement(r6.Provider, { value: { ...i10, localization: this.getLocalizationService() } }, this.props.children));
  }
};
t9.propTypes = {
  language: import_prop_types9.default.string
};
var o7 = t9;

// node_modules/@progress/kendo-react-intl/Localization/loadMessages.mjs
var p6 = /* @__PURE__ */ Object.create({});
var r7 = (s15, o14, t20) => {
  for (const e18 in s15)
    if (s15.hasOwnProperty(e18)) {
      const n14 = [...t20];
      if (n14.push(e18), typeof s15[e18] != "string")
        r7(s15[e18], o14, n14);
      else {
        const f2 = s15[e18];
        Object.defineProperty(o14, n14.join("."), { value: f2, enumerable: true });
      }
    }
};
function a5(s15, o14) {
  const t20 = e9[o14] = e9[o14] || {};
  p6.lang = o14, r7(s15, t20, []);
}

// node_modules/@progress/kendo-react-intl/Localization/LocalizationDataProvider.mjs
var n8 = (o14) => {
  const { data: r10, language: a12, children: t20 } = o14;
  return a12 && a5(r10, a12), t20;
};

// node_modules/@progress/kendo-react-intl/server/ServerGlobalization.mjs
var G4 = (l6) => {
  var r10, a12, n14;
  const { language: t20 = "", locale: e18 = "en", children: c3 } = l6, s15 = localeInfo(e18), f2 = (r10 = e9[t20]) != null ? r10 : [], p9 = ((a12 = o6.version) != null ? a12 : []).concat((n14 = o6[s15.name]) != null ? n14 : []), [d2] = s2(e18 ? o5 : import_react.default.Fragment), [v4] = s2(t20 ? o7 : import_react.default.Fragment);
  return import_react.default.createElement(n8, { data: f2, language: t20 }, import_react.default.createElement(n6, { data: p9, locale: e18 }, import_react.default.createElement(v4, { language: t20 }, import_react.default.createElement(d2, { locale: e18 }, c3))));
};

// node_modules/@progress/kendo-react-intl/hooks/useInternationalization.mjs
var t11 = __toESM(require_react(), 1);
var i7 = () => t11.useContext(r6).intl;

// node_modules/@progress/kendo-react-intl/hooks/useLocalization.mjs
var o9 = __toESM(require_react(), 1);
var i8 = () => o9.useContext(r6).localization;

// node_modules/@progress/kendo-react-buttons/toolbar/messages/index.mjs
var t12 = "prevArrow.title";
var o10 = "nextArrow.title";
var e12 = "moreButtonTitle.title";
var r8 = {
  [t12]: "Previous scroll button",
  [o10]: "Next scroll button",
  [e12]: "More button"
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollButton.mjs
var I2 = (s15) => {
  const n14 = i8(), { disabled: r10, type: t20, scrollContentRef: o14, buttonScrollSpeed: e18, prevButton: m5, nextButton: u5 } = s15, d2 = (S) => {
    o14 && o14.current && e18 && o14.current.scrollBy({
      left: t20 === "next" ? e18 : -e18,
      behavior: "smooth"
    });
  }, p9 = t20 === "prev" ? m5 || "span" : u5 || "span";
  return (
    // Using span instead of real Button component is intentional.
    // Ref: https://progresssoftware.atlassian.net/wiki/spaces/DE/pages/edit-v2/544997922#Hidden-interactive-elements
    a6.createElement(
      p9,
      {
        className: n2(
          "k-button",
          "k-button-md",
          "k-button-solid",
          "k-button-solid-base",
          "k-rounded-md",
          "k-icon-button",
          `k-toolbar-${t20}`,
          {
            "k-disabled": r10
          }
        ),
        title: `${t20 === "prev" ? n14.toLanguageString(t12, r8[t12]) : n14.toLanguageString(o10, r8[o10])}`,
        "aria-hidden": true,
        tabIndex: r10 ? -1 : void 0,
        onClick: d2
      },
      a6.createElement(M, { icon: t20 === "prev" ? caretAltLeftIcon : caretAltRightIcon, className: "k-button-icon" })
    )
  );
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollable.mjs
var g5 = (i10) => {
  const {
    scrollButtons: c3,
    scrollButtonsPosition: l6,
    isOverflowing: p9,
    scrollContentRef: m5,
    buttonScrollSpeed: u5,
    dir: e18,
    isScrollStartPosition: a12,
    isScrollEndPosition: s15,
    prevButton: b3,
    nextButton: E2,
    children: S
  } = i10, r10 = (v4, x4) => t13.createElement(
    I2,
    {
      type: v4,
      disabled: x4,
      scrollContentRef: m5,
      buttonScrollSpeed: u5,
      prevButton: b3,
      nextButton: E2
    }
  ), o14 = c3 === "visible" || c3 === "auto" && p9;
  return t13.createElement(t13.Fragment, null, o14 && l6 === "split" && t13.createElement(t13.Fragment, null, r10(e18 !== "rtl" ? "prev" : "next", a12), t13.createElement(t6, { className: "k-toolbar-button-separator" })), o14 && l6 === "start" && t13.createElement(t13.Fragment, null, r10(e18 !== "rtl" ? "prev" : "next", a12), r10(e18 !== "rtl" ? "next" : "prev", s15), t13.createElement(t6, { className: "k-toolbar-button-separator" })), t13.createElement("span", { className: "k-toolbar-items k-toolbar-items-scroll", ref: m5 }, S), o14 && l6 === "split" && t13.createElement(t13.Fragment, null, t13.createElement(t6, { className: "k-toolbar-button-separator" }), r10(e18 !== "rtl" ? "next" : "prev", s15)), o14 && l6 === "end" && t13.createElement(t13.Fragment, null, t13.createElement(t6, { className: "k-toolbar-button-separator" }), r10(e18 !== "rtl" ? "prev" : "next", a12), r10(e18 !== "rtl" ? "next" : "prev", s15)));
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarOverflowSection.mjs
var e13 = __toESM(require_react(), 1);
var U = (h4) => {
  var m5;
  const { toolbarRef: o14, children: b3, fillMode: R, size: g6 } = h4, [u5, k2] = e13.useState(false), c3 = e13.useRef(
    e13.Children.toArray(b3).filter((t20) => e13.isValidElement(t20)).map((t20, r10) => e13.cloneElement(t20, { key: t20.key || r10 }))
  ), l6 = e13.useRef([]), a12 = e13.useRef(0), T2 = e13.useRef(null), w = e13.useRef(null), v4 = i8(), [N2, E2] = e13.useReducer((t20) => t20 + 1, 0), f2 = () => {
    if (!o14.current)
      return;
    let t20 = 0;
    const r10 = o14.current.clientWidth, i10 = parseInt(window.getComputedStyle(o14.current).gap || "0", 10), C = Array.from(o14.current.children).reduce((n14, s15, P2) => (n14 += Math.ceil(s15.clientWidth), n14), 0), p9 = Array.from(o14.current.children).length, y3 = i10 * 2;
    if (t20 = C + p9 * i10 + y3, t20 > r10) {
      const n14 = [...c3.current], s15 = n14.pop();
      a12.current = r10, c3.current = n14, s15 && (l6.current = [s15, ...l6.current]);
    } else if (r10 > a12.current + i10 * p9) {
      const n14 = [...l6.current], s15 = n14.shift();
      l6.current = n14, s15 && (c3.current = [...c3.current, s15]), a12.current = r10;
    }
    E2();
  };
  e13.useEffect(() => {
    f2();
    const t20 = new ResizeObserver(f2), r10 = o14.current;
    return r10 && t20.observe(r10), () => {
      r10 && t20.unobserve(r10);
    };
  }, []);
  const z2 = () => {
    k2(!u5);
  };
  return e13.createElement(e13.Fragment, null, c3.current.length > 0 && c3.current, l6.current.length > 0 && e13.createElement(e13.Fragment, null, e13.createElement(t6, { _ref: w, className: "k-toolbar-button-separator" }), e13.createElement(
    M2,
    {
      ref: T2,
      className: "k-toolbar-overflow-button",
      fillMode: "flat",
      svgIcon: moreHorizontalIcon,
      title: v4.toLanguageString(e12, r8[e12]),
      onClick: z2
    }
  ), e13.createElement(
    te,
    {
      anchor: o14.current,
      show: u5,
      popupClass: "k-toolbar-popup",
      style: { width: (m5 = o14.current) == null ? void 0 : m5.offsetWidth }
    },
    e13.createElement(
      "span",
      {
        className: `k-toolbar-items-list k-toolbar-items-list-${a4.sizeMap[g6]} k-toolbar-items-list-${R}`
      },
      l6.current.length > 0 && l6.current
    )
  )));
};

// node_modules/@progress/kendo-react-buttons/toolbar/Toolbar.mjs
var N = t14.forwardRef((i10, A) => {
  const {
    children: k2,
    className: K,
    id: j,
    ariaLabel: q,
    keyboardNavigation: w,
    role: x4,
    onResize: E2,
    style: D,
    tabIndex: B = a7.tabIndex,
    size: b3 = a7.size,
    fillMode: I3 = a7.fillMode,
    overflow: c3,
    scrollButtons: d2 = a7.scrollButtons,
    scrollButtonsPosition: $ = a7.scrollButtonsPosition,
    buttonScrollSpeed: F2 = a7.buttonScrollSpeed,
    prevButton: G5,
    nextButton: J2
  } = i10, C = t14.useRef(false), r10 = t14.useRef(null), m5 = t14.useRef(null), h4 = t14.useRef(0), S = t14.useRef(0), s15 = t14.useRef([]), R = t14.useRef({ element: null, props: i10 }), [Q3, U2] = t14.useState(false), [O, W] = t14.useState(true), [z2, P2] = t14.useState(false), y3 = u(r10, i10.dir), g6 = t14.useMemo(() => i10.buttons || o2, [i10.buttons]), V2 = t14.useMemo(() => g6.map((e18) => e18 + ":focus").join(","), [g6]), M3 = () => {
    const e18 = r10.current && r10.current.querySelector(V2);
    return Math.max(
      0,
      s15.current.findIndex((l6) => l6 === e18)
    );
  };
  t14.useImperativeHandle(
    R,
    () => ({
      element: r10.current,
      props: i10
    })
  ), t14.useImperativeHandle(A, () => R.current), t14.useEffect(() => (window.addEventListener("resize", L), r10.current && (S.current = r10.current.offsetWidth, h4.current = r10.current.offsetHeight, w !== false && (s15.current = Array.from(
    r10.current.querySelectorAll(g6.join(","))
  ), H(0))), () => {
    window.removeEventListener("resize", L), s15.current.length = 0;
  }), []), t14.useEffect(() => {
    if (C.current) {
      if (!r10.current || w === false)
        return;
      s15.current = Array.from(
        r10.current.querySelectorAll(g6.join(","))
      ), H(M3()), T2();
    } else
      C.current = true;
  });
  const H = (e18) => {
    s15.current.forEach((l6, o14) => {
      l6.tabIndex = o14 === e18 ? B : -1;
    });
  }, X = (e18) => {
    const l6 = e18.keyCode === e2.left || e18.keyCode === e2.right || e18.keyCode === e2.home || e18.keyCode === e2.end, o14 = M3();
    !l6 || e18.defaultPrevented || s15.current.findIndex((f2) => f2 === e18.target) === -1 || (e18.keyCode === e2.left ? v4(
      o14,
      o14 === 0 ? s15.current.length - 1 : o14 - 1
    ) : v4(
      o14,
      o14 === s15.current.length - 1 ? 0 : o14 + 1
    ), e18.keyCode === e2.home && v4(o14, 0), e18.keyCode === e2.end && v4(o14, s15.current.length - 1));
  }, v4 = (e18, l6) => {
    const o14 = s15.current[l6];
    if (o14) {
      o14.tabIndex = B, o14.focus();
      const f2 = s15.current[e18];
      f2 && (f2.tabIndex = -1);
    }
  }, L = (e18) => {
    if (!r10.current)
      return;
    const l6 = r10.current.offsetWidth, o14 = r10.current.offsetHeight;
    if (S.current !== l6 || h4.current !== o14) {
      S.current = l6, h4.current = o14;
      const f2 = { offsetWidth: S.current, offsetHeight: h4.current };
      E2 && E2.call(void 0, { target: R.current, ...f2, nativeEvent: e18 });
    }
    T2();
  }, T2 = t14.useCallback(() => {
    const e18 = m5.current;
    e18 && U2(
      e18.scrollWidth > e18.clientWidth || e18.scrollHeight > e18.clientHeight
    );
  }, []), p9 = t14.useCallback(() => {
    const e18 = m5.current;
    if (e18) {
      const l6 = e18.scrollLeft === 0, o14 = y3 !== "rtl" ? e18.scrollLeft + e18.clientWidth === e18.scrollWidth : e18.clientWidth - e18.scrollLeft === e18.scrollWidth;
      l6 && W(true), o14 && P2(true), !l6 && !o14 && (W(false), P2(false));
    }
  }, [y3]);
  return t14.useEffect(() => {
    const e18 = m5.current;
    if (e18)
      return e18.addEventListener("scroll", p9), () => {
        e18.removeEventListener("scroll", p9);
      };
  }, [p9]), t14.createElement(
    "div",
    {
      id: j,
      "aria-label": q,
      className: n2(
        "k-toolbar",
        {
          [`k-toolbar-${a4.sizeMap[b3] || b3}`]: b3,
          [`k-toolbar-${I3}`]: I3,
          "k-toolbar-scrollable": c3 === "scroll",
          "k-toolbar-scrollable-overlay": c3 === "scroll" && (d2 === "hidden" || d2 === void 0),
          "k-toolbar-scrollable-start": c3 === "scroll" && d2 === "hidden" && O,
          "k-toolbar-scrollable-end": c3 === "scroll" && d2 === "hidden" && z2,
          "k-toolbar-section": i10.overflow && c3 === "section"
        },
        K
      ),
      style: D,
      role: x4 !== void 0 ? x4 || void 0 : "toolbar",
      dir: y3,
      ref: r10,
      onKeyDown: w !== false ? X : void 0
    },
    c3 === "scroll" && t14.createElement(
      g5,
      {
        scrollButtons: d2,
        scrollButtonsPosition: $,
        prevButton: G5,
        nextButton: J2,
        isOverflowing: Q3,
        scrollContentRef: m5,
        buttonScrollSpeed: F2,
        dir: y3,
        isScrollStartPosition: O,
        isScrollEndPosition: z2,
        children: k2
      }
    ),
    c3 === "section" && t14.createElement(U, { toolbarRef: r10, fillMode: I3, size: b3 }, k2),
    (c3 === "none" || c3 === void 0) && k2
  );
});
var a7 = {
  tabIndex: 0,
  size: "medium",
  fillMode: "solid",
  scrollButtons: "auto",
  scrollButtonsPosition: "split",
  buttonScrollSpeed: 100
};
N.displayName = "KendoReactToolbar";
N.propTypes = {
  tabIndex: import_prop_types10.default.number,
  dir: import_prop_types10.default.string,
  keyboardNavigation: import_prop_types10.default.bool,
  style: import_prop_types10.default.object,
  className: import_prop_types10.default.string,
  role: import_prop_types10.default.string,
  onResize: import_prop_types10.default.func,
  buttons: import_prop_types10.default.arrayOf(import_prop_types10.default.string.isRequired),
  size: import_prop_types10.default.oneOf([null, "small", "medium", "large"]),
  fillMode: import_prop_types10.default.oneOf([null, "solid", "flat", "outline"]),
  overflow: import_prop_types10.default.oneOf(["none", "section", "scroll"]),
  scrollButtons: import_prop_types10.default.oneOf(["hidden", "visible", "auto"]),
  scrollButtonsPosition: import_prop_types10.default.oneOf(["start", "end", "split"]),
  buttonScrollSpeed: import_prop_types10.default.number
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarItem.mjs
var e14 = __toESM(require_react(), 1);
var import_prop_types11 = __toESM(require_prop_types(), 1);
var t15 = e14.forwardRef((a12, o14) => {
  const { id: s15, className: m5, style: l6, children: n14 } = a12, r10 = e14.useRef(null);
  return e14.useImperativeHandle(
    o14,
    () => ({
      element: r10.current
    })
  ), e14.createElement("div", { id: s15, className: n2("k-toolbar-item", m5), style: l6, ref: r10 }, n14);
});
t15.displayName = "KendoReactToolbarItem";
t15.propTypes = {
  className: import_prop_types11.default.string
};

// node_modules/@progress/kendo-react-buttons/toolbar/tools/ToolbarSpacer.mjs
var e15 = __toESM(require_react(), 1);
var import_prop_types12 = __toESM(require_prop_types(), 1);
var s11 = e15.forwardRef(
  (r10, t20) => {
    const a12 = e15.useRef(null), m5 = e15.useRef(null);
    e15.useImperativeHandle(m5, () => ({ element: a12.current })), e15.useImperativeHandle(t20, () => ({ element: a12.current }));
    const o14 = e15.useMemo(() => n2("k-spacer", r10.className), [r10.className]);
    return e15.createElement("span", { ref: a12, className: o14 });
  }
);
s11.displayName = "KendoReactToolbarSpacer";
s11.propTypes = {
  className: import_prop_types12.default.string
};

// node_modules/@progress/kendo-react-buttons/Chip/Chip.mjs
var a10 = __toESM(require_react(), 1);
var import_prop_types13 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/Chip/chip-list-contexts.mjs
var import_react2 = __toESM(require_react(), 1);
var n10 = import_react2.default.createContext([
  null,
  (e18) => {
  }
]);
var a8 = import_react2.default.createContext([
  null,
  (e18) => {
  }
]);
var s12 = import_react2.default.createContext([
  null,
  (e18) => {
  }
]);

// node_modules/@progress/kendo-react-buttons/Chip/focus-reducer.mjs
var u4 = ((e18) => (e18.next = "next", e18.prev = "prev", e18.current = "current", e18.reset = "reset", e18))(u4 || {});
var s13 = (e18, r10) => {
  const t20 = r10.items.findIndex((n14) => n14 === e18);
  switch (r10.type) {
    case "next":
      return t20 === r10.items.length - 1 ? e18 : r10.items[t20 + 1];
    case "prev":
      return t20 === 0 ? e18 : r10.items[t20 - 1];
    case "current":
      return r10.payload;
    case "reset":
      return null;
    default:
      return e18;
  }
};

// node_modules/@progress/kendo-react-buttons/Chip/data-reducer.mjs
var a9 = ((e18) => (e18.remove = "remove", e18.add = "add", e18.reorder = "reorder", e18))(a9 || {});
var o11 = (e18, r10) => {
  switch (r10.type) {
    case "add":
      break;
    case "remove":
      return e18.filter((d2) => d2[r10.valueField] !== r10.payload);
    case "reorder":
      break;
    default:
      return e18;
  }
};

// node_modules/@progress/kendo-react-buttons/Chip/selection-reducer.mjs
var n11 = ((r10) => (r10.toggle = "toggle", r10.remove = "remove", r10))(n11 || {});
var o12 = (r10, e18) => {
  switch (e18.selection) {
    case "single":
      switch (e18.type) {
        case "toggle": {
          if (!Array.isArray(r10) || r10 === null)
            return e18.payload === r10 ? null : e18.payload;
          throw new Error("State cannot be an array in single selection");
        }
        case "remove":
          return e18.payload === r10 ? null : r10;
        default:
          return r10;
      }
    case "multiple":
      switch (e18.type) {
        case "toggle": {
          if (Array.isArray(r10))
            return r10.some((l6) => l6 === e18.payload) ? r10.filter((l6) => l6 !== e18.payload) : [...r10, e18.payload];
          if (r10 === null)
            return [e18.payload];
          throw new Error("State cannot be non-array in multiple selection");
        }
        case "remove":
          return Array.isArray(r10) ? r10.some((l6) => l6 === e18.payload) ? r10.filter((l6) => l6 !== e18.payload) : [...r10, e18.payload] : r10;
        default:
          return r10;
      }
    case "none":
      return null;
    default:
      return r10;
  }
};

// node_modules/@progress/kendo-react-buttons/Chip/Chip.mjs
var z = a10.forwardRef((e18, A) => {
  const c3 = a10.useRef(null), d2 = a10.useRef(null), {
    disabled: y3 = n12.disabled,
    fillMode: r10 = n12.fillMode,
    themeColor: N2 = n12.themeColor,
    size: f2 = n12.size,
    rounded: h4 = n12.rounded,
    dir: B = n12.dir,
    removeIcon: D = n12.removeIcon,
    removeSvgIcon: F2 = n12.removeSvgIcon,
    removable: s15 = n12.removable
  } = e18, R = u(d2, B);
  a10.useImperativeHandle(c3, () => ({
    element: d2.current,
    props: e18
  })), a10.useImperativeHandle(A, () => c3.current);
  const [m5, i10] = a10.useContext(n10), [S, o14] = a10.useContext(a8), [, T2] = a10.useContext(s12), k2 = a10.useMemo(() => e18.selected || (Array.isArray(m5) ? m5.some((t20) => t20 === e18.value) : m5 === e18.value), [e18.selected, e18.value, m5]), b3 = a10.useMemo(() => S === e18.value, [e18.value, S]);
  a10.useEffect(() => {
    b3 && d2.current && d2.current.focus();
  }, [b3]);
  const K = a10.useCallback(
    (t20) => {
      i10({ type: n11.toggle, payload: e18.value, event: t20 });
    },
    [i10, e18.value]
  ), g6 = a10.useCallback(
    (t20) => {
      s15 && (T2({ type: a9.remove, payload: e18.value, event: t20 }), o14({ type: u4.reset, payload: e18.value, event: t20 }), i10({ type: n11.remove, payload: e18.value, event: t20 }), e18.onRemove && e18.onRemove.call(void 0, {
        target: c3.current,
        syntheticEvent: t20
      }));
    },
    [e18.onRemove, e18.value, s15, T2, o14, i10]
  ), $ = a10.useCallback(
    (t20) => {
      switch (t20.keyCode) {
        case e2.left:
          o14({ type: u4.prev, payload: e18.value, event: t20 });
          break;
        case e2.right:
          o14({ type: u4.next, payload: e18.value, event: t20 });
          break;
        case e2.enter:
          i10({ type: n11.toggle, payload: e18.value, event: t20 });
          break;
        case e2.delete:
          g6(t20);
          break;
      }
      e18.onKeyDown && e18.onKeyDown.call(void 0, {
        target: c3.current,
        syntheticEvent: t20
      });
    },
    [e18.onKeyDown, e18.value, o14, i10, g6]
  ), L = a10.useCallback(
    (t20) => {
      o14({ payload: e18.value, type: u4.current, event: t20 }), e18.onFocus && e18.onFocus.call(void 0, {
        target: c3.current,
        syntheticEvent: t20
      });
    },
    [e18.onFocus, e18.value, o14]
  ), P2 = a10.useCallback(
    (t20) => {
      e18.onBlur && e18.onBlur.call(void 0, {
        target: c3.current,
        syntheticEvent: t20
      });
    },
    [e18.onBlur]
  ), _ = h2(e18, c3, { onClick: K });
  return a10.createElement(
    "div",
    {
      ..._,
      role: e18.role || "button",
      id: e18.value,
      style: e18.style,
      ref: d2,
      dir: R,
      tabIndex: e3(e18.tabIndex, y3, void 0),
      className: n2(
        "k-chip",
        {
          "k-rtl": R === "rtl",
          "k-disabled": y3,
          "k-selected": k2,
          "k-focus": b3,
          [`k-chip-${a4.sizeMap[f2] || f2}`]: f2,
          [`k-rounded-${a4.roundedMap[h4] || h4}`]: h4,
          [`k-chip-${r10}`]: r10,
          [`k-chip-${r10}-${N2}`]: !!(r10 && N2)
        },
        e18.className
      ),
      "aria-pressed": e18.role ? void 0 : k2,
      "aria-disabled": y3,
      "aria-describedby": e18.ariaDescribedBy,
      "aria-keyshortcuts": s15 ? "Enter Delete" : void 0,
      onFocus: L,
      onBlur: P2,
      onKeyDown: $
    },
    k2 && (e18.selectedIcon || e18.selectedSvgIcon) && a10.createElement(
      v2,
      {
        className: "k-chip-icon",
        name: e18.selectedIcon ? i(e18.selectedIcon) : void 0,
        icon: e18.selectedSvgIcon,
        size: "small"
      }
    ),
    (e18.icon || e18.svgIcon) && a10.createElement(
      v2,
      {
        className: "k-chip-icon",
        name: e18.icon ? i(e18.icon) : void 0,
        icon: e18.svgIcon,
        size: "small"
      }
    ),
    e18.avatar && a10.createElement(
      "div",
      {
        className: `k-chip-avatar k-avatar k-rounded-${e18.avatar.rounded} k-avatar-md k-avatar-solid k-avatar-solid-primary`,
        style: e18.avatar.style
      },
      a10.createElement("span", { className: "k-avatar-image" }, a10.createElement("img", { src: e18.avatar.image, alt: e18.avatar.imageAlt }))
    ),
    a10.createElement("span", { className: "k-chip-content" }, e18.children !== void 0 ? e18.children : e18.text && a10.createElement("span", { "aria-label": e18.ariaLabel || e18.text, className: "k-chip-label" }, e18.text)),
    s15 && a10.createElement("span", { className: "k-chip-actions" }, a10.createElement("span", { className: n2("k-chip-action", "k-chip-remove-action"), onClick: g6 }, a10.createElement(
      v2,
      {
        name: D ? i(D) : void 0,
        icon: F2 || xCircleIcon,
        size: "small"
      }
    )))
  );
});
var Q2 = {
  id: import_prop_types13.default.string,
  text: import_prop_types13.default.string,
  value: import_prop_types13.default.any,
  dir: import_prop_types13.default.oneOf(["ltr", "rtl"]),
  removable: import_prop_types13.default.bool,
  removeIcon: import_prop_types13.default.string,
  removeIconSvg: r,
  disabled: import_prop_types13.default.bool,
  icon: import_prop_types13.default.string,
  svgIcon: r,
  selectedIcon: import_prop_types13.default.string,
  selectedIconSvg: r,
  onRemove: import_prop_types13.default.func,
  dataItem: import_prop_types13.default.any,
  selected: import_prop_types13.default.bool,
  ariaDescribedBy: import_prop_types13.default.string,
  size: import_prop_types13.default.oneOf([null, "small", "medium", "large"]),
  rounded: import_prop_types13.default.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: import_prop_types13.default.oneOf([null, "outline", "solid"]),
  // eslint-disable-next-line max-len
  themeColor: import_prop_types13.default.oneOf([null, "base", "info", "success", "warning", "error"])
};
var n12 = {
  disabled: false,
  removable: false,
  removeIcon: "k-i-x-circle",
  removeSvgIcon: xCircleIcon,
  dir: "ltr",
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
z.displayName = "KendoReactChip";
z.propTypes = Q2;

// node_modules/@progress/kendo-react-buttons/Chip/ChipList.mjs
var t17 = __toESM(require_react(), 1);
var import_prop_types14 = __toESM(require_prop_types(), 1);
var ie = (a12, i10, s15) => {
  i10.selection === "multiple" ? Array.isArray(a12) || (a12 = a12 ? [a12] : null) : i10.selection === "single" && Array.isArray(a12) && (a12 = a12 ? a12.join("") : null);
  const [l6, o14] = t17.useState(a12);
  return [l6, (c3) => {
    const d2 = o12(i10.state || l6, { ...c3, ...i10 });
    s15 && s15(d2, c3.event), i10.selection !== "none" && o14(d2);
  }];
};
var le = (a12) => {
  const [i10, s15] = t17.useState(null);
  return [i10, (o14) => {
    const m5 = s13(o14.payload, { ...o14, ...a12 });
    s15(m5);
  }];
};
var re = (a12, i10, s15) => {
  const [l6, o14] = t17.useState(a12);
  return [l6, (c3) => {
    const d2 = o11(i10.state || l6, { ...c3, ...i10 });
    s15 && s15(d2, c3.event), o14(d2);
  }];
};
var E = t17.forwardRef((a12, i10) => {
  const s15 = t17.useRef(null), l6 = t17.useRef(null), {
    id: o14,
    style: m5,
    tabIndex: c3,
    className: d2,
    ariaDescribedBy: M3,
    ariaLabelledBy: T2,
    ariaLabel: z2,
    value: h4,
    defaultData: P2 = r9.defaultData,
    chip: g6 = r9.chip,
    disabled: b3 = r9.disabled,
    size: f2 = r9.size,
    defaultValue: N2 = r9.defaultValue,
    selection: x4 = r9.selection,
    valueField: p9 = r9.valueField,
    textField: S = r9.textField,
    dir: w = r9.dir,
    onChange: y3,
    onDataChange: C
  } = a12, F2 = u(l6, w), A = t17.useMemo(() => g6 || z, [g6, z]);
  t17.useImperativeHandle(s15, () => ({
    element: l6.current,
    props: a12
  })), t17.useImperativeHandle(i10, () => s15.current);
  const B = t17.useCallback(
    (n14, u5) => {
      y3 && s15.current && y3.call(void 0, {
        value: n14,
        target: s15.current,
        syntheticEvent: u5
      });
    },
    [y3]
  ), [L, j] = ie(
    h4 || N2,
    {
      selection: x4,
      state: h4
    },
    B
  ), G5 = t17.useCallback(
    (n14, u5) => {
      C && s15.current && C.call(void 0, {
        value: n14,
        target: s15.current,
        syntheticEvent: u5
      });
    },
    [C]
  ), [I3, H] = re(
    a12.data || P2,
    {
      state: a12.data,
      valueField: p9
    },
    G5
  ), R = t17.useCallback(
    (n14, u5) => (n14.push(u5[p9]), n14),
    [p9]
  ), v4 = t17.useMemo(() => a12.data || I3, [a12.data, I3]), K = t17.useMemo(() => h4 || L, [h4, L]), $ = t17.useMemo(() => v4.reduce(R, []), [v4, R]), k2 = t17.useCallback((n14) => s(p9)(n14), [p9]), q = t17.useCallback((n14) => s(S)(n14), [S]), [J2, Q3] = le({ items: $ }), U2 = h2(a12, s15);
  return t17.createElement(n10.Provider, { value: [K, j] }, t17.createElement(a8.Provider, { value: [J2, Q3] }, t17.createElement(s12.Provider, { value: [v4, H] }, t17.createElement(
    "div",
    {
      ref: l6,
      ...U2,
      role: b3 ? void 0 : "listbox",
      id: o14,
      dir: F2,
      style: m5,
      tabIndex: e3(c3, b3, void 0),
      className: n2(
        "k-chip-list",
        {
          "k-rtl": F2 === "rtl",
          "k-disabled": b3,
          [`k-chip-list-${a4.sizeMap[f2] || f2}`]: f2
        },
        d2
      ),
      "aria-label": z2,
      "aria-labelledby": T2,
      "aria-describedby": M3,
      "aria-orientation": "horizontal",
      "aria-multiselectable": x4 === "multiple"
    },
    v4.map((n14, u5) => t17.createElement(
      A,
      {
        role: "option",
        dataItem: n14,
        size: f2,
        key: [k2(n14), u5].join("-"),
        text: q(n14),
        value: k2(n14),
        ariaLabel: n14.ariaLabel,
        svgIcon: n14.svgIcon || void 0
      }
    ))
  ))));
});
var oe = {
  id: import_prop_types14.default.string,
  className: import_prop_types14.default.string,
  tabIndex: import_prop_types14.default.number,
  data: import_prop_types14.default.any,
  defaultData: import_prop_types14.default.arrayOf(import_prop_types14.default.any),
  onDataChange: import_prop_types14.default.func,
  value: import_prop_types14.default.oneOfType([import_prop_types14.default.any, import_prop_types14.default.arrayOf(import_prop_types14.default.any)]),
  defaultValue: import_prop_types14.default.oneOfType([import_prop_types14.default.any, import_prop_types14.default.arrayOf(import_prop_types14.default.any)]),
  onChange: import_prop_types14.default.func,
  selection: import_prop_types14.default.oneOf(["single", "none", "multiple"]),
  textField: import_prop_types14.default.string,
  valueField: import_prop_types14.default.string,
  disabled: import_prop_types14.default.bool,
  dir: import_prop_types14.default.oneOf(["ltr", "rtl"]),
  ariaLabelledBy: import_prop_types14.default.string,
  ariaDescribedBy: import_prop_types14.default.string,
  size: import_prop_types14.default.oneOf([null, "small", "medium", "large"])
};
var r9 = {
  chip: z,
  size: "medium",
  disabled: false,
  defaultValue: null,
  defaultData: [],
  dir: "ltr",
  selection: "none",
  textField: "text",
  valueField: "value",
  removable: "removable"
};
E.displayName = "KendoReactChipList";
E.propTypes = oe;

// node_modules/@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButton.mjs
var t19 = __toESM(require_react(), 1);
var import_prop_types16 = __toESM(require_prop_types(), 1);

// node_modules/@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButtonItem.mjs
var e17 = __toESM(require_react(), 1);
var import_prop_types15 = __toESM(require_prop_types(), 1);
var f = e17.forwardRef((p9, I3) => {
  const {
    className: c3,
    disabled: n14,
    text: s15,
    icon: i10,
    style: g6,
    id: k2,
    focused: m5,
    tabIndex: x4,
    index: o14,
    dataItem: y3,
    item: C,
    svgIcon: r10,
    onDown: d2,
    onClick: l6,
    ...N2
  } = p9, a12 = e17.useRef(null), u5 = e17.useCallback(() => {
    a12.current && a12.current.focus();
  }, []), v4 = e17.useCallback(
    () => ({
      element: a12.current,
      focus: u5
    }),
    [u5]
  );
  e17.useImperativeHandle(I3, v4);
  const E2 = e17.useCallback(
    (P2) => {
      l6 && o14 !== void 0 && !n14 && l6(P2, o14);
    },
    [l6, o14]
  ), w = e17.useMemo(
    () => n2(
      "k-fab-item",
      {
        "k-focus": m5,
        "k-disabled": n14
      },
      c3
    ),
    [c3, n14, m5]
  ), b3 = C;
  return e17.createElement(
    "li",
    {
      ref: a12,
      id: k2,
      className: w,
      style: g6,
      role: "menuitem",
      tabIndex: e3(x4, n14),
      "aria-disabled": n14,
      "aria-label": `${s15 || ""} floatingactionbutton item`,
      onClick: E2,
      onMouseDown: d2,
      onPointerDown: d2,
      ...N2
    },
    b3 ? e17.createElement(b3, { itemIndex: o14, item: y3 }) : e17.createElement(e17.Fragment, null, s15 && e17.createElement("span", { className: "k-fab-item-text" }, s15), i10 || r10 ? e17.createElement(v2, { className: "k-fab-item-icon", name: i10, icon: r10 }) : null)
  );
});
f.propTypes = {
  className: import_prop_types15.default.string,
  style: import_prop_types15.default.object,
  children: import_prop_types15.default.any,
  disabled: import_prop_types15.default.bool,
  focused: import_prop_types15.default.bool,
  index: import_prop_types15.default.number,
  icon: import_prop_types15.default.string,
  svgIcon: r,
  text: import_prop_types15.default.string,
  tabIndex: import_prop_types15.default.number,
  customProp: import_prop_types15.default.any
};
f.displayName = "KendoFloatingActionButtonItem";

// node_modules/@progress/kendo-react-buttons/FloatingActionButton/utils.mjs
var s14 = "16px";
var i9 = (o14) => typeof o14 == "number" ? o14 + "px" : o14;
var y2 = (o14, r10) => {
  const t20 = { horizontal: r10 ? "right" : "left", vertical: "bottom" };
  return o14.horizontal === "end" && (t20.horizontal = r10 ? "left" : "right"), t20;
};
var x3 = (o14, r10) => {
  const t20 = { horizontal: r10 ? "right" : "left", vertical: "top" };
  return o14.horizontal === "end" && (t20.horizontal = r10 ? "left" : "right"), t20;
};
var b2 = (o14, r10) => {
  const t20 = r10 === "end" ? "end" : "start";
  return {
    rtl: { end: "k-text-left", start: "k-text-right" },
    ltr: { start: "k-text-left", end: "k-text-right" }
  }[o14][t20];
};
var m4 = (o14, r10, t20, c3) => {
  const n14 = r10.horizontal, e18 = r10.vertical;
  if (o14.current) {
    const l6 = t20 && t20.x !== void 0 ? i9(t20.x) : s14, d2 = t20 && t20.x !== void 0 ? `calc(50% + ${i9(t20.x)})` : "50%", h4 = t20 && t20.y !== void 0 ? i9(t20.y) : s14, u5 = t20 && t20.y !== void 0 ? `calc(50% + ${i9(t20.y)})` : "50%";
    o14.current.style.setProperty(a11(r10, c3), n14 === "center" ? d2 : l6), o14.current.style.setProperty(p7(r10), e18 === "middle" ? u5 : h4), c3 && ((e18 === "top" || e18 === "bottom") && n14 === "start" && o14.current.style.setProperty("left", "unset"), e18 === "middle" && n14 === "end" && o14.current.style.setProperty("right", "unset"), e18 === "middle" && n14 === "start" && o14.current.style.setProperty("left", "unset"));
  }
};
var a11 = (o14, r10) => {
  const { horizontal: t20 } = o14;
  return {
    end: r10 ? "left" : "right",
    center: "left",
    start: r10 ? "right" : "left"
  }[t20 || "end"];
};
var p7 = (o14) => ({
  top: "top",
  middle: "top",
  bottom: "bottom"
})[o14.vertical || "bottom"];

// node_modules/@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButton.mjs
var Te2 = 2;
var Be = 100;
var Y = t19.forwardRef(
  (M3, ee) => {
    const {
      align: u5 = h3.align,
      alignOffset: P2,
      className: $,
      disabled: d2,
      icon: N2,
      svgIcon: w,
      iconClass: K,
      id: S,
      items: n14,
      item: te2,
      text: C,
      positionMode: R = h3.positionMode,
      size: y3 = h3.size,
      style: oe2,
      rounded: I3 = h3.rounded,
      themeColor: A = h3.themeColor,
      overlayStyle: ae,
      tabIndex: ne,
      accessKey: se,
      popupSettings: v4 = {},
      modal: le2,
      onClick: F2,
      onItemClick: W,
      onFocus: O,
      onBlur: Z,
      onKeyDown: q,
      onOpen: _,
      onClose: H,
      ...ie2
    } = M3, j = n(), L = j ? j + Te2 : Be, X = t19.useRef(null), l6 = t19.useRef(null), re2 = t19.useRef(null), ce = t19.useRef(null), U2 = t19.useCallback(() => {
      l6.current && l6.current.focus();
    }, []), f2 = t19.useCallback(
      () => ({
        element: l6.current,
        focus: U2
      }),
      [U2]
    );
    t19.useImperativeHandle(X, f2), t19.useImperativeHandle(
      ee,
      () => X.current
    );
    const [i10, r10] = t19.useState(false), [E2, p9] = t19.useState(false), [g6, s15] = t19.useState(-1), ue = I() + "-button-id", z2 = u(l6, M3.dir), k2 = z2 === "rtl", x4 = I() + "-list-id";
    t19.useEffect(() => {
      m4(l6, u5, P2, k2);
    }, [l6, u5, P2, k2]), t19.useEffect(() => {
      E2 && l6 && l6.current && l6.current.focus();
    }, [E2, l6]);
    const m5 = t19.useCallback(
      (e18, a12) => {
        n14 && v(a12 ? _ : H, e18, f2(), void 0);
      },
      [_, H, n14]
    ), G5 = t19.useCallback(
      (e18) => {
        !e18.target || d2 || (!n14 && F2 ? v(
          F2,
          e18,
          f2(),
          void 0
        ) : (r10(!i10), p9(true), s15(i10 ? -1 : 0), m5(e18, !i10)));
      },
      [r10, p9, s15, F2, m5, i10, n14, d2]
    ), de = t19.useCallback(
      (e18) => {
        p9(true), s15(i10 ? 0 : -1), O && v(
          O,
          e18,
          f2(),
          void 0
        );
      },
      [O, p9, s15]
    ), fe = t19.useCallback(
      (e18) => {
        p9(false), r10(false), s15(-1), v(
          Z,
          e18,
          f2(),
          void 0
        ), i10 && m5(e18, false);
      },
      [Z, p9, r10, s15, m5]
    ), pe = t19.useCallback((e18) => {
      e18.preventDefault();
    }, []), T2 = t19.useCallback(
      (e18, a12) => {
        n14 && (n14[a12].disabled || v(W, e18, f2(), {
          itemProps: n14[a12],
          itemIndex: a12
        }));
      },
      [W]
    ), me = t19.useCallback(
      (e18, a12) => {
        !e18.target || !n14 || (s15(a12), r10(false), T2(e18, a12), m5(e18, false));
      },
      [s15, r10, T2, m5]
    ), be = t19.useCallback(
      (e18) => {
        o(document) === l6.current && e18.preventDefault();
      },
      [l6]
    ), ge = t19.useCallback(
      (e18) => {
        const a12 = g6, B = n14 ? n14.length : -1;
        if (e18.altKey) {
          !i10 && e18.keyCode === e2.down && (e18.preventDefault(), r10(true), s15(0)), i10 && e18.keyCode === e2.up && (e18.preventDefault(), r10(false), s15(-1));
          return;
        }
        switch (e18.keyCode) {
          case e2.enter:
          case e2.space:
            a12 >= 0 && T2(e18, a12), n14 || G5(e18), e18.preventDefault(), r10(!i10), s15(i10 ? -1 : 0);
            break;
          case e2.esc:
            e18.preventDefault(), r10(false), s15(-1);
            break;
          case e2.home:
            e18.preventDefault(), s15(0);
            break;
          case e2.end:
            e18.preventDefault(), s15(B - 1);
            break;
          case e2.down:
          case e2.right:
            e18.preventDefault(), s15(a12 + 1 >= B ? 0 : a12 + 1);
            break;
          case e2.up:
          case e2.left:
            e18.preventDefault(), s15(a12 - 1 < 0 ? B - 1 : a12 - 1);
            break;
        }
        v(
          q,
          e18,
          f2(),
          void 0
        );
      },
      [q, g6, s15, k2, r10]
    ), ke = t19.useMemo(
      () => n2(
        "k-fab k-fab-solid",
        {
          "k-fab-sm": y3 === "small",
          "k-fab-md": y3 === "medium",
          "k-fab-lg": y3 === "large",
          "k-disabled": d2,
          "k-pos-absolute": R === "absolute",
          "k-pos-fixed": R === "fixed",
          "k-focus": E2,
          [`k-rounded-${a4.roundedMap[I3] || I3}`]: I3,
          [`k-fab-solid-${A}`]: A
        },
        `k-${u5.vertical}-${u5.horizontal}`,
        $
      ),
      [A, y3, I3, d2, R, u5, E2, $]
    ), he = n14 && n14.map((e18, a12) => t19.createElement(
      f,
      {
        ...e18,
        key: a12,
        index: a12,
        id: `${x4}-${a12}`,
        disabled: d2 || e18.disabled,
        focused: g6 === a12,
        dataItem: e18,
        item: te2,
        className: n2(e18.className, b2(z2 || "ltr", u5.horizontal)),
        onClick: me,
        onDown: be
      }
    )), J2 = !!((N2 || w) && !C), Q3 = (l6.current ? l6.current.offsetWidth : 0) / 2 - 32 / 2;
    return t19.createElement(t.Provider, { value: L }, t19.createElement(t19.Fragment, null, t19.createElement(
      "button",
      {
        ref: l6,
        id: S || ue,
        role: "button",
        type: "button",
        "aria-disabled": d2,
        "aria-expanded": n14 ? i10 : void 0,
        "aria-haspopup": !!n14,
        "aria-label": `${C || ""} floatingactionbutton`,
        "aria-owns": n14 ? x4 : void 0,
        "aria-activedescendant": g6 >= 0 && n14 ? `${x4}-${g6}` : void 0,
        tabIndex: e3(ne, d2),
        accessKey: se,
        dir: z2,
        disabled: d2,
        className: ke,
        style: oe2,
        onClick: G5,
        onMouseDown: pe,
        onFocus: de,
        onBlur: fe,
        onKeyDown: ge,
        ...ie2
      },
      N2 || w ? t19.createElement(v2, { className: "k-fab-icon", name: N2, icon: w }) : K ? t19.createElement("span", { role: "presentation", className: K }) : null,
      C && t19.createElement("span", { className: "k-fab-text" }, C)
    ), le2 && i10 && t19.createElement(
      "div",
      {
        className: "k-overlay",
        style: {
          zIndex: L,
          ...ae
        }
      }
    ), t19.createElement(
      te,
      {
        ref: ce,
        anchor: l6.current,
        show: i10,
        animate: v4.animate,
        popupClass: n2("k-popup-transparent k-fab-popup", v4.popupClass),
        anchorAlign: v4.anchorAlign || y2(u5, k2),
        popupAlign: v4.popupAlign || x3(u5, k2),
        style: { boxShadow: "none" }
      },
      t19.createElement(
        "ul",
        {
          ref: re2,
          role: "menu",
          "aria-labelledby": S,
          id: x4,
          className: n2("k-fab-items", {
            "k-fab-items-bottom": u5.vertical !== "bottom",
            "k-fab-items-top": u5.vertical === "bottom"
          }),
          style: {
            paddingLeft: J2 ? Q3 : void 0,
            paddingRight: J2 ? Q3 : void 0
          }
        },
        he
      )
    )));
  }
);
Y.propTypes = {
  className: import_prop_types16.default.string,
  style: import_prop_types16.default.object,
  id: import_prop_types16.default.string,
  dir: import_prop_types16.default.string,
  tabIndex: import_prop_types16.default.number,
  accessKey: import_prop_types16.default.string,
  disabled: import_prop_types16.default.bool,
  icon: import_prop_types16.default.string,
  svgIcon: r,
  iconClass: import_prop_types16.default.string,
  text: import_prop_types16.default.string,
  alignOffset: import_prop_types16.default.shape({
    x: import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string]).isRequired,
    y: import_prop_types16.default.oneOfType([import_prop_types16.default.number, import_prop_types16.default.string]).isRequired
  }),
  align: import_prop_types16.default.shape({
    vertical: import_prop_types16.default.oneOf(["top", "middle", "bottom"]).isRequired,
    horizontal: import_prop_types16.default.oneOf(["start", "center", "end"]).isRequired
  }),
  positionMode: import_prop_types16.default.oneOf(["absolute", "fixed"]),
  size: import_prop_types16.default.oneOf([null, "small", "medium", "large"]),
  rounded: import_prop_types16.default.oneOf([null, "small", "medium", "large", "full"]),
  themeColor: import_prop_types16.default.oneOf([
    null,
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ]),
  modal: import_prop_types16.default.bool,
  overlayStyle: import_prop_types16.default.object
};
var h3 = {
  align: { vertical: "bottom", horizontal: "end" },
  size: "medium",
  rounded: "full",
  themeColor: "primary",
  positionMode: "fixed"
};
Y.displayName = "KendoFloatingActionButton";

// node_modules/@progress/kendo-react-buttons/index.mjs
var p8 = a2(
  V
);
p8.displayName = "KendoReactDropDownButton";
var n13 = a2(
  g3
);
n13.displayName = "KendoReactSplitButton";

export {
  M2 as M,
  T,
  e6 as e,
  te,
  caretAltUpIcon,
  caretAltRightIcon,
  caretAltDownIcon,
  caretAltLeftIcon,
  caretAltToTopIcon,
  caretAltToRightIcon,
  caretAltToBottomIcon,
  caretAltToLeftIcon,
  caretAltExpandIcon,
  chevronUpIcon,
  chevronRightIcon,
  chevronDownIcon,
  chevronLeftIcon,
  arrowsSwapIcon,
  gridIcon,
  groupIcon,
  ungroupIcon,
  reorderIcon,
  moreVerticalIcon,
  dropletSliderIcon,
  clockIcon,
  calendarIcon,
  pencilIcon,
  trashIcon,
  cancelIcon,
  checkIcon,
  checkOutlineIcon,
  xIcon,
  xCircleIcon,
  plusIcon,
  minusIcon,
  sortAscSmallIcon,
  sortDescSmallIcon,
  filterIcon,
  filterClearIcon,
  filterAddExpressionIcon,
  filterAddGroupIcon,
  hyperlinkOpenIcon,
  windowIcon,
  windowRestoreIcon,
  windowMinimizeIcon,
  searchIcon,
  starOutlineIcon,
  starIcon,
  exclamationCircleIcon,
  paletteIcon,
  dropletSlashIcon,
  insertTopIcon,
  insertMiddleIcon,
  insertBottomIcon,
  clipboardIcon,
  tableUnmergeIcon,
  tableBodyIcon,
  tableRowGroupsIcon,
  fileTxtIcon,
  fileExcelIcon,
  filePdfIcon,
  pageHeaderSectionIcon,
  g3 as g,
  s7 as s,
  V,
  o2 as o,
  t6 as t,
  localeInfo,
  o3 as o2,
  s9 as s2,
  l3 as l,
  s10 as s3,
  p5 as p,
  v3 as v,
  G4 as G,
  i7 as i,
  i8 as i2,
  N,
  t15 as t2,
  s11 as s4,
  z,
  E,
  f,
  Y,
  p8 as p2,
  n13 as n
};
/*! Bundled license information:

@progress/kendo-react-buttons/Button.mjs:
@progress/kendo-react-buttons/ButtonGroup.mjs:
@progress/kendo-react-buttons/ListButton/ButtonItem.mjs:
@progress/kendo-react-buttons/ListButton/SplitButtonItem.mjs:
@progress/kendo-react-buttons/ListButton/utils/navigation.mjs:
@progress/kendo-react-popup/animation.mjs:
@progress/kendo-react-popup/util.mjs:
@progress/kendo-react-popup/Popup.mjs:
@progress/kendo-react-popup/index.mjs:
@progress/kendo-react-buttons/ListButton/utils/popup.mjs:
@progress/kendo-react-buttons/package-metadata.mjs:
@progress/kendo-react-buttons/ListButton/SplitButton.mjs:
@progress/kendo-react-buttons/ListButton/DropDownButtonItem.mjs:
@progress/kendo-react-buttons/ListButton/DropDownButton.mjs:
@progress/kendo-react-buttons/util.mjs:
@progress/kendo-react-buttons/toolbar/tools/ToolbarSeparator.mjs:
@progress/kendo-react-intl/Intl/IntlService.mjs:
@progress/kendo-react-intl/Localization/messages.mjs:
@progress/kendo-react-intl/Localization/LocalizationService.mjs:
@progress/kendo-react-intl/globalization/GlobalizationContext.mjs:
@progress/kendo-react-intl/intlUtils.mjs:
@progress/kendo-react-intl/Intl/IntlProvider.mjs:
@progress/kendo-react-intl/Intl/load.mjs:
@progress/kendo-react-intl/Intl/IntlDataProvider.mjs:
@progress/kendo-react-intl/Localization/LocalizationProvider.mjs:
@progress/kendo-react-intl/Localization/loadMessages.mjs:
@progress/kendo-react-intl/Localization/LocalizationDataProvider.mjs:
@progress/kendo-react-intl/server/ServerGlobalization.mjs:
@progress/kendo-react-intl/hooks/useInternationalization.mjs:
@progress/kendo-react-intl/hooks/useLocalization.mjs:
@progress/kendo-react-intl/index.mjs:
@progress/kendo-react-buttons/toolbar/messages/index.mjs:
@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollButton.mjs:
@progress/kendo-react-buttons/toolbar/tools/ToolbarScrollable.mjs:
@progress/kendo-react-buttons/toolbar/tools/ToolbarOverflowSection.mjs:
@progress/kendo-react-buttons/toolbar/Toolbar.mjs:
@progress/kendo-react-buttons/toolbar/tools/ToolbarItem.mjs:
@progress/kendo-react-buttons/toolbar/tools/ToolbarSpacer.mjs:
@progress/kendo-react-buttons/Chip/chip-list-contexts.mjs:
@progress/kendo-react-buttons/Chip/focus-reducer.mjs:
@progress/kendo-react-buttons/Chip/data-reducer.mjs:
@progress/kendo-react-buttons/Chip/selection-reducer.mjs:
@progress/kendo-react-buttons/Chip/Chip.mjs:
@progress/kendo-react-buttons/Chip/ChipList.mjs:
@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButtonItem.mjs:
@progress/kendo-react-buttons/FloatingActionButton/utils.mjs:
@progress/kendo-react-buttons/FloatingActionButton/FloatingActionButton.mjs:
@progress/kendo-react-buttons/index.mjs:
  (**
   * @license
   *-------------------------------------------------------------------------------------------
   * Copyright © 2025 Progress Software Corporation. All rights reserved.
   * Licensed under commercial license. See LICENSE.md in the package root for more information
   *-------------------------------------------------------------------------------------------
   *)
*/
//# sourceMappingURL=chunk-THO3O5PE.js.map
