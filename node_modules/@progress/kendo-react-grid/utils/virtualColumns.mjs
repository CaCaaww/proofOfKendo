/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
function h(a) {
  const { cellModels: l, columns: o = [], tableViewPortWidth: u, scrollLeft: d } = a;
  let n = 0, t = l.length - 1, i = 0, c = 0;
  for (let e = 0; e < l.length; e++)
    if (!o[l[e].columnIndex].locked && (i = c, c += l[e].width || 10, c >= d)) {
      n = e;
      break;
    }
  for (let e = n; e < l.length; e++)
    if (!o[l[e].columnIndex].locked)
      if (i < u + d)
        i += l[e].width || 10, t = e;
      else
        break;
  n > 0 && n--, t < l.length - 1 && t++;
  let r = 0, f = 0;
  for (let e = 0; e < n; e++)
    o[l[e].columnIndex].locked || (r += l[e].colSpan);
  for (let e = t + 1; e < l.length; e++)
    o[l[e].columnIndex].locked || (f += l[e].colSpan);
  return l[n].colSpan += r, l[t].colSpan += f, l.slice(n, t + 1);
}
export {
  h as getVirtualCellsToRender
};
